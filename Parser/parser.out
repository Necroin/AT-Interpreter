Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> functions
Rule 2     functions -> function functions
Rule 3     functions -> function
Rule 4     function -> func_decl NEWLINE func_body RESULT expression NEWLINE
Rule 5     func_body -> statements
Rule 6     func_body -> empty
Rule 7     func_decl -> TASK VARIABLE parameters
Rule 8     parameters -> VARIABLE parameters
Rule 9     parameters -> VARIABLE
Rule 10    parameters -> empty
Rule 11    statements -> statement statements
Rule 12    statements -> statement
Rule 13    statement -> PLEASE statement THANKS NEWLINE
Rule 14    statement -> var_declaration NEWLINE
Rule 15    statement -> expression NEWLINE
Rule 16    statement -> for
Rule 17    statement -> switch
Rule 18    statement -> command NEWLINE
Rule 19    statement -> empty NEWLINE
Rule 20    command -> MOVE
Rule 21    command -> ROTATE_LEFT
Rule 22    command -> ROTATE_RIGHT
Rule 23    command -> GET_ENVIRONMENT
Rule 24    for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group
Rule 25    statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE
Rule 26    statements_group -> statement
Rule 27    statements_group -> LBRACKET RBRACKET NEWLINE
Rule 28    switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group
Rule 29    switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group
Rule 30    assignment -> expression ASSIGNMENT expression
Rule 31    expression -> expression binary_operator expression
Rule 32    binary_operator -> PLUS
Rule 33    binary_operator -> MINUS
Rule 34    binary_operator -> MULTIPLY
Rule 35    binary_operator -> DIVIDE
Rule 36    binary_operator -> AND_OPERATOR
Rule 37    expression -> unary_operator expression
Rule 38    unary_operator -> MXEQ_OPERATOR
Rule 39    unary_operator -> MXLT_OPERATOR
Rule 40    unary_operator -> MXGT_OPERATOR
Rule 41    unary_operator -> MXLTE_OPERATOR
Rule 42    unary_operator -> MXGTE_OPERATOR
Rule 43    unary_operator -> ELEQ_OPERATOR
Rule 44    unary_operator -> ELLT_OPERATOR
Rule 45    unary_operator -> ELGT_OPERATOR
Rule 46    unary_operator -> ELLTE_OPERATOR
Rule 47    unary_operator -> ELGTE_OPERATOR
Rule 48    unary_operator -> NOT_OPERATOR
Rule 49    unary_operator -> MXTRUE_OPERATOR
Rule 50    unary_operator -> MXFALSE_OPERATOR
Rule 51    unary_operator -> SIZE_OPERATOR
Rule 52    unary_operator -> LOGITIZE_OPERATOR
Rule 53    unary_operator -> DIGITIZE_OPERATOR
Rule 54    expression -> base_values
Rule 55    expression -> assignment
Rule 56    expression -> indexing
Rule 57    expression -> do
Rule 58    expression -> get
Rule 59    expression -> reduce
Rule 60    expression -> extend
Rule 61    reduce -> REDUCE_OPERATOR expression dimensions
Rule 62    extend -> EXTEND_OPERATOR expression dimensions
Rule 63    do -> DO VARIABLE call_parameters
Rule 64    call_parameters -> call_parameter call_parameters
Rule 65    call_parameters -> call_parameter
Rule 66    call_parameter -> expression
Rule 67    get -> GET VARIABLE
Rule 68    expression -> LBRACKET expression RBRACKET
Rule 69    expression -> VARIABLE
Rule 70    number -> OCT_NUMBER
Rule 71    number -> DEC_NUMBER
Rule 72    number -> HEX_NUMBER
Rule 73    boolean -> TRUE
Rule 74    boolean -> FALSE
Rule 75    base_values -> number
Rule 76    base_values -> boolean
Rule 77    initializer -> base_values
Rule 78    var_declaration -> VAR VARIABLE OS_BRACKET dimensions CS_BRACKET ASSIGNMENT initializer
Rule 79    var_declaration -> VAR VARIABLE ASSIGNMENT expression
Rule 80    indexing -> expression OS_BRACKET dimensions CS_BRACKET
Rule 81    dimensions -> dimension COMMA dimensions
Rule 82    dimensions -> dimension
Rule 83    dimension -> expression
Rule 84    empty -> <empty>

Terminals, with rules where they appear

AND_OPERATOR         : 36
ASSIGNMENT           : 30 78 79
BOUNDARY             : 24
COMMA                : 81
CS_BRACKET           : 78 80
DEC_NUMBER           : 71
DIGITIZE_OPERATOR    : 53
DIVIDE               : 35
DO                   : 63
ELEQ_OPERATOR        : 43
ELGTE_OPERATOR       : 47
ELGT_OPERATOR        : 45
ELLTE_OPERATOR       : 46
ELLT_OPERATOR        : 44
EXTEND_OPERATOR      : 62
FALSE                : 28 29 74
FOR                  : 24
GET                  : 67
GET_ENVIRONMENT      : 23
HEX_NUMBER           : 72
LBRACKET             : 25 27 68
LOGITIZE_OPERATOR    : 52
MINUS                : 33
MOVE                 : 20
MULTIPLY             : 34
MXEQ_OPERATOR        : 38
MXFALSE_OPERATOR     : 50
MXGTE_OPERATOR       : 42
MXGT_OPERATOR        : 40
MXLTE_OPERATOR       : 41
MXLT_OPERATOR        : 39
MXTRUE_OPERATOR      : 49
NEWLINE              : 4 4 13 14 15 18 19 25 25 27 28 29
NOT_OPERATOR         : 48
OCT_NUMBER           : 70
OS_BRACKET           : 78 80
PLEASE               : 13
PLUS                 : 32
RBRACKET             : 25 27 68
REDUCE_OPERATOR      : 61
RESULT               : 4
ROTATE_LEFT          : 21
ROTATE_RIGHT         : 22
SIZE_OPERATOR        : 51
STEP                 : 24
SWITCH               : 28 29
TASK                 : 7
THANKS               : 13
TRUE                 : 28 29 73
VAR                  : 78 79
VARIABLE             : 7 8 9 24 24 24 63 67 69 78 79
error                : 

Nonterminals, with rules where they appear

assignment           : 55
base_values          : 54 77
binary_operator      : 31
boolean              : 76
call_parameter       : 64 65
call_parameters      : 63 64
command              : 18
dimension            : 81 82
dimensions           : 61 62 78 80 81
do                   : 57
empty                : 6 10 19
expression           : 4 15 28 29 30 30 31 31 37 61 62 66 68 79 80 83
extend               : 60
for                  : 16
func_body            : 4
func_decl            : 4
function             : 2 3
functions            : 1 2
get                  : 58
indexing             : 56
initializer          : 78
number               : 75
parameters           : 7 8
program              : 0
reduce               : 59
statement            : 11 12 13 26
statements           : 5 11 25
statements_group     : 24 28 28 29 29
switch               : 17
unary_operator       : 37
var_declaration      : 14

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . functions
    (2) functions -> . function functions
    (3) functions -> . function
    (4) function -> . func_decl NEWLINE func_body RESULT expression NEWLINE
    (7) func_decl -> . TASK VARIABLE parameters

    TASK            shift and go to state 5

    program                        shift and go to state 1
    functions                      shift and go to state 2
    function                       shift and go to state 3
    func_decl                      shift and go to state 4

state 1

    (0) S' -> program .



state 2

    (1) program -> functions .

    $end            reduce using rule 1 (program -> functions .)


state 3

    (2) functions -> function . functions
    (3) functions -> function .
    (2) functions -> . function functions
    (3) functions -> . function
    (4) function -> . func_decl NEWLINE func_body RESULT expression NEWLINE
    (7) func_decl -> . TASK VARIABLE parameters

    $end            reduce using rule 3 (functions -> function .)
    TASK            shift and go to state 5

    function                       shift and go to state 3
    functions                      shift and go to state 6
    func_decl                      shift and go to state 4

state 4

    (4) function -> func_decl . NEWLINE func_body RESULT expression NEWLINE

    NEWLINE         shift and go to state 7


state 5

    (7) func_decl -> TASK . VARIABLE parameters

    VARIABLE        shift and go to state 8


state 6

    (2) functions -> function functions .

    $end            reduce using rule 2 (functions -> function functions .)


state 7

    (4) function -> func_decl NEWLINE . func_body RESULT expression NEWLINE
    (5) func_body -> . statements
    (6) func_body -> . empty
    (11) statements -> . statement statements
    (12) statements -> . statement
    (84) empty -> .
    (13) statement -> . PLEASE statement THANKS NEWLINE
    (14) statement -> . var_declaration NEWLINE
    (15) statement -> . expression NEWLINE
    (16) statement -> . for
    (17) statement -> . switch
    (18) statement -> . command NEWLINE
    (19) statement -> . empty NEWLINE
    (78) var_declaration -> . VAR VARIABLE OS_BRACKET dimensions CS_BRACKET ASSIGNMENT initializer
    (79) var_declaration -> . VAR VARIABLE ASSIGNMENT expression
    (31) expression -> . expression binary_operator expression
    (37) expression -> . unary_operator expression
    (54) expression -> . base_values
    (55) expression -> . assignment
    (56) expression -> . indexing
    (57) expression -> . do
    (58) expression -> . get
    (59) expression -> . reduce
    (60) expression -> . extend
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . VARIABLE
    (24) for -> . FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group
    (28) switch -> . SWITCH expression NEWLINE TRUE statements_group FALSE statements_group
    (29) switch -> . SWITCH expression NEWLINE FALSE statements_group TRUE statements_group
    (20) command -> . MOVE
    (21) command -> . ROTATE_LEFT
    (22) command -> . ROTATE_RIGHT
    (23) command -> . GET_ENVIRONMENT
    (38) unary_operator -> . MXEQ_OPERATOR
    (39) unary_operator -> . MXLT_OPERATOR
    (40) unary_operator -> . MXGT_OPERATOR
    (41) unary_operator -> . MXLTE_OPERATOR
    (42) unary_operator -> . MXGTE_OPERATOR
    (43) unary_operator -> . ELEQ_OPERATOR
    (44) unary_operator -> . ELLT_OPERATOR
    (45) unary_operator -> . ELGT_OPERATOR
    (46) unary_operator -> . ELLTE_OPERATOR
    (47) unary_operator -> . ELGTE_OPERATOR
    (48) unary_operator -> . NOT_OPERATOR
    (49) unary_operator -> . MXTRUE_OPERATOR
    (50) unary_operator -> . MXFALSE_OPERATOR
    (51) unary_operator -> . SIZE_OPERATOR
    (52) unary_operator -> . LOGITIZE_OPERATOR
    (53) unary_operator -> . DIGITIZE_OPERATOR
    (75) base_values -> . number
    (76) base_values -> . boolean
    (30) assignment -> . expression ASSIGNMENT expression
    (80) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (63) do -> . DO VARIABLE call_parameters
    (67) get -> . GET VARIABLE
    (61) reduce -> . REDUCE_OPERATOR expression dimensions
    (62) extend -> . EXTEND_OPERATOR expression dimensions
    (70) number -> . OCT_NUMBER
    (71) number -> . DEC_NUMBER
    (72) number -> . HEX_NUMBER
    (73) boolean -> . TRUE
    (74) boolean -> . FALSE

    NEWLINE         reduce using rule 84 (empty -> .)
    RESULT          reduce using rule 84 (empty -> .)
    PLEASE          shift and go to state 14
    VAR             shift and go to state 19
    LBRACKET        shift and go to state 29
    VARIABLE        shift and go to state 20
    FOR             shift and go to state 30
    SWITCH          shift and go to state 31
    MOVE            shift and go to state 34
    ROTATE_LEFT     shift and go to state 35
    ROTATE_RIGHT    shift and go to state 36
    GET_ENVIRONMENT shift and go to state 37
    MXEQ_OPERATOR   shift and go to state 38
    MXLT_OPERATOR   shift and go to state 39
    MXGT_OPERATOR   shift and go to state 40
    MXLTE_OPERATOR  shift and go to state 41
    MXGTE_OPERATOR  shift and go to state 42
    ELEQ_OPERATOR   shift and go to state 43
    ELLT_OPERATOR   shift and go to state 44
    ELGT_OPERATOR   shift and go to state 45
    ELLTE_OPERATOR  shift and go to state 46
    ELGTE_OPERATOR  shift and go to state 47
    NOT_OPERATOR    shift and go to state 48
    MXTRUE_OPERATOR shift and go to state 49
    MXFALSE_OPERATOR shift and go to state 50
    SIZE_OPERATOR   shift and go to state 51
    LOGITIZE_OPERATOR shift and go to state 52
    DIGITIZE_OPERATOR shift and go to state 53
    DO              shift and go to state 56
    GET             shift and go to state 57
    REDUCE_OPERATOR shift and go to state 58
    EXTEND_OPERATOR shift and go to state 59
    OCT_NUMBER      shift and go to state 60
    DEC_NUMBER      shift and go to state 61
    HEX_NUMBER      shift and go to state 62
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    func_body                      shift and go to state 9
    expression                     shift and go to state 10
    statements                     shift and go to state 11
    empty                          shift and go to state 12
    statement                      shift and go to state 13
    var_declaration                shift and go to state 15
    for                            shift and go to state 16
    switch                         shift and go to state 17
    command                        shift and go to state 18
    unary_operator                 shift and go to state 21
    base_values                    shift and go to state 22
    assignment                     shift and go to state 23
    indexing                       shift and go to state 24
    do                             shift and go to state 25
    get                            shift and go to state 26
    reduce                         shift and go to state 27
    extend                         shift and go to state 28
    number                         shift and go to state 54
    boolean                        shift and go to state 55

state 8

    (7) func_decl -> TASK VARIABLE . parameters
    (8) parameters -> . VARIABLE parameters
    (9) parameters -> . VARIABLE
    (10) parameters -> . empty
    (84) empty -> .

    VARIABLE        shift and go to state 63
    NEWLINE         reduce using rule 84 (empty -> .)

    parameters                     shift and go to state 64
    empty                          shift and go to state 65

state 9

    (4) function -> func_decl NEWLINE func_body . RESULT expression NEWLINE

    RESULT          shift and go to state 66


state 10

    (15) statement -> expression . NEWLINE
    (31) expression -> expression . binary_operator expression
    (30) assignment -> expression . ASSIGNMENT expression
    (80) indexing -> expression . OS_BRACKET dimensions CS_BRACKET
    (32) binary_operator -> . PLUS
    (33) binary_operator -> . MINUS
    (34) binary_operator -> . MULTIPLY
    (35) binary_operator -> . DIVIDE
    (36) binary_operator -> . AND_OPERATOR

    NEWLINE         shift and go to state 67
    ASSIGNMENT      shift and go to state 69
    OS_BRACKET      shift and go to state 70
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    MULTIPLY        shift and go to state 73
    DIVIDE          shift and go to state 74
    AND_OPERATOR    shift and go to state 75

    binary_operator                shift and go to state 68

state 11

    (5) func_body -> statements .

    RESULT          reduce using rule 5 (func_body -> statements .)


state 12

    (6) func_body -> empty .
    (19) statement -> empty . NEWLINE

    RESULT          reduce using rule 6 (func_body -> empty .)
    NEWLINE         shift and go to state 76


state 13

    (11) statements -> statement . statements
    (12) statements -> statement .
    (11) statements -> . statement statements
    (12) statements -> . statement
    (13) statement -> . PLEASE statement THANKS NEWLINE
    (14) statement -> . var_declaration NEWLINE
    (15) statement -> . expression NEWLINE
    (16) statement -> . for
    (17) statement -> . switch
    (18) statement -> . command NEWLINE
    (19) statement -> . empty NEWLINE
    (78) var_declaration -> . VAR VARIABLE OS_BRACKET dimensions CS_BRACKET ASSIGNMENT initializer
    (79) var_declaration -> . VAR VARIABLE ASSIGNMENT expression
    (31) expression -> . expression binary_operator expression
    (37) expression -> . unary_operator expression
    (54) expression -> . base_values
    (55) expression -> . assignment
    (56) expression -> . indexing
    (57) expression -> . do
    (58) expression -> . get
    (59) expression -> . reduce
    (60) expression -> . extend
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . VARIABLE
    (24) for -> . FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group
    (28) switch -> . SWITCH expression NEWLINE TRUE statements_group FALSE statements_group
    (29) switch -> . SWITCH expression NEWLINE FALSE statements_group TRUE statements_group
    (20) command -> . MOVE
    (21) command -> . ROTATE_LEFT
    (22) command -> . ROTATE_RIGHT
    (23) command -> . GET_ENVIRONMENT
    (84) empty -> .
    (38) unary_operator -> . MXEQ_OPERATOR
    (39) unary_operator -> . MXLT_OPERATOR
    (40) unary_operator -> . MXGT_OPERATOR
    (41) unary_operator -> . MXLTE_OPERATOR
    (42) unary_operator -> . MXGTE_OPERATOR
    (43) unary_operator -> . ELEQ_OPERATOR
    (44) unary_operator -> . ELLT_OPERATOR
    (45) unary_operator -> . ELGT_OPERATOR
    (46) unary_operator -> . ELLTE_OPERATOR
    (47) unary_operator -> . ELGTE_OPERATOR
    (48) unary_operator -> . NOT_OPERATOR
    (49) unary_operator -> . MXTRUE_OPERATOR
    (50) unary_operator -> . MXFALSE_OPERATOR
    (51) unary_operator -> . SIZE_OPERATOR
    (52) unary_operator -> . LOGITIZE_OPERATOR
    (53) unary_operator -> . DIGITIZE_OPERATOR
    (75) base_values -> . number
    (76) base_values -> . boolean
    (30) assignment -> . expression ASSIGNMENT expression
    (80) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (63) do -> . DO VARIABLE call_parameters
    (67) get -> . GET VARIABLE
    (61) reduce -> . REDUCE_OPERATOR expression dimensions
    (62) extend -> . EXTEND_OPERATOR expression dimensions
    (70) number -> . OCT_NUMBER
    (71) number -> . DEC_NUMBER
    (72) number -> . HEX_NUMBER
    (73) boolean -> . TRUE
    (74) boolean -> . FALSE

    RESULT          reduce using rule 12 (statements -> statement .)
    RBRACKET        reduce using rule 12 (statements -> statement .)
    PLEASE          shift and go to state 14
    VAR             shift and go to state 19
    LBRACKET        shift and go to state 29
    VARIABLE        shift and go to state 20
    FOR             shift and go to state 30
    SWITCH          shift and go to state 31
    MOVE            shift and go to state 34
    ROTATE_LEFT     shift and go to state 35
    ROTATE_RIGHT    shift and go to state 36
    GET_ENVIRONMENT shift and go to state 37
    NEWLINE         reduce using rule 84 (empty -> .)
    MXEQ_OPERATOR   shift and go to state 38
    MXLT_OPERATOR   shift and go to state 39
    MXGT_OPERATOR   shift and go to state 40
    MXLTE_OPERATOR  shift and go to state 41
    MXGTE_OPERATOR  shift and go to state 42
    ELEQ_OPERATOR   shift and go to state 43
    ELLT_OPERATOR   shift and go to state 44
    ELGT_OPERATOR   shift and go to state 45
    ELLTE_OPERATOR  shift and go to state 46
    ELGTE_OPERATOR  shift and go to state 47
    NOT_OPERATOR    shift and go to state 48
    MXTRUE_OPERATOR shift and go to state 49
    MXFALSE_OPERATOR shift and go to state 50
    SIZE_OPERATOR   shift and go to state 51
    LOGITIZE_OPERATOR shift and go to state 52
    DIGITIZE_OPERATOR shift and go to state 53
    DO              shift and go to state 56
    GET             shift and go to state 57
    REDUCE_OPERATOR shift and go to state 58
    EXTEND_OPERATOR shift and go to state 59
    OCT_NUMBER      shift and go to state 60
    DEC_NUMBER      shift and go to state 61
    HEX_NUMBER      shift and go to state 62
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    statement                      shift and go to state 13
    statements                     shift and go to state 77
    var_declaration                shift and go to state 15
    expression                     shift and go to state 10
    for                            shift and go to state 16
    switch                         shift and go to state 17
    command                        shift and go to state 18
    empty                          shift and go to state 78
    unary_operator                 shift and go to state 21
    base_values                    shift and go to state 22
    assignment                     shift and go to state 23
    indexing                       shift and go to state 24
    do                             shift and go to state 25
    get                            shift and go to state 26
    reduce                         shift and go to state 27
    extend                         shift and go to state 28
    number                         shift and go to state 54
    boolean                        shift and go to state 55

state 14

    (13) statement -> PLEASE . statement THANKS NEWLINE
    (13) statement -> . PLEASE statement THANKS NEWLINE
    (14) statement -> . var_declaration NEWLINE
    (15) statement -> . expression NEWLINE
    (16) statement -> . for
    (17) statement -> . switch
    (18) statement -> . command NEWLINE
    (19) statement -> . empty NEWLINE
    (78) var_declaration -> . VAR VARIABLE OS_BRACKET dimensions CS_BRACKET ASSIGNMENT initializer
    (79) var_declaration -> . VAR VARIABLE ASSIGNMENT expression
    (31) expression -> . expression binary_operator expression
    (37) expression -> . unary_operator expression
    (54) expression -> . base_values
    (55) expression -> . assignment
    (56) expression -> . indexing
    (57) expression -> . do
    (58) expression -> . get
    (59) expression -> . reduce
    (60) expression -> . extend
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . VARIABLE
    (24) for -> . FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group
    (28) switch -> . SWITCH expression NEWLINE TRUE statements_group FALSE statements_group
    (29) switch -> . SWITCH expression NEWLINE FALSE statements_group TRUE statements_group
    (20) command -> . MOVE
    (21) command -> . ROTATE_LEFT
    (22) command -> . ROTATE_RIGHT
    (23) command -> . GET_ENVIRONMENT
    (84) empty -> .
    (38) unary_operator -> . MXEQ_OPERATOR
    (39) unary_operator -> . MXLT_OPERATOR
    (40) unary_operator -> . MXGT_OPERATOR
    (41) unary_operator -> . MXLTE_OPERATOR
    (42) unary_operator -> . MXGTE_OPERATOR
    (43) unary_operator -> . ELEQ_OPERATOR
    (44) unary_operator -> . ELLT_OPERATOR
    (45) unary_operator -> . ELGT_OPERATOR
    (46) unary_operator -> . ELLTE_OPERATOR
    (47) unary_operator -> . ELGTE_OPERATOR
    (48) unary_operator -> . NOT_OPERATOR
    (49) unary_operator -> . MXTRUE_OPERATOR
    (50) unary_operator -> . MXFALSE_OPERATOR
    (51) unary_operator -> . SIZE_OPERATOR
    (52) unary_operator -> . LOGITIZE_OPERATOR
    (53) unary_operator -> . DIGITIZE_OPERATOR
    (75) base_values -> . number
    (76) base_values -> . boolean
    (30) assignment -> . expression ASSIGNMENT expression
    (80) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (63) do -> . DO VARIABLE call_parameters
    (67) get -> . GET VARIABLE
    (61) reduce -> . REDUCE_OPERATOR expression dimensions
    (62) extend -> . EXTEND_OPERATOR expression dimensions
    (70) number -> . OCT_NUMBER
    (71) number -> . DEC_NUMBER
    (72) number -> . HEX_NUMBER
    (73) boolean -> . TRUE
    (74) boolean -> . FALSE

    PLEASE          shift and go to state 14
    VAR             shift and go to state 19
    LBRACKET        shift and go to state 29
    VARIABLE        shift and go to state 20
    FOR             shift and go to state 30
    SWITCH          shift and go to state 31
    MOVE            shift and go to state 34
    ROTATE_LEFT     shift and go to state 35
    ROTATE_RIGHT    shift and go to state 36
    GET_ENVIRONMENT shift and go to state 37
    NEWLINE         reduce using rule 84 (empty -> .)
    MXEQ_OPERATOR   shift and go to state 38
    MXLT_OPERATOR   shift and go to state 39
    MXGT_OPERATOR   shift and go to state 40
    MXLTE_OPERATOR  shift and go to state 41
    MXGTE_OPERATOR  shift and go to state 42
    ELEQ_OPERATOR   shift and go to state 43
    ELLT_OPERATOR   shift and go to state 44
    ELGT_OPERATOR   shift and go to state 45
    ELLTE_OPERATOR  shift and go to state 46
    ELGTE_OPERATOR  shift and go to state 47
    NOT_OPERATOR    shift and go to state 48
    MXTRUE_OPERATOR shift and go to state 49
    MXFALSE_OPERATOR shift and go to state 50
    SIZE_OPERATOR   shift and go to state 51
    LOGITIZE_OPERATOR shift and go to state 52
    DIGITIZE_OPERATOR shift and go to state 53
    DO              shift and go to state 56
    GET             shift and go to state 57
    REDUCE_OPERATOR shift and go to state 58
    EXTEND_OPERATOR shift and go to state 59
    OCT_NUMBER      shift and go to state 60
    DEC_NUMBER      shift and go to state 61
    HEX_NUMBER      shift and go to state 62
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    statement                      shift and go to state 79
    var_declaration                shift and go to state 15
    expression                     shift and go to state 10
    for                            shift and go to state 16
    switch                         shift and go to state 17
    command                        shift and go to state 18
    empty                          shift and go to state 78
    unary_operator                 shift and go to state 21
    base_values                    shift and go to state 22
    assignment                     shift and go to state 23
    indexing                       shift and go to state 24
    do                             shift and go to state 25
    get                            shift and go to state 26
    reduce                         shift and go to state 27
    extend                         shift and go to state 28
    number                         shift and go to state 54
    boolean                        shift and go to state 55

state 15

    (14) statement -> var_declaration . NEWLINE

    NEWLINE         shift and go to state 80


state 16

    (16) statement -> for .

    PLEASE          reduce using rule 16 (statement -> for .)
    VAR             reduce using rule 16 (statement -> for .)
    LBRACKET        reduce using rule 16 (statement -> for .)
    VARIABLE        reduce using rule 16 (statement -> for .)
    FOR             reduce using rule 16 (statement -> for .)
    SWITCH          reduce using rule 16 (statement -> for .)
    MOVE            reduce using rule 16 (statement -> for .)
    ROTATE_LEFT     reduce using rule 16 (statement -> for .)
    ROTATE_RIGHT    reduce using rule 16 (statement -> for .)
    GET_ENVIRONMENT reduce using rule 16 (statement -> for .)
    MXEQ_OPERATOR   reduce using rule 16 (statement -> for .)
    MXLT_OPERATOR   reduce using rule 16 (statement -> for .)
    MXGT_OPERATOR   reduce using rule 16 (statement -> for .)
    MXLTE_OPERATOR  reduce using rule 16 (statement -> for .)
    MXGTE_OPERATOR  reduce using rule 16 (statement -> for .)
    ELEQ_OPERATOR   reduce using rule 16 (statement -> for .)
    ELLT_OPERATOR   reduce using rule 16 (statement -> for .)
    ELGT_OPERATOR   reduce using rule 16 (statement -> for .)
    ELLTE_OPERATOR  reduce using rule 16 (statement -> for .)
    ELGTE_OPERATOR  reduce using rule 16 (statement -> for .)
    NOT_OPERATOR    reduce using rule 16 (statement -> for .)
    MXTRUE_OPERATOR reduce using rule 16 (statement -> for .)
    MXFALSE_OPERATOR reduce using rule 16 (statement -> for .)
    SIZE_OPERATOR   reduce using rule 16 (statement -> for .)
    LOGITIZE_OPERATOR reduce using rule 16 (statement -> for .)
    DIGITIZE_OPERATOR reduce using rule 16 (statement -> for .)
    DO              reduce using rule 16 (statement -> for .)
    GET             reduce using rule 16 (statement -> for .)
    REDUCE_OPERATOR reduce using rule 16 (statement -> for .)
    EXTEND_OPERATOR reduce using rule 16 (statement -> for .)
    OCT_NUMBER      reduce using rule 16 (statement -> for .)
    DEC_NUMBER      reduce using rule 16 (statement -> for .)
    HEX_NUMBER      reduce using rule 16 (statement -> for .)
    TRUE            reduce using rule 16 (statement -> for .)
    FALSE           reduce using rule 16 (statement -> for .)
    NEWLINE         reduce using rule 16 (statement -> for .)
    RESULT          reduce using rule 16 (statement -> for .)
    RBRACKET        reduce using rule 16 (statement -> for .)
    THANKS          reduce using rule 16 (statement -> for .)


state 17

    (17) statement -> switch .

    PLEASE          reduce using rule 17 (statement -> switch .)
    VAR             reduce using rule 17 (statement -> switch .)
    LBRACKET        reduce using rule 17 (statement -> switch .)
    VARIABLE        reduce using rule 17 (statement -> switch .)
    FOR             reduce using rule 17 (statement -> switch .)
    SWITCH          reduce using rule 17 (statement -> switch .)
    MOVE            reduce using rule 17 (statement -> switch .)
    ROTATE_LEFT     reduce using rule 17 (statement -> switch .)
    ROTATE_RIGHT    reduce using rule 17 (statement -> switch .)
    GET_ENVIRONMENT reduce using rule 17 (statement -> switch .)
    MXEQ_OPERATOR   reduce using rule 17 (statement -> switch .)
    MXLT_OPERATOR   reduce using rule 17 (statement -> switch .)
    MXGT_OPERATOR   reduce using rule 17 (statement -> switch .)
    MXLTE_OPERATOR  reduce using rule 17 (statement -> switch .)
    MXGTE_OPERATOR  reduce using rule 17 (statement -> switch .)
    ELEQ_OPERATOR   reduce using rule 17 (statement -> switch .)
    ELLT_OPERATOR   reduce using rule 17 (statement -> switch .)
    ELGT_OPERATOR   reduce using rule 17 (statement -> switch .)
    ELLTE_OPERATOR  reduce using rule 17 (statement -> switch .)
    ELGTE_OPERATOR  reduce using rule 17 (statement -> switch .)
    NOT_OPERATOR    reduce using rule 17 (statement -> switch .)
    MXTRUE_OPERATOR reduce using rule 17 (statement -> switch .)
    MXFALSE_OPERATOR reduce using rule 17 (statement -> switch .)
    SIZE_OPERATOR   reduce using rule 17 (statement -> switch .)
    LOGITIZE_OPERATOR reduce using rule 17 (statement -> switch .)
    DIGITIZE_OPERATOR reduce using rule 17 (statement -> switch .)
    DO              reduce using rule 17 (statement -> switch .)
    GET             reduce using rule 17 (statement -> switch .)
    REDUCE_OPERATOR reduce using rule 17 (statement -> switch .)
    EXTEND_OPERATOR reduce using rule 17 (statement -> switch .)
    OCT_NUMBER      reduce using rule 17 (statement -> switch .)
    DEC_NUMBER      reduce using rule 17 (statement -> switch .)
    HEX_NUMBER      reduce using rule 17 (statement -> switch .)
    TRUE            reduce using rule 17 (statement -> switch .)
    FALSE           reduce using rule 17 (statement -> switch .)
    NEWLINE         reduce using rule 17 (statement -> switch .)
    RESULT          reduce using rule 17 (statement -> switch .)
    RBRACKET        reduce using rule 17 (statement -> switch .)
    THANKS          reduce using rule 17 (statement -> switch .)


state 18

    (18) statement -> command . NEWLINE

    NEWLINE         shift and go to state 81


state 19

    (78) var_declaration -> VAR . VARIABLE OS_BRACKET dimensions CS_BRACKET ASSIGNMENT initializer
    (79) var_declaration -> VAR . VARIABLE ASSIGNMENT expression

    VARIABLE        shift and go to state 82


state 20

    (69) expression -> VARIABLE .

    NEWLINE         reduce using rule 69 (expression -> VARIABLE .)
    ASSIGNMENT      reduce using rule 69 (expression -> VARIABLE .)
    OS_BRACKET      reduce using rule 69 (expression -> VARIABLE .)
    PLUS            reduce using rule 69 (expression -> VARIABLE .)
    MINUS           reduce using rule 69 (expression -> VARIABLE .)
    MULTIPLY        reduce using rule 69 (expression -> VARIABLE .)
    DIVIDE          reduce using rule 69 (expression -> VARIABLE .)
    AND_OPERATOR    reduce using rule 69 (expression -> VARIABLE .)
    RBRACKET        reduce using rule 69 (expression -> VARIABLE .)
    LBRACKET        reduce using rule 69 (expression -> VARIABLE .)
    VARIABLE        reduce using rule 69 (expression -> VARIABLE .)
    MXEQ_OPERATOR   reduce using rule 69 (expression -> VARIABLE .)
    MXLT_OPERATOR   reduce using rule 69 (expression -> VARIABLE .)
    MXGT_OPERATOR   reduce using rule 69 (expression -> VARIABLE .)
    MXLTE_OPERATOR  reduce using rule 69 (expression -> VARIABLE .)
    MXGTE_OPERATOR  reduce using rule 69 (expression -> VARIABLE .)
    ELEQ_OPERATOR   reduce using rule 69 (expression -> VARIABLE .)
    ELLT_OPERATOR   reduce using rule 69 (expression -> VARIABLE .)
    ELGT_OPERATOR   reduce using rule 69 (expression -> VARIABLE .)
    ELLTE_OPERATOR  reduce using rule 69 (expression -> VARIABLE .)
    ELGTE_OPERATOR  reduce using rule 69 (expression -> VARIABLE .)
    NOT_OPERATOR    reduce using rule 69 (expression -> VARIABLE .)
    MXTRUE_OPERATOR reduce using rule 69 (expression -> VARIABLE .)
    MXFALSE_OPERATOR reduce using rule 69 (expression -> VARIABLE .)
    SIZE_OPERATOR   reduce using rule 69 (expression -> VARIABLE .)
    LOGITIZE_OPERATOR reduce using rule 69 (expression -> VARIABLE .)
    DIGITIZE_OPERATOR reduce using rule 69 (expression -> VARIABLE .)
    DO              reduce using rule 69 (expression -> VARIABLE .)
    GET             reduce using rule 69 (expression -> VARIABLE .)
    REDUCE_OPERATOR reduce using rule 69 (expression -> VARIABLE .)
    EXTEND_OPERATOR reduce using rule 69 (expression -> VARIABLE .)
    OCT_NUMBER      reduce using rule 69 (expression -> VARIABLE .)
    DEC_NUMBER      reduce using rule 69 (expression -> VARIABLE .)
    HEX_NUMBER      reduce using rule 69 (expression -> VARIABLE .)
    TRUE            reduce using rule 69 (expression -> VARIABLE .)
    FALSE           reduce using rule 69 (expression -> VARIABLE .)
    COMMA           reduce using rule 69 (expression -> VARIABLE .)
    CS_BRACKET      reduce using rule 69 (expression -> VARIABLE .)


state 21

    (37) expression -> unary_operator . expression
    (31) expression -> . expression binary_operator expression
    (37) expression -> . unary_operator expression
    (54) expression -> . base_values
    (55) expression -> . assignment
    (56) expression -> . indexing
    (57) expression -> . do
    (58) expression -> . get
    (59) expression -> . reduce
    (60) expression -> . extend
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . VARIABLE
    (38) unary_operator -> . MXEQ_OPERATOR
    (39) unary_operator -> . MXLT_OPERATOR
    (40) unary_operator -> . MXGT_OPERATOR
    (41) unary_operator -> . MXLTE_OPERATOR
    (42) unary_operator -> . MXGTE_OPERATOR
    (43) unary_operator -> . ELEQ_OPERATOR
    (44) unary_operator -> . ELLT_OPERATOR
    (45) unary_operator -> . ELGT_OPERATOR
    (46) unary_operator -> . ELLTE_OPERATOR
    (47) unary_operator -> . ELGTE_OPERATOR
    (48) unary_operator -> . NOT_OPERATOR
    (49) unary_operator -> . MXTRUE_OPERATOR
    (50) unary_operator -> . MXFALSE_OPERATOR
    (51) unary_operator -> . SIZE_OPERATOR
    (52) unary_operator -> . LOGITIZE_OPERATOR
    (53) unary_operator -> . DIGITIZE_OPERATOR
    (75) base_values -> . number
    (76) base_values -> . boolean
    (30) assignment -> . expression ASSIGNMENT expression
    (80) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (63) do -> . DO VARIABLE call_parameters
    (67) get -> . GET VARIABLE
    (61) reduce -> . REDUCE_OPERATOR expression dimensions
    (62) extend -> . EXTEND_OPERATOR expression dimensions
    (70) number -> . OCT_NUMBER
    (71) number -> . DEC_NUMBER
    (72) number -> . HEX_NUMBER
    (73) boolean -> . TRUE
    (74) boolean -> . FALSE

    LBRACKET        shift and go to state 29
    VARIABLE        shift and go to state 20
    MXEQ_OPERATOR   shift and go to state 38
    MXLT_OPERATOR   shift and go to state 39
    MXGT_OPERATOR   shift and go to state 40
    MXLTE_OPERATOR  shift and go to state 41
    MXGTE_OPERATOR  shift and go to state 42
    ELEQ_OPERATOR   shift and go to state 43
    ELLT_OPERATOR   shift and go to state 44
    ELGT_OPERATOR   shift and go to state 45
    ELLTE_OPERATOR  shift and go to state 46
    ELGTE_OPERATOR  shift and go to state 47
    NOT_OPERATOR    shift and go to state 48
    MXTRUE_OPERATOR shift and go to state 49
    MXFALSE_OPERATOR shift and go to state 50
    SIZE_OPERATOR   shift and go to state 51
    LOGITIZE_OPERATOR shift and go to state 52
    DIGITIZE_OPERATOR shift and go to state 53
    DO              shift and go to state 56
    GET             shift and go to state 57
    REDUCE_OPERATOR shift and go to state 58
    EXTEND_OPERATOR shift and go to state 59
    OCT_NUMBER      shift and go to state 60
    DEC_NUMBER      shift and go to state 61
    HEX_NUMBER      shift and go to state 62
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    unary_operator                 shift and go to state 21
    expression                     shift and go to state 83
    base_values                    shift and go to state 22
    assignment                     shift and go to state 23
    indexing                       shift and go to state 24
    do                             shift and go to state 25
    get                            shift and go to state 26
    reduce                         shift and go to state 27
    extend                         shift and go to state 28
    number                         shift and go to state 54
    boolean                        shift and go to state 55

state 22

    (54) expression -> base_values .

    NEWLINE         reduce using rule 54 (expression -> base_values .)
    ASSIGNMENT      reduce using rule 54 (expression -> base_values .)
    OS_BRACKET      reduce using rule 54 (expression -> base_values .)
    PLUS            reduce using rule 54 (expression -> base_values .)
    MINUS           reduce using rule 54 (expression -> base_values .)
    MULTIPLY        reduce using rule 54 (expression -> base_values .)
    DIVIDE          reduce using rule 54 (expression -> base_values .)
    AND_OPERATOR    reduce using rule 54 (expression -> base_values .)
    RBRACKET        reduce using rule 54 (expression -> base_values .)
    LBRACKET        reduce using rule 54 (expression -> base_values .)
    VARIABLE        reduce using rule 54 (expression -> base_values .)
    MXEQ_OPERATOR   reduce using rule 54 (expression -> base_values .)
    MXLT_OPERATOR   reduce using rule 54 (expression -> base_values .)
    MXGT_OPERATOR   reduce using rule 54 (expression -> base_values .)
    MXLTE_OPERATOR  reduce using rule 54 (expression -> base_values .)
    MXGTE_OPERATOR  reduce using rule 54 (expression -> base_values .)
    ELEQ_OPERATOR   reduce using rule 54 (expression -> base_values .)
    ELLT_OPERATOR   reduce using rule 54 (expression -> base_values .)
    ELGT_OPERATOR   reduce using rule 54 (expression -> base_values .)
    ELLTE_OPERATOR  reduce using rule 54 (expression -> base_values .)
    ELGTE_OPERATOR  reduce using rule 54 (expression -> base_values .)
    NOT_OPERATOR    reduce using rule 54 (expression -> base_values .)
    MXTRUE_OPERATOR reduce using rule 54 (expression -> base_values .)
    MXFALSE_OPERATOR reduce using rule 54 (expression -> base_values .)
    SIZE_OPERATOR   reduce using rule 54 (expression -> base_values .)
    LOGITIZE_OPERATOR reduce using rule 54 (expression -> base_values .)
    DIGITIZE_OPERATOR reduce using rule 54 (expression -> base_values .)
    DO              reduce using rule 54 (expression -> base_values .)
    GET             reduce using rule 54 (expression -> base_values .)
    REDUCE_OPERATOR reduce using rule 54 (expression -> base_values .)
    EXTEND_OPERATOR reduce using rule 54 (expression -> base_values .)
    OCT_NUMBER      reduce using rule 54 (expression -> base_values .)
    DEC_NUMBER      reduce using rule 54 (expression -> base_values .)
    HEX_NUMBER      reduce using rule 54 (expression -> base_values .)
    TRUE            reduce using rule 54 (expression -> base_values .)
    FALSE           reduce using rule 54 (expression -> base_values .)
    COMMA           reduce using rule 54 (expression -> base_values .)
    CS_BRACKET      reduce using rule 54 (expression -> base_values .)


state 23

    (55) expression -> assignment .

    NEWLINE         reduce using rule 55 (expression -> assignment .)
    ASSIGNMENT      reduce using rule 55 (expression -> assignment .)
    OS_BRACKET      reduce using rule 55 (expression -> assignment .)
    PLUS            reduce using rule 55 (expression -> assignment .)
    MINUS           reduce using rule 55 (expression -> assignment .)
    MULTIPLY        reduce using rule 55 (expression -> assignment .)
    DIVIDE          reduce using rule 55 (expression -> assignment .)
    AND_OPERATOR    reduce using rule 55 (expression -> assignment .)
    RBRACKET        reduce using rule 55 (expression -> assignment .)
    LBRACKET        reduce using rule 55 (expression -> assignment .)
    VARIABLE        reduce using rule 55 (expression -> assignment .)
    MXEQ_OPERATOR   reduce using rule 55 (expression -> assignment .)
    MXLT_OPERATOR   reduce using rule 55 (expression -> assignment .)
    MXGT_OPERATOR   reduce using rule 55 (expression -> assignment .)
    MXLTE_OPERATOR  reduce using rule 55 (expression -> assignment .)
    MXGTE_OPERATOR  reduce using rule 55 (expression -> assignment .)
    ELEQ_OPERATOR   reduce using rule 55 (expression -> assignment .)
    ELLT_OPERATOR   reduce using rule 55 (expression -> assignment .)
    ELGT_OPERATOR   reduce using rule 55 (expression -> assignment .)
    ELLTE_OPERATOR  reduce using rule 55 (expression -> assignment .)
    ELGTE_OPERATOR  reduce using rule 55 (expression -> assignment .)
    NOT_OPERATOR    reduce using rule 55 (expression -> assignment .)
    MXTRUE_OPERATOR reduce using rule 55 (expression -> assignment .)
    MXFALSE_OPERATOR reduce using rule 55 (expression -> assignment .)
    SIZE_OPERATOR   reduce using rule 55 (expression -> assignment .)
    LOGITIZE_OPERATOR reduce using rule 55 (expression -> assignment .)
    DIGITIZE_OPERATOR reduce using rule 55 (expression -> assignment .)
    DO              reduce using rule 55 (expression -> assignment .)
    GET             reduce using rule 55 (expression -> assignment .)
    REDUCE_OPERATOR reduce using rule 55 (expression -> assignment .)
    EXTEND_OPERATOR reduce using rule 55 (expression -> assignment .)
    OCT_NUMBER      reduce using rule 55 (expression -> assignment .)
    DEC_NUMBER      reduce using rule 55 (expression -> assignment .)
    HEX_NUMBER      reduce using rule 55 (expression -> assignment .)
    TRUE            reduce using rule 55 (expression -> assignment .)
    FALSE           reduce using rule 55 (expression -> assignment .)
    COMMA           reduce using rule 55 (expression -> assignment .)
    CS_BRACKET      reduce using rule 55 (expression -> assignment .)


state 24

    (56) expression -> indexing .

    NEWLINE         reduce using rule 56 (expression -> indexing .)
    ASSIGNMENT      reduce using rule 56 (expression -> indexing .)
    OS_BRACKET      reduce using rule 56 (expression -> indexing .)
    PLUS            reduce using rule 56 (expression -> indexing .)
    MINUS           reduce using rule 56 (expression -> indexing .)
    MULTIPLY        reduce using rule 56 (expression -> indexing .)
    DIVIDE          reduce using rule 56 (expression -> indexing .)
    AND_OPERATOR    reduce using rule 56 (expression -> indexing .)
    RBRACKET        reduce using rule 56 (expression -> indexing .)
    LBRACKET        reduce using rule 56 (expression -> indexing .)
    VARIABLE        reduce using rule 56 (expression -> indexing .)
    MXEQ_OPERATOR   reduce using rule 56 (expression -> indexing .)
    MXLT_OPERATOR   reduce using rule 56 (expression -> indexing .)
    MXGT_OPERATOR   reduce using rule 56 (expression -> indexing .)
    MXLTE_OPERATOR  reduce using rule 56 (expression -> indexing .)
    MXGTE_OPERATOR  reduce using rule 56 (expression -> indexing .)
    ELEQ_OPERATOR   reduce using rule 56 (expression -> indexing .)
    ELLT_OPERATOR   reduce using rule 56 (expression -> indexing .)
    ELGT_OPERATOR   reduce using rule 56 (expression -> indexing .)
    ELLTE_OPERATOR  reduce using rule 56 (expression -> indexing .)
    ELGTE_OPERATOR  reduce using rule 56 (expression -> indexing .)
    NOT_OPERATOR    reduce using rule 56 (expression -> indexing .)
    MXTRUE_OPERATOR reduce using rule 56 (expression -> indexing .)
    MXFALSE_OPERATOR reduce using rule 56 (expression -> indexing .)
    SIZE_OPERATOR   reduce using rule 56 (expression -> indexing .)
    LOGITIZE_OPERATOR reduce using rule 56 (expression -> indexing .)
    DIGITIZE_OPERATOR reduce using rule 56 (expression -> indexing .)
    DO              reduce using rule 56 (expression -> indexing .)
    GET             reduce using rule 56 (expression -> indexing .)
    REDUCE_OPERATOR reduce using rule 56 (expression -> indexing .)
    EXTEND_OPERATOR reduce using rule 56 (expression -> indexing .)
    OCT_NUMBER      reduce using rule 56 (expression -> indexing .)
    DEC_NUMBER      reduce using rule 56 (expression -> indexing .)
    HEX_NUMBER      reduce using rule 56 (expression -> indexing .)
    TRUE            reduce using rule 56 (expression -> indexing .)
    FALSE           reduce using rule 56 (expression -> indexing .)
    COMMA           reduce using rule 56 (expression -> indexing .)
    CS_BRACKET      reduce using rule 56 (expression -> indexing .)


state 25

    (57) expression -> do .

    NEWLINE         reduce using rule 57 (expression -> do .)
    ASSIGNMENT      reduce using rule 57 (expression -> do .)
    OS_BRACKET      reduce using rule 57 (expression -> do .)
    PLUS            reduce using rule 57 (expression -> do .)
    MINUS           reduce using rule 57 (expression -> do .)
    MULTIPLY        reduce using rule 57 (expression -> do .)
    DIVIDE          reduce using rule 57 (expression -> do .)
    AND_OPERATOR    reduce using rule 57 (expression -> do .)
    RBRACKET        reduce using rule 57 (expression -> do .)
    LBRACKET        reduce using rule 57 (expression -> do .)
    VARIABLE        reduce using rule 57 (expression -> do .)
    MXEQ_OPERATOR   reduce using rule 57 (expression -> do .)
    MXLT_OPERATOR   reduce using rule 57 (expression -> do .)
    MXGT_OPERATOR   reduce using rule 57 (expression -> do .)
    MXLTE_OPERATOR  reduce using rule 57 (expression -> do .)
    MXGTE_OPERATOR  reduce using rule 57 (expression -> do .)
    ELEQ_OPERATOR   reduce using rule 57 (expression -> do .)
    ELLT_OPERATOR   reduce using rule 57 (expression -> do .)
    ELGT_OPERATOR   reduce using rule 57 (expression -> do .)
    ELLTE_OPERATOR  reduce using rule 57 (expression -> do .)
    ELGTE_OPERATOR  reduce using rule 57 (expression -> do .)
    NOT_OPERATOR    reduce using rule 57 (expression -> do .)
    MXTRUE_OPERATOR reduce using rule 57 (expression -> do .)
    MXFALSE_OPERATOR reduce using rule 57 (expression -> do .)
    SIZE_OPERATOR   reduce using rule 57 (expression -> do .)
    LOGITIZE_OPERATOR reduce using rule 57 (expression -> do .)
    DIGITIZE_OPERATOR reduce using rule 57 (expression -> do .)
    DO              reduce using rule 57 (expression -> do .)
    GET             reduce using rule 57 (expression -> do .)
    REDUCE_OPERATOR reduce using rule 57 (expression -> do .)
    EXTEND_OPERATOR reduce using rule 57 (expression -> do .)
    OCT_NUMBER      reduce using rule 57 (expression -> do .)
    DEC_NUMBER      reduce using rule 57 (expression -> do .)
    HEX_NUMBER      reduce using rule 57 (expression -> do .)
    TRUE            reduce using rule 57 (expression -> do .)
    FALSE           reduce using rule 57 (expression -> do .)
    COMMA           reduce using rule 57 (expression -> do .)
    CS_BRACKET      reduce using rule 57 (expression -> do .)


state 26

    (58) expression -> get .

    NEWLINE         reduce using rule 58 (expression -> get .)
    ASSIGNMENT      reduce using rule 58 (expression -> get .)
    OS_BRACKET      reduce using rule 58 (expression -> get .)
    PLUS            reduce using rule 58 (expression -> get .)
    MINUS           reduce using rule 58 (expression -> get .)
    MULTIPLY        reduce using rule 58 (expression -> get .)
    DIVIDE          reduce using rule 58 (expression -> get .)
    AND_OPERATOR    reduce using rule 58 (expression -> get .)
    RBRACKET        reduce using rule 58 (expression -> get .)
    LBRACKET        reduce using rule 58 (expression -> get .)
    VARIABLE        reduce using rule 58 (expression -> get .)
    MXEQ_OPERATOR   reduce using rule 58 (expression -> get .)
    MXLT_OPERATOR   reduce using rule 58 (expression -> get .)
    MXGT_OPERATOR   reduce using rule 58 (expression -> get .)
    MXLTE_OPERATOR  reduce using rule 58 (expression -> get .)
    MXGTE_OPERATOR  reduce using rule 58 (expression -> get .)
    ELEQ_OPERATOR   reduce using rule 58 (expression -> get .)
    ELLT_OPERATOR   reduce using rule 58 (expression -> get .)
    ELGT_OPERATOR   reduce using rule 58 (expression -> get .)
    ELLTE_OPERATOR  reduce using rule 58 (expression -> get .)
    ELGTE_OPERATOR  reduce using rule 58 (expression -> get .)
    NOT_OPERATOR    reduce using rule 58 (expression -> get .)
    MXTRUE_OPERATOR reduce using rule 58 (expression -> get .)
    MXFALSE_OPERATOR reduce using rule 58 (expression -> get .)
    SIZE_OPERATOR   reduce using rule 58 (expression -> get .)
    LOGITIZE_OPERATOR reduce using rule 58 (expression -> get .)
    DIGITIZE_OPERATOR reduce using rule 58 (expression -> get .)
    DO              reduce using rule 58 (expression -> get .)
    GET             reduce using rule 58 (expression -> get .)
    REDUCE_OPERATOR reduce using rule 58 (expression -> get .)
    EXTEND_OPERATOR reduce using rule 58 (expression -> get .)
    OCT_NUMBER      reduce using rule 58 (expression -> get .)
    DEC_NUMBER      reduce using rule 58 (expression -> get .)
    HEX_NUMBER      reduce using rule 58 (expression -> get .)
    TRUE            reduce using rule 58 (expression -> get .)
    FALSE           reduce using rule 58 (expression -> get .)
    COMMA           reduce using rule 58 (expression -> get .)
    CS_BRACKET      reduce using rule 58 (expression -> get .)


state 27

    (59) expression -> reduce .

    NEWLINE         reduce using rule 59 (expression -> reduce .)
    ASSIGNMENT      reduce using rule 59 (expression -> reduce .)
    OS_BRACKET      reduce using rule 59 (expression -> reduce .)
    PLUS            reduce using rule 59 (expression -> reduce .)
    MINUS           reduce using rule 59 (expression -> reduce .)
    MULTIPLY        reduce using rule 59 (expression -> reduce .)
    DIVIDE          reduce using rule 59 (expression -> reduce .)
    AND_OPERATOR    reduce using rule 59 (expression -> reduce .)
    RBRACKET        reduce using rule 59 (expression -> reduce .)
    LBRACKET        reduce using rule 59 (expression -> reduce .)
    VARIABLE        reduce using rule 59 (expression -> reduce .)
    MXEQ_OPERATOR   reduce using rule 59 (expression -> reduce .)
    MXLT_OPERATOR   reduce using rule 59 (expression -> reduce .)
    MXGT_OPERATOR   reduce using rule 59 (expression -> reduce .)
    MXLTE_OPERATOR  reduce using rule 59 (expression -> reduce .)
    MXGTE_OPERATOR  reduce using rule 59 (expression -> reduce .)
    ELEQ_OPERATOR   reduce using rule 59 (expression -> reduce .)
    ELLT_OPERATOR   reduce using rule 59 (expression -> reduce .)
    ELGT_OPERATOR   reduce using rule 59 (expression -> reduce .)
    ELLTE_OPERATOR  reduce using rule 59 (expression -> reduce .)
    ELGTE_OPERATOR  reduce using rule 59 (expression -> reduce .)
    NOT_OPERATOR    reduce using rule 59 (expression -> reduce .)
    MXTRUE_OPERATOR reduce using rule 59 (expression -> reduce .)
    MXFALSE_OPERATOR reduce using rule 59 (expression -> reduce .)
    SIZE_OPERATOR   reduce using rule 59 (expression -> reduce .)
    LOGITIZE_OPERATOR reduce using rule 59 (expression -> reduce .)
    DIGITIZE_OPERATOR reduce using rule 59 (expression -> reduce .)
    DO              reduce using rule 59 (expression -> reduce .)
    GET             reduce using rule 59 (expression -> reduce .)
    REDUCE_OPERATOR reduce using rule 59 (expression -> reduce .)
    EXTEND_OPERATOR reduce using rule 59 (expression -> reduce .)
    OCT_NUMBER      reduce using rule 59 (expression -> reduce .)
    DEC_NUMBER      reduce using rule 59 (expression -> reduce .)
    HEX_NUMBER      reduce using rule 59 (expression -> reduce .)
    TRUE            reduce using rule 59 (expression -> reduce .)
    FALSE           reduce using rule 59 (expression -> reduce .)
    COMMA           reduce using rule 59 (expression -> reduce .)
    CS_BRACKET      reduce using rule 59 (expression -> reduce .)


state 28

    (60) expression -> extend .

    NEWLINE         reduce using rule 60 (expression -> extend .)
    ASSIGNMENT      reduce using rule 60 (expression -> extend .)
    OS_BRACKET      reduce using rule 60 (expression -> extend .)
    PLUS            reduce using rule 60 (expression -> extend .)
    MINUS           reduce using rule 60 (expression -> extend .)
    MULTIPLY        reduce using rule 60 (expression -> extend .)
    DIVIDE          reduce using rule 60 (expression -> extend .)
    AND_OPERATOR    reduce using rule 60 (expression -> extend .)
    RBRACKET        reduce using rule 60 (expression -> extend .)
    LBRACKET        reduce using rule 60 (expression -> extend .)
    VARIABLE        reduce using rule 60 (expression -> extend .)
    MXEQ_OPERATOR   reduce using rule 60 (expression -> extend .)
    MXLT_OPERATOR   reduce using rule 60 (expression -> extend .)
    MXGT_OPERATOR   reduce using rule 60 (expression -> extend .)
    MXLTE_OPERATOR  reduce using rule 60 (expression -> extend .)
    MXGTE_OPERATOR  reduce using rule 60 (expression -> extend .)
    ELEQ_OPERATOR   reduce using rule 60 (expression -> extend .)
    ELLT_OPERATOR   reduce using rule 60 (expression -> extend .)
    ELGT_OPERATOR   reduce using rule 60 (expression -> extend .)
    ELLTE_OPERATOR  reduce using rule 60 (expression -> extend .)
    ELGTE_OPERATOR  reduce using rule 60 (expression -> extend .)
    NOT_OPERATOR    reduce using rule 60 (expression -> extend .)
    MXTRUE_OPERATOR reduce using rule 60 (expression -> extend .)
    MXFALSE_OPERATOR reduce using rule 60 (expression -> extend .)
    SIZE_OPERATOR   reduce using rule 60 (expression -> extend .)
    LOGITIZE_OPERATOR reduce using rule 60 (expression -> extend .)
    DIGITIZE_OPERATOR reduce using rule 60 (expression -> extend .)
    DO              reduce using rule 60 (expression -> extend .)
    GET             reduce using rule 60 (expression -> extend .)
    REDUCE_OPERATOR reduce using rule 60 (expression -> extend .)
    EXTEND_OPERATOR reduce using rule 60 (expression -> extend .)
    OCT_NUMBER      reduce using rule 60 (expression -> extend .)
    DEC_NUMBER      reduce using rule 60 (expression -> extend .)
    HEX_NUMBER      reduce using rule 60 (expression -> extend .)
    TRUE            reduce using rule 60 (expression -> extend .)
    FALSE           reduce using rule 60 (expression -> extend .)
    COMMA           reduce using rule 60 (expression -> extend .)
    CS_BRACKET      reduce using rule 60 (expression -> extend .)


state 29

    (68) expression -> LBRACKET . expression RBRACKET
    (31) expression -> . expression binary_operator expression
    (37) expression -> . unary_operator expression
    (54) expression -> . base_values
    (55) expression -> . assignment
    (56) expression -> . indexing
    (57) expression -> . do
    (58) expression -> . get
    (59) expression -> . reduce
    (60) expression -> . extend
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . VARIABLE
    (38) unary_operator -> . MXEQ_OPERATOR
    (39) unary_operator -> . MXLT_OPERATOR
    (40) unary_operator -> . MXGT_OPERATOR
    (41) unary_operator -> . MXLTE_OPERATOR
    (42) unary_operator -> . MXGTE_OPERATOR
    (43) unary_operator -> . ELEQ_OPERATOR
    (44) unary_operator -> . ELLT_OPERATOR
    (45) unary_operator -> . ELGT_OPERATOR
    (46) unary_operator -> . ELLTE_OPERATOR
    (47) unary_operator -> . ELGTE_OPERATOR
    (48) unary_operator -> . NOT_OPERATOR
    (49) unary_operator -> . MXTRUE_OPERATOR
    (50) unary_operator -> . MXFALSE_OPERATOR
    (51) unary_operator -> . SIZE_OPERATOR
    (52) unary_operator -> . LOGITIZE_OPERATOR
    (53) unary_operator -> . DIGITIZE_OPERATOR
    (75) base_values -> . number
    (76) base_values -> . boolean
    (30) assignment -> . expression ASSIGNMENT expression
    (80) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (63) do -> . DO VARIABLE call_parameters
    (67) get -> . GET VARIABLE
    (61) reduce -> . REDUCE_OPERATOR expression dimensions
    (62) extend -> . EXTEND_OPERATOR expression dimensions
    (70) number -> . OCT_NUMBER
    (71) number -> . DEC_NUMBER
    (72) number -> . HEX_NUMBER
    (73) boolean -> . TRUE
    (74) boolean -> . FALSE

    LBRACKET        shift and go to state 29
    VARIABLE        shift and go to state 20
    MXEQ_OPERATOR   shift and go to state 38
    MXLT_OPERATOR   shift and go to state 39
    MXGT_OPERATOR   shift and go to state 40
    MXLTE_OPERATOR  shift and go to state 41
    MXGTE_OPERATOR  shift and go to state 42
    ELEQ_OPERATOR   shift and go to state 43
    ELLT_OPERATOR   shift and go to state 44
    ELGT_OPERATOR   shift and go to state 45
    ELLTE_OPERATOR  shift and go to state 46
    ELGTE_OPERATOR  shift and go to state 47
    NOT_OPERATOR    shift and go to state 48
    MXTRUE_OPERATOR shift and go to state 49
    MXFALSE_OPERATOR shift and go to state 50
    SIZE_OPERATOR   shift and go to state 51
    LOGITIZE_OPERATOR shift and go to state 52
    DIGITIZE_OPERATOR shift and go to state 53
    DO              shift and go to state 56
    GET             shift and go to state 57
    REDUCE_OPERATOR shift and go to state 58
    EXTEND_OPERATOR shift and go to state 59
    OCT_NUMBER      shift and go to state 60
    DEC_NUMBER      shift and go to state 61
    HEX_NUMBER      shift and go to state 62
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    expression                     shift and go to state 84
    unary_operator                 shift and go to state 21
    base_values                    shift and go to state 22
    assignment                     shift and go to state 23
    indexing                       shift and go to state 24
    do                             shift and go to state 25
    get                            shift and go to state 26
    reduce                         shift and go to state 27
    extend                         shift and go to state 28
    number                         shift and go to state 54
    boolean                        shift and go to state 55

state 30

    (24) for -> FOR . VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group

    VARIABLE        shift and go to state 85


state 31

    (28) switch -> SWITCH . expression NEWLINE TRUE statements_group FALSE statements_group
    (29) switch -> SWITCH . expression NEWLINE FALSE statements_group TRUE statements_group
    (31) expression -> . expression binary_operator expression
    (37) expression -> . unary_operator expression
    (54) expression -> . base_values
    (55) expression -> . assignment
    (56) expression -> . indexing
    (57) expression -> . do
    (58) expression -> . get
    (59) expression -> . reduce
    (60) expression -> . extend
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . VARIABLE
    (38) unary_operator -> . MXEQ_OPERATOR
    (39) unary_operator -> . MXLT_OPERATOR
    (40) unary_operator -> . MXGT_OPERATOR
    (41) unary_operator -> . MXLTE_OPERATOR
    (42) unary_operator -> . MXGTE_OPERATOR
    (43) unary_operator -> . ELEQ_OPERATOR
    (44) unary_operator -> . ELLT_OPERATOR
    (45) unary_operator -> . ELGT_OPERATOR
    (46) unary_operator -> . ELLTE_OPERATOR
    (47) unary_operator -> . ELGTE_OPERATOR
    (48) unary_operator -> . NOT_OPERATOR
    (49) unary_operator -> . MXTRUE_OPERATOR
    (50) unary_operator -> . MXFALSE_OPERATOR
    (51) unary_operator -> . SIZE_OPERATOR
    (52) unary_operator -> . LOGITIZE_OPERATOR
    (53) unary_operator -> . DIGITIZE_OPERATOR
    (75) base_values -> . number
    (76) base_values -> . boolean
    (30) assignment -> . expression ASSIGNMENT expression
    (80) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (63) do -> . DO VARIABLE call_parameters
    (67) get -> . GET VARIABLE
    (61) reduce -> . REDUCE_OPERATOR expression dimensions
    (62) extend -> . EXTEND_OPERATOR expression dimensions
    (70) number -> . OCT_NUMBER
    (71) number -> . DEC_NUMBER
    (72) number -> . HEX_NUMBER
    (73) boolean -> . TRUE
    (74) boolean -> . FALSE

    LBRACKET        shift and go to state 29
    VARIABLE        shift and go to state 20
    MXEQ_OPERATOR   shift and go to state 38
    MXLT_OPERATOR   shift and go to state 39
    MXGT_OPERATOR   shift and go to state 40
    MXLTE_OPERATOR  shift and go to state 41
    MXGTE_OPERATOR  shift and go to state 42
    ELEQ_OPERATOR   shift and go to state 43
    ELLT_OPERATOR   shift and go to state 44
    ELGT_OPERATOR   shift and go to state 45
    ELLTE_OPERATOR  shift and go to state 46
    ELGTE_OPERATOR  shift and go to state 47
    NOT_OPERATOR    shift and go to state 48
    MXTRUE_OPERATOR shift and go to state 49
    MXFALSE_OPERATOR shift and go to state 50
    SIZE_OPERATOR   shift and go to state 51
    LOGITIZE_OPERATOR shift and go to state 52
    DIGITIZE_OPERATOR shift and go to state 53
    DO              shift and go to state 56
    GET             shift and go to state 57
    REDUCE_OPERATOR shift and go to state 58
    EXTEND_OPERATOR shift and go to state 59
    OCT_NUMBER      shift and go to state 60
    DEC_NUMBER      shift and go to state 61
    HEX_NUMBER      shift and go to state 62
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    expression                     shift and go to state 86
    unary_operator                 shift and go to state 21
    base_values                    shift and go to state 22
    assignment                     shift and go to state 23
    indexing                       shift and go to state 24
    do                             shift and go to state 25
    get                            shift and go to state 26
    reduce                         shift and go to state 27
    extend                         shift and go to state 28
    number                         shift and go to state 54
    boolean                        shift and go to state 55

state 32

    (73) boolean -> TRUE .

    NEWLINE         reduce using rule 73 (boolean -> TRUE .)
    ASSIGNMENT      reduce using rule 73 (boolean -> TRUE .)
    OS_BRACKET      reduce using rule 73 (boolean -> TRUE .)
    PLUS            reduce using rule 73 (boolean -> TRUE .)
    MINUS           reduce using rule 73 (boolean -> TRUE .)
    MULTIPLY        reduce using rule 73 (boolean -> TRUE .)
    DIVIDE          reduce using rule 73 (boolean -> TRUE .)
    AND_OPERATOR    reduce using rule 73 (boolean -> TRUE .)
    RBRACKET        reduce using rule 73 (boolean -> TRUE .)
    LBRACKET        reduce using rule 73 (boolean -> TRUE .)
    VARIABLE        reduce using rule 73 (boolean -> TRUE .)
    MXEQ_OPERATOR   reduce using rule 73 (boolean -> TRUE .)
    MXLT_OPERATOR   reduce using rule 73 (boolean -> TRUE .)
    MXGT_OPERATOR   reduce using rule 73 (boolean -> TRUE .)
    MXLTE_OPERATOR  reduce using rule 73 (boolean -> TRUE .)
    MXGTE_OPERATOR  reduce using rule 73 (boolean -> TRUE .)
    ELEQ_OPERATOR   reduce using rule 73 (boolean -> TRUE .)
    ELLT_OPERATOR   reduce using rule 73 (boolean -> TRUE .)
    ELGT_OPERATOR   reduce using rule 73 (boolean -> TRUE .)
    ELLTE_OPERATOR  reduce using rule 73 (boolean -> TRUE .)
    ELGTE_OPERATOR  reduce using rule 73 (boolean -> TRUE .)
    NOT_OPERATOR    reduce using rule 73 (boolean -> TRUE .)
    MXTRUE_OPERATOR reduce using rule 73 (boolean -> TRUE .)
    MXFALSE_OPERATOR reduce using rule 73 (boolean -> TRUE .)
    SIZE_OPERATOR   reduce using rule 73 (boolean -> TRUE .)
    LOGITIZE_OPERATOR reduce using rule 73 (boolean -> TRUE .)
    DIGITIZE_OPERATOR reduce using rule 73 (boolean -> TRUE .)
    DO              reduce using rule 73 (boolean -> TRUE .)
    GET             reduce using rule 73 (boolean -> TRUE .)
    REDUCE_OPERATOR reduce using rule 73 (boolean -> TRUE .)
    EXTEND_OPERATOR reduce using rule 73 (boolean -> TRUE .)
    OCT_NUMBER      reduce using rule 73 (boolean -> TRUE .)
    DEC_NUMBER      reduce using rule 73 (boolean -> TRUE .)
    HEX_NUMBER      reduce using rule 73 (boolean -> TRUE .)
    TRUE            reduce using rule 73 (boolean -> TRUE .)
    FALSE           reduce using rule 73 (boolean -> TRUE .)
    COMMA           reduce using rule 73 (boolean -> TRUE .)
    CS_BRACKET      reduce using rule 73 (boolean -> TRUE .)


state 33

    (74) boolean -> FALSE .

    NEWLINE         reduce using rule 74 (boolean -> FALSE .)
    ASSIGNMENT      reduce using rule 74 (boolean -> FALSE .)
    OS_BRACKET      reduce using rule 74 (boolean -> FALSE .)
    PLUS            reduce using rule 74 (boolean -> FALSE .)
    MINUS           reduce using rule 74 (boolean -> FALSE .)
    MULTIPLY        reduce using rule 74 (boolean -> FALSE .)
    DIVIDE          reduce using rule 74 (boolean -> FALSE .)
    AND_OPERATOR    reduce using rule 74 (boolean -> FALSE .)
    RBRACKET        reduce using rule 74 (boolean -> FALSE .)
    LBRACKET        reduce using rule 74 (boolean -> FALSE .)
    VARIABLE        reduce using rule 74 (boolean -> FALSE .)
    MXEQ_OPERATOR   reduce using rule 74 (boolean -> FALSE .)
    MXLT_OPERATOR   reduce using rule 74 (boolean -> FALSE .)
    MXGT_OPERATOR   reduce using rule 74 (boolean -> FALSE .)
    MXLTE_OPERATOR  reduce using rule 74 (boolean -> FALSE .)
    MXGTE_OPERATOR  reduce using rule 74 (boolean -> FALSE .)
    ELEQ_OPERATOR   reduce using rule 74 (boolean -> FALSE .)
    ELLT_OPERATOR   reduce using rule 74 (boolean -> FALSE .)
    ELGT_OPERATOR   reduce using rule 74 (boolean -> FALSE .)
    ELLTE_OPERATOR  reduce using rule 74 (boolean -> FALSE .)
    ELGTE_OPERATOR  reduce using rule 74 (boolean -> FALSE .)
    NOT_OPERATOR    reduce using rule 74 (boolean -> FALSE .)
    MXTRUE_OPERATOR reduce using rule 74 (boolean -> FALSE .)
    MXFALSE_OPERATOR reduce using rule 74 (boolean -> FALSE .)
    SIZE_OPERATOR   reduce using rule 74 (boolean -> FALSE .)
    LOGITIZE_OPERATOR reduce using rule 74 (boolean -> FALSE .)
    DIGITIZE_OPERATOR reduce using rule 74 (boolean -> FALSE .)
    DO              reduce using rule 74 (boolean -> FALSE .)
    GET             reduce using rule 74 (boolean -> FALSE .)
    REDUCE_OPERATOR reduce using rule 74 (boolean -> FALSE .)
    EXTEND_OPERATOR reduce using rule 74 (boolean -> FALSE .)
    OCT_NUMBER      reduce using rule 74 (boolean -> FALSE .)
    DEC_NUMBER      reduce using rule 74 (boolean -> FALSE .)
    HEX_NUMBER      reduce using rule 74 (boolean -> FALSE .)
    TRUE            reduce using rule 74 (boolean -> FALSE .)
    FALSE           reduce using rule 74 (boolean -> FALSE .)
    COMMA           reduce using rule 74 (boolean -> FALSE .)
    CS_BRACKET      reduce using rule 74 (boolean -> FALSE .)


state 34

    (20) command -> MOVE .

    NEWLINE         reduce using rule 20 (command -> MOVE .)


state 35

    (21) command -> ROTATE_LEFT .

    NEWLINE         reduce using rule 21 (command -> ROTATE_LEFT .)


state 36

    (22) command -> ROTATE_RIGHT .

    NEWLINE         reduce using rule 22 (command -> ROTATE_RIGHT .)


state 37

    (23) command -> GET_ENVIRONMENT .

    NEWLINE         reduce using rule 23 (command -> GET_ENVIRONMENT .)


state 38

    (38) unary_operator -> MXEQ_OPERATOR .

    LBRACKET        reduce using rule 38 (unary_operator -> MXEQ_OPERATOR .)
    VARIABLE        reduce using rule 38 (unary_operator -> MXEQ_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 38 (unary_operator -> MXEQ_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 38 (unary_operator -> MXEQ_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 38 (unary_operator -> MXEQ_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 38 (unary_operator -> MXEQ_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 38 (unary_operator -> MXEQ_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 38 (unary_operator -> MXEQ_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 38 (unary_operator -> MXEQ_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 38 (unary_operator -> MXEQ_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 38 (unary_operator -> MXEQ_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 38 (unary_operator -> MXEQ_OPERATOR .)
    NOT_OPERATOR    reduce using rule 38 (unary_operator -> MXEQ_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 38 (unary_operator -> MXEQ_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 38 (unary_operator -> MXEQ_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 38 (unary_operator -> MXEQ_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 38 (unary_operator -> MXEQ_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 38 (unary_operator -> MXEQ_OPERATOR .)
    DO              reduce using rule 38 (unary_operator -> MXEQ_OPERATOR .)
    GET             reduce using rule 38 (unary_operator -> MXEQ_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 38 (unary_operator -> MXEQ_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 38 (unary_operator -> MXEQ_OPERATOR .)
    OCT_NUMBER      reduce using rule 38 (unary_operator -> MXEQ_OPERATOR .)
    DEC_NUMBER      reduce using rule 38 (unary_operator -> MXEQ_OPERATOR .)
    HEX_NUMBER      reduce using rule 38 (unary_operator -> MXEQ_OPERATOR .)
    TRUE            reduce using rule 38 (unary_operator -> MXEQ_OPERATOR .)
    FALSE           reduce using rule 38 (unary_operator -> MXEQ_OPERATOR .)


state 39

    (39) unary_operator -> MXLT_OPERATOR .

    LBRACKET        reduce using rule 39 (unary_operator -> MXLT_OPERATOR .)
    VARIABLE        reduce using rule 39 (unary_operator -> MXLT_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 39 (unary_operator -> MXLT_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 39 (unary_operator -> MXLT_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 39 (unary_operator -> MXLT_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 39 (unary_operator -> MXLT_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 39 (unary_operator -> MXLT_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 39 (unary_operator -> MXLT_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 39 (unary_operator -> MXLT_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 39 (unary_operator -> MXLT_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 39 (unary_operator -> MXLT_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 39 (unary_operator -> MXLT_OPERATOR .)
    NOT_OPERATOR    reduce using rule 39 (unary_operator -> MXLT_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 39 (unary_operator -> MXLT_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 39 (unary_operator -> MXLT_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 39 (unary_operator -> MXLT_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 39 (unary_operator -> MXLT_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 39 (unary_operator -> MXLT_OPERATOR .)
    DO              reduce using rule 39 (unary_operator -> MXLT_OPERATOR .)
    GET             reduce using rule 39 (unary_operator -> MXLT_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 39 (unary_operator -> MXLT_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 39 (unary_operator -> MXLT_OPERATOR .)
    OCT_NUMBER      reduce using rule 39 (unary_operator -> MXLT_OPERATOR .)
    DEC_NUMBER      reduce using rule 39 (unary_operator -> MXLT_OPERATOR .)
    HEX_NUMBER      reduce using rule 39 (unary_operator -> MXLT_OPERATOR .)
    TRUE            reduce using rule 39 (unary_operator -> MXLT_OPERATOR .)
    FALSE           reduce using rule 39 (unary_operator -> MXLT_OPERATOR .)


state 40

    (40) unary_operator -> MXGT_OPERATOR .

    LBRACKET        reduce using rule 40 (unary_operator -> MXGT_OPERATOR .)
    VARIABLE        reduce using rule 40 (unary_operator -> MXGT_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 40 (unary_operator -> MXGT_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 40 (unary_operator -> MXGT_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 40 (unary_operator -> MXGT_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 40 (unary_operator -> MXGT_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 40 (unary_operator -> MXGT_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 40 (unary_operator -> MXGT_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 40 (unary_operator -> MXGT_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 40 (unary_operator -> MXGT_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 40 (unary_operator -> MXGT_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 40 (unary_operator -> MXGT_OPERATOR .)
    NOT_OPERATOR    reduce using rule 40 (unary_operator -> MXGT_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 40 (unary_operator -> MXGT_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 40 (unary_operator -> MXGT_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 40 (unary_operator -> MXGT_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 40 (unary_operator -> MXGT_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 40 (unary_operator -> MXGT_OPERATOR .)
    DO              reduce using rule 40 (unary_operator -> MXGT_OPERATOR .)
    GET             reduce using rule 40 (unary_operator -> MXGT_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 40 (unary_operator -> MXGT_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 40 (unary_operator -> MXGT_OPERATOR .)
    OCT_NUMBER      reduce using rule 40 (unary_operator -> MXGT_OPERATOR .)
    DEC_NUMBER      reduce using rule 40 (unary_operator -> MXGT_OPERATOR .)
    HEX_NUMBER      reduce using rule 40 (unary_operator -> MXGT_OPERATOR .)
    TRUE            reduce using rule 40 (unary_operator -> MXGT_OPERATOR .)
    FALSE           reduce using rule 40 (unary_operator -> MXGT_OPERATOR .)


state 41

    (41) unary_operator -> MXLTE_OPERATOR .

    LBRACKET        reduce using rule 41 (unary_operator -> MXLTE_OPERATOR .)
    VARIABLE        reduce using rule 41 (unary_operator -> MXLTE_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 41 (unary_operator -> MXLTE_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 41 (unary_operator -> MXLTE_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 41 (unary_operator -> MXLTE_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 41 (unary_operator -> MXLTE_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 41 (unary_operator -> MXLTE_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 41 (unary_operator -> MXLTE_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 41 (unary_operator -> MXLTE_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 41 (unary_operator -> MXLTE_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 41 (unary_operator -> MXLTE_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 41 (unary_operator -> MXLTE_OPERATOR .)
    NOT_OPERATOR    reduce using rule 41 (unary_operator -> MXLTE_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 41 (unary_operator -> MXLTE_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 41 (unary_operator -> MXLTE_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 41 (unary_operator -> MXLTE_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 41 (unary_operator -> MXLTE_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 41 (unary_operator -> MXLTE_OPERATOR .)
    DO              reduce using rule 41 (unary_operator -> MXLTE_OPERATOR .)
    GET             reduce using rule 41 (unary_operator -> MXLTE_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 41 (unary_operator -> MXLTE_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 41 (unary_operator -> MXLTE_OPERATOR .)
    OCT_NUMBER      reduce using rule 41 (unary_operator -> MXLTE_OPERATOR .)
    DEC_NUMBER      reduce using rule 41 (unary_operator -> MXLTE_OPERATOR .)
    HEX_NUMBER      reduce using rule 41 (unary_operator -> MXLTE_OPERATOR .)
    TRUE            reduce using rule 41 (unary_operator -> MXLTE_OPERATOR .)
    FALSE           reduce using rule 41 (unary_operator -> MXLTE_OPERATOR .)


state 42

    (42) unary_operator -> MXGTE_OPERATOR .

    LBRACKET        reduce using rule 42 (unary_operator -> MXGTE_OPERATOR .)
    VARIABLE        reduce using rule 42 (unary_operator -> MXGTE_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 42 (unary_operator -> MXGTE_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 42 (unary_operator -> MXGTE_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 42 (unary_operator -> MXGTE_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 42 (unary_operator -> MXGTE_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 42 (unary_operator -> MXGTE_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 42 (unary_operator -> MXGTE_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 42 (unary_operator -> MXGTE_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 42 (unary_operator -> MXGTE_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 42 (unary_operator -> MXGTE_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 42 (unary_operator -> MXGTE_OPERATOR .)
    NOT_OPERATOR    reduce using rule 42 (unary_operator -> MXGTE_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 42 (unary_operator -> MXGTE_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 42 (unary_operator -> MXGTE_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 42 (unary_operator -> MXGTE_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 42 (unary_operator -> MXGTE_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 42 (unary_operator -> MXGTE_OPERATOR .)
    DO              reduce using rule 42 (unary_operator -> MXGTE_OPERATOR .)
    GET             reduce using rule 42 (unary_operator -> MXGTE_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 42 (unary_operator -> MXGTE_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 42 (unary_operator -> MXGTE_OPERATOR .)
    OCT_NUMBER      reduce using rule 42 (unary_operator -> MXGTE_OPERATOR .)
    DEC_NUMBER      reduce using rule 42 (unary_operator -> MXGTE_OPERATOR .)
    HEX_NUMBER      reduce using rule 42 (unary_operator -> MXGTE_OPERATOR .)
    TRUE            reduce using rule 42 (unary_operator -> MXGTE_OPERATOR .)
    FALSE           reduce using rule 42 (unary_operator -> MXGTE_OPERATOR .)


state 43

    (43) unary_operator -> ELEQ_OPERATOR .

    LBRACKET        reduce using rule 43 (unary_operator -> ELEQ_OPERATOR .)
    VARIABLE        reduce using rule 43 (unary_operator -> ELEQ_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 43 (unary_operator -> ELEQ_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 43 (unary_operator -> ELEQ_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 43 (unary_operator -> ELEQ_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 43 (unary_operator -> ELEQ_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 43 (unary_operator -> ELEQ_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 43 (unary_operator -> ELEQ_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 43 (unary_operator -> ELEQ_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 43 (unary_operator -> ELEQ_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 43 (unary_operator -> ELEQ_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 43 (unary_operator -> ELEQ_OPERATOR .)
    NOT_OPERATOR    reduce using rule 43 (unary_operator -> ELEQ_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 43 (unary_operator -> ELEQ_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 43 (unary_operator -> ELEQ_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 43 (unary_operator -> ELEQ_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 43 (unary_operator -> ELEQ_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 43 (unary_operator -> ELEQ_OPERATOR .)
    DO              reduce using rule 43 (unary_operator -> ELEQ_OPERATOR .)
    GET             reduce using rule 43 (unary_operator -> ELEQ_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 43 (unary_operator -> ELEQ_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 43 (unary_operator -> ELEQ_OPERATOR .)
    OCT_NUMBER      reduce using rule 43 (unary_operator -> ELEQ_OPERATOR .)
    DEC_NUMBER      reduce using rule 43 (unary_operator -> ELEQ_OPERATOR .)
    HEX_NUMBER      reduce using rule 43 (unary_operator -> ELEQ_OPERATOR .)
    TRUE            reduce using rule 43 (unary_operator -> ELEQ_OPERATOR .)
    FALSE           reduce using rule 43 (unary_operator -> ELEQ_OPERATOR .)


state 44

    (44) unary_operator -> ELLT_OPERATOR .

    LBRACKET        reduce using rule 44 (unary_operator -> ELLT_OPERATOR .)
    VARIABLE        reduce using rule 44 (unary_operator -> ELLT_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 44 (unary_operator -> ELLT_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 44 (unary_operator -> ELLT_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 44 (unary_operator -> ELLT_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 44 (unary_operator -> ELLT_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 44 (unary_operator -> ELLT_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 44 (unary_operator -> ELLT_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 44 (unary_operator -> ELLT_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 44 (unary_operator -> ELLT_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 44 (unary_operator -> ELLT_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 44 (unary_operator -> ELLT_OPERATOR .)
    NOT_OPERATOR    reduce using rule 44 (unary_operator -> ELLT_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 44 (unary_operator -> ELLT_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 44 (unary_operator -> ELLT_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 44 (unary_operator -> ELLT_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 44 (unary_operator -> ELLT_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 44 (unary_operator -> ELLT_OPERATOR .)
    DO              reduce using rule 44 (unary_operator -> ELLT_OPERATOR .)
    GET             reduce using rule 44 (unary_operator -> ELLT_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 44 (unary_operator -> ELLT_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 44 (unary_operator -> ELLT_OPERATOR .)
    OCT_NUMBER      reduce using rule 44 (unary_operator -> ELLT_OPERATOR .)
    DEC_NUMBER      reduce using rule 44 (unary_operator -> ELLT_OPERATOR .)
    HEX_NUMBER      reduce using rule 44 (unary_operator -> ELLT_OPERATOR .)
    TRUE            reduce using rule 44 (unary_operator -> ELLT_OPERATOR .)
    FALSE           reduce using rule 44 (unary_operator -> ELLT_OPERATOR .)


state 45

    (45) unary_operator -> ELGT_OPERATOR .

    LBRACKET        reduce using rule 45 (unary_operator -> ELGT_OPERATOR .)
    VARIABLE        reduce using rule 45 (unary_operator -> ELGT_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 45 (unary_operator -> ELGT_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 45 (unary_operator -> ELGT_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 45 (unary_operator -> ELGT_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 45 (unary_operator -> ELGT_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 45 (unary_operator -> ELGT_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 45 (unary_operator -> ELGT_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 45 (unary_operator -> ELGT_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 45 (unary_operator -> ELGT_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 45 (unary_operator -> ELGT_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 45 (unary_operator -> ELGT_OPERATOR .)
    NOT_OPERATOR    reduce using rule 45 (unary_operator -> ELGT_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 45 (unary_operator -> ELGT_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 45 (unary_operator -> ELGT_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 45 (unary_operator -> ELGT_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 45 (unary_operator -> ELGT_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 45 (unary_operator -> ELGT_OPERATOR .)
    DO              reduce using rule 45 (unary_operator -> ELGT_OPERATOR .)
    GET             reduce using rule 45 (unary_operator -> ELGT_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 45 (unary_operator -> ELGT_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 45 (unary_operator -> ELGT_OPERATOR .)
    OCT_NUMBER      reduce using rule 45 (unary_operator -> ELGT_OPERATOR .)
    DEC_NUMBER      reduce using rule 45 (unary_operator -> ELGT_OPERATOR .)
    HEX_NUMBER      reduce using rule 45 (unary_operator -> ELGT_OPERATOR .)
    TRUE            reduce using rule 45 (unary_operator -> ELGT_OPERATOR .)
    FALSE           reduce using rule 45 (unary_operator -> ELGT_OPERATOR .)


state 46

    (46) unary_operator -> ELLTE_OPERATOR .

    LBRACKET        reduce using rule 46 (unary_operator -> ELLTE_OPERATOR .)
    VARIABLE        reduce using rule 46 (unary_operator -> ELLTE_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 46 (unary_operator -> ELLTE_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 46 (unary_operator -> ELLTE_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 46 (unary_operator -> ELLTE_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 46 (unary_operator -> ELLTE_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 46 (unary_operator -> ELLTE_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 46 (unary_operator -> ELLTE_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 46 (unary_operator -> ELLTE_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 46 (unary_operator -> ELLTE_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 46 (unary_operator -> ELLTE_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 46 (unary_operator -> ELLTE_OPERATOR .)
    NOT_OPERATOR    reduce using rule 46 (unary_operator -> ELLTE_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 46 (unary_operator -> ELLTE_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 46 (unary_operator -> ELLTE_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 46 (unary_operator -> ELLTE_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 46 (unary_operator -> ELLTE_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 46 (unary_operator -> ELLTE_OPERATOR .)
    DO              reduce using rule 46 (unary_operator -> ELLTE_OPERATOR .)
    GET             reduce using rule 46 (unary_operator -> ELLTE_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 46 (unary_operator -> ELLTE_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 46 (unary_operator -> ELLTE_OPERATOR .)
    OCT_NUMBER      reduce using rule 46 (unary_operator -> ELLTE_OPERATOR .)
    DEC_NUMBER      reduce using rule 46 (unary_operator -> ELLTE_OPERATOR .)
    HEX_NUMBER      reduce using rule 46 (unary_operator -> ELLTE_OPERATOR .)
    TRUE            reduce using rule 46 (unary_operator -> ELLTE_OPERATOR .)
    FALSE           reduce using rule 46 (unary_operator -> ELLTE_OPERATOR .)


state 47

    (47) unary_operator -> ELGTE_OPERATOR .

    LBRACKET        reduce using rule 47 (unary_operator -> ELGTE_OPERATOR .)
    VARIABLE        reduce using rule 47 (unary_operator -> ELGTE_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 47 (unary_operator -> ELGTE_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 47 (unary_operator -> ELGTE_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 47 (unary_operator -> ELGTE_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 47 (unary_operator -> ELGTE_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 47 (unary_operator -> ELGTE_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 47 (unary_operator -> ELGTE_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 47 (unary_operator -> ELGTE_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 47 (unary_operator -> ELGTE_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 47 (unary_operator -> ELGTE_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 47 (unary_operator -> ELGTE_OPERATOR .)
    NOT_OPERATOR    reduce using rule 47 (unary_operator -> ELGTE_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 47 (unary_operator -> ELGTE_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 47 (unary_operator -> ELGTE_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 47 (unary_operator -> ELGTE_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 47 (unary_operator -> ELGTE_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 47 (unary_operator -> ELGTE_OPERATOR .)
    DO              reduce using rule 47 (unary_operator -> ELGTE_OPERATOR .)
    GET             reduce using rule 47 (unary_operator -> ELGTE_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 47 (unary_operator -> ELGTE_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 47 (unary_operator -> ELGTE_OPERATOR .)
    OCT_NUMBER      reduce using rule 47 (unary_operator -> ELGTE_OPERATOR .)
    DEC_NUMBER      reduce using rule 47 (unary_operator -> ELGTE_OPERATOR .)
    HEX_NUMBER      reduce using rule 47 (unary_operator -> ELGTE_OPERATOR .)
    TRUE            reduce using rule 47 (unary_operator -> ELGTE_OPERATOR .)
    FALSE           reduce using rule 47 (unary_operator -> ELGTE_OPERATOR .)


state 48

    (48) unary_operator -> NOT_OPERATOR .

    LBRACKET        reduce using rule 48 (unary_operator -> NOT_OPERATOR .)
    VARIABLE        reduce using rule 48 (unary_operator -> NOT_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 48 (unary_operator -> NOT_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 48 (unary_operator -> NOT_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 48 (unary_operator -> NOT_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 48 (unary_operator -> NOT_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 48 (unary_operator -> NOT_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 48 (unary_operator -> NOT_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 48 (unary_operator -> NOT_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 48 (unary_operator -> NOT_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 48 (unary_operator -> NOT_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 48 (unary_operator -> NOT_OPERATOR .)
    NOT_OPERATOR    reduce using rule 48 (unary_operator -> NOT_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 48 (unary_operator -> NOT_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 48 (unary_operator -> NOT_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 48 (unary_operator -> NOT_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 48 (unary_operator -> NOT_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 48 (unary_operator -> NOT_OPERATOR .)
    DO              reduce using rule 48 (unary_operator -> NOT_OPERATOR .)
    GET             reduce using rule 48 (unary_operator -> NOT_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 48 (unary_operator -> NOT_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 48 (unary_operator -> NOT_OPERATOR .)
    OCT_NUMBER      reduce using rule 48 (unary_operator -> NOT_OPERATOR .)
    DEC_NUMBER      reduce using rule 48 (unary_operator -> NOT_OPERATOR .)
    HEX_NUMBER      reduce using rule 48 (unary_operator -> NOT_OPERATOR .)
    TRUE            reduce using rule 48 (unary_operator -> NOT_OPERATOR .)
    FALSE           reduce using rule 48 (unary_operator -> NOT_OPERATOR .)


state 49

    (49) unary_operator -> MXTRUE_OPERATOR .

    LBRACKET        reduce using rule 49 (unary_operator -> MXTRUE_OPERATOR .)
    VARIABLE        reduce using rule 49 (unary_operator -> MXTRUE_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 49 (unary_operator -> MXTRUE_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 49 (unary_operator -> MXTRUE_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 49 (unary_operator -> MXTRUE_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 49 (unary_operator -> MXTRUE_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 49 (unary_operator -> MXTRUE_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 49 (unary_operator -> MXTRUE_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 49 (unary_operator -> MXTRUE_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 49 (unary_operator -> MXTRUE_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 49 (unary_operator -> MXTRUE_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 49 (unary_operator -> MXTRUE_OPERATOR .)
    NOT_OPERATOR    reduce using rule 49 (unary_operator -> MXTRUE_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 49 (unary_operator -> MXTRUE_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 49 (unary_operator -> MXTRUE_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 49 (unary_operator -> MXTRUE_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 49 (unary_operator -> MXTRUE_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 49 (unary_operator -> MXTRUE_OPERATOR .)
    DO              reduce using rule 49 (unary_operator -> MXTRUE_OPERATOR .)
    GET             reduce using rule 49 (unary_operator -> MXTRUE_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 49 (unary_operator -> MXTRUE_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 49 (unary_operator -> MXTRUE_OPERATOR .)
    OCT_NUMBER      reduce using rule 49 (unary_operator -> MXTRUE_OPERATOR .)
    DEC_NUMBER      reduce using rule 49 (unary_operator -> MXTRUE_OPERATOR .)
    HEX_NUMBER      reduce using rule 49 (unary_operator -> MXTRUE_OPERATOR .)
    TRUE            reduce using rule 49 (unary_operator -> MXTRUE_OPERATOR .)
    FALSE           reduce using rule 49 (unary_operator -> MXTRUE_OPERATOR .)


state 50

    (50) unary_operator -> MXFALSE_OPERATOR .

    LBRACKET        reduce using rule 50 (unary_operator -> MXFALSE_OPERATOR .)
    VARIABLE        reduce using rule 50 (unary_operator -> MXFALSE_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 50 (unary_operator -> MXFALSE_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 50 (unary_operator -> MXFALSE_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 50 (unary_operator -> MXFALSE_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 50 (unary_operator -> MXFALSE_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 50 (unary_operator -> MXFALSE_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 50 (unary_operator -> MXFALSE_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 50 (unary_operator -> MXFALSE_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 50 (unary_operator -> MXFALSE_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 50 (unary_operator -> MXFALSE_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 50 (unary_operator -> MXFALSE_OPERATOR .)
    NOT_OPERATOR    reduce using rule 50 (unary_operator -> MXFALSE_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 50 (unary_operator -> MXFALSE_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 50 (unary_operator -> MXFALSE_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 50 (unary_operator -> MXFALSE_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 50 (unary_operator -> MXFALSE_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 50 (unary_operator -> MXFALSE_OPERATOR .)
    DO              reduce using rule 50 (unary_operator -> MXFALSE_OPERATOR .)
    GET             reduce using rule 50 (unary_operator -> MXFALSE_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 50 (unary_operator -> MXFALSE_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 50 (unary_operator -> MXFALSE_OPERATOR .)
    OCT_NUMBER      reduce using rule 50 (unary_operator -> MXFALSE_OPERATOR .)
    DEC_NUMBER      reduce using rule 50 (unary_operator -> MXFALSE_OPERATOR .)
    HEX_NUMBER      reduce using rule 50 (unary_operator -> MXFALSE_OPERATOR .)
    TRUE            reduce using rule 50 (unary_operator -> MXFALSE_OPERATOR .)
    FALSE           reduce using rule 50 (unary_operator -> MXFALSE_OPERATOR .)


state 51

    (51) unary_operator -> SIZE_OPERATOR .

    LBRACKET        reduce using rule 51 (unary_operator -> SIZE_OPERATOR .)
    VARIABLE        reduce using rule 51 (unary_operator -> SIZE_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 51 (unary_operator -> SIZE_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 51 (unary_operator -> SIZE_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 51 (unary_operator -> SIZE_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 51 (unary_operator -> SIZE_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 51 (unary_operator -> SIZE_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 51 (unary_operator -> SIZE_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 51 (unary_operator -> SIZE_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 51 (unary_operator -> SIZE_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 51 (unary_operator -> SIZE_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 51 (unary_operator -> SIZE_OPERATOR .)
    NOT_OPERATOR    reduce using rule 51 (unary_operator -> SIZE_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 51 (unary_operator -> SIZE_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 51 (unary_operator -> SIZE_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 51 (unary_operator -> SIZE_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 51 (unary_operator -> SIZE_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 51 (unary_operator -> SIZE_OPERATOR .)
    DO              reduce using rule 51 (unary_operator -> SIZE_OPERATOR .)
    GET             reduce using rule 51 (unary_operator -> SIZE_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 51 (unary_operator -> SIZE_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 51 (unary_operator -> SIZE_OPERATOR .)
    OCT_NUMBER      reduce using rule 51 (unary_operator -> SIZE_OPERATOR .)
    DEC_NUMBER      reduce using rule 51 (unary_operator -> SIZE_OPERATOR .)
    HEX_NUMBER      reduce using rule 51 (unary_operator -> SIZE_OPERATOR .)
    TRUE            reduce using rule 51 (unary_operator -> SIZE_OPERATOR .)
    FALSE           reduce using rule 51 (unary_operator -> SIZE_OPERATOR .)


state 52

    (52) unary_operator -> LOGITIZE_OPERATOR .

    LBRACKET        reduce using rule 52 (unary_operator -> LOGITIZE_OPERATOR .)
    VARIABLE        reduce using rule 52 (unary_operator -> LOGITIZE_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 52 (unary_operator -> LOGITIZE_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 52 (unary_operator -> LOGITIZE_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 52 (unary_operator -> LOGITIZE_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 52 (unary_operator -> LOGITIZE_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 52 (unary_operator -> LOGITIZE_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 52 (unary_operator -> LOGITIZE_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 52 (unary_operator -> LOGITIZE_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 52 (unary_operator -> LOGITIZE_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 52 (unary_operator -> LOGITIZE_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 52 (unary_operator -> LOGITIZE_OPERATOR .)
    NOT_OPERATOR    reduce using rule 52 (unary_operator -> LOGITIZE_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 52 (unary_operator -> LOGITIZE_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 52 (unary_operator -> LOGITIZE_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 52 (unary_operator -> LOGITIZE_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 52 (unary_operator -> LOGITIZE_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 52 (unary_operator -> LOGITIZE_OPERATOR .)
    DO              reduce using rule 52 (unary_operator -> LOGITIZE_OPERATOR .)
    GET             reduce using rule 52 (unary_operator -> LOGITIZE_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 52 (unary_operator -> LOGITIZE_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 52 (unary_operator -> LOGITIZE_OPERATOR .)
    OCT_NUMBER      reduce using rule 52 (unary_operator -> LOGITIZE_OPERATOR .)
    DEC_NUMBER      reduce using rule 52 (unary_operator -> LOGITIZE_OPERATOR .)
    HEX_NUMBER      reduce using rule 52 (unary_operator -> LOGITIZE_OPERATOR .)
    TRUE            reduce using rule 52 (unary_operator -> LOGITIZE_OPERATOR .)
    FALSE           reduce using rule 52 (unary_operator -> LOGITIZE_OPERATOR .)


state 53

    (53) unary_operator -> DIGITIZE_OPERATOR .

    LBRACKET        reduce using rule 53 (unary_operator -> DIGITIZE_OPERATOR .)
    VARIABLE        reduce using rule 53 (unary_operator -> DIGITIZE_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 53 (unary_operator -> DIGITIZE_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 53 (unary_operator -> DIGITIZE_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 53 (unary_operator -> DIGITIZE_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 53 (unary_operator -> DIGITIZE_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 53 (unary_operator -> DIGITIZE_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 53 (unary_operator -> DIGITIZE_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 53 (unary_operator -> DIGITIZE_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 53 (unary_operator -> DIGITIZE_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 53 (unary_operator -> DIGITIZE_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 53 (unary_operator -> DIGITIZE_OPERATOR .)
    NOT_OPERATOR    reduce using rule 53 (unary_operator -> DIGITIZE_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 53 (unary_operator -> DIGITIZE_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 53 (unary_operator -> DIGITIZE_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 53 (unary_operator -> DIGITIZE_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 53 (unary_operator -> DIGITIZE_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 53 (unary_operator -> DIGITIZE_OPERATOR .)
    DO              reduce using rule 53 (unary_operator -> DIGITIZE_OPERATOR .)
    GET             reduce using rule 53 (unary_operator -> DIGITIZE_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 53 (unary_operator -> DIGITIZE_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 53 (unary_operator -> DIGITIZE_OPERATOR .)
    OCT_NUMBER      reduce using rule 53 (unary_operator -> DIGITIZE_OPERATOR .)
    DEC_NUMBER      reduce using rule 53 (unary_operator -> DIGITIZE_OPERATOR .)
    HEX_NUMBER      reduce using rule 53 (unary_operator -> DIGITIZE_OPERATOR .)
    TRUE            reduce using rule 53 (unary_operator -> DIGITIZE_OPERATOR .)
    FALSE           reduce using rule 53 (unary_operator -> DIGITIZE_OPERATOR .)


state 54

    (75) base_values -> number .

    NEWLINE         reduce using rule 75 (base_values -> number .)
    ASSIGNMENT      reduce using rule 75 (base_values -> number .)
    OS_BRACKET      reduce using rule 75 (base_values -> number .)
    PLUS            reduce using rule 75 (base_values -> number .)
    MINUS           reduce using rule 75 (base_values -> number .)
    MULTIPLY        reduce using rule 75 (base_values -> number .)
    DIVIDE          reduce using rule 75 (base_values -> number .)
    AND_OPERATOR    reduce using rule 75 (base_values -> number .)
    RBRACKET        reduce using rule 75 (base_values -> number .)
    LBRACKET        reduce using rule 75 (base_values -> number .)
    VARIABLE        reduce using rule 75 (base_values -> number .)
    MXEQ_OPERATOR   reduce using rule 75 (base_values -> number .)
    MXLT_OPERATOR   reduce using rule 75 (base_values -> number .)
    MXGT_OPERATOR   reduce using rule 75 (base_values -> number .)
    MXLTE_OPERATOR  reduce using rule 75 (base_values -> number .)
    MXGTE_OPERATOR  reduce using rule 75 (base_values -> number .)
    ELEQ_OPERATOR   reduce using rule 75 (base_values -> number .)
    ELLT_OPERATOR   reduce using rule 75 (base_values -> number .)
    ELGT_OPERATOR   reduce using rule 75 (base_values -> number .)
    ELLTE_OPERATOR  reduce using rule 75 (base_values -> number .)
    ELGTE_OPERATOR  reduce using rule 75 (base_values -> number .)
    NOT_OPERATOR    reduce using rule 75 (base_values -> number .)
    MXTRUE_OPERATOR reduce using rule 75 (base_values -> number .)
    MXFALSE_OPERATOR reduce using rule 75 (base_values -> number .)
    SIZE_OPERATOR   reduce using rule 75 (base_values -> number .)
    LOGITIZE_OPERATOR reduce using rule 75 (base_values -> number .)
    DIGITIZE_OPERATOR reduce using rule 75 (base_values -> number .)
    DO              reduce using rule 75 (base_values -> number .)
    GET             reduce using rule 75 (base_values -> number .)
    REDUCE_OPERATOR reduce using rule 75 (base_values -> number .)
    EXTEND_OPERATOR reduce using rule 75 (base_values -> number .)
    OCT_NUMBER      reduce using rule 75 (base_values -> number .)
    DEC_NUMBER      reduce using rule 75 (base_values -> number .)
    HEX_NUMBER      reduce using rule 75 (base_values -> number .)
    TRUE            reduce using rule 75 (base_values -> number .)
    FALSE           reduce using rule 75 (base_values -> number .)
    COMMA           reduce using rule 75 (base_values -> number .)
    CS_BRACKET      reduce using rule 75 (base_values -> number .)


state 55

    (76) base_values -> boolean .

    NEWLINE         reduce using rule 76 (base_values -> boolean .)
    ASSIGNMENT      reduce using rule 76 (base_values -> boolean .)
    OS_BRACKET      reduce using rule 76 (base_values -> boolean .)
    PLUS            reduce using rule 76 (base_values -> boolean .)
    MINUS           reduce using rule 76 (base_values -> boolean .)
    MULTIPLY        reduce using rule 76 (base_values -> boolean .)
    DIVIDE          reduce using rule 76 (base_values -> boolean .)
    AND_OPERATOR    reduce using rule 76 (base_values -> boolean .)
    RBRACKET        reduce using rule 76 (base_values -> boolean .)
    LBRACKET        reduce using rule 76 (base_values -> boolean .)
    VARIABLE        reduce using rule 76 (base_values -> boolean .)
    MXEQ_OPERATOR   reduce using rule 76 (base_values -> boolean .)
    MXLT_OPERATOR   reduce using rule 76 (base_values -> boolean .)
    MXGT_OPERATOR   reduce using rule 76 (base_values -> boolean .)
    MXLTE_OPERATOR  reduce using rule 76 (base_values -> boolean .)
    MXGTE_OPERATOR  reduce using rule 76 (base_values -> boolean .)
    ELEQ_OPERATOR   reduce using rule 76 (base_values -> boolean .)
    ELLT_OPERATOR   reduce using rule 76 (base_values -> boolean .)
    ELGT_OPERATOR   reduce using rule 76 (base_values -> boolean .)
    ELLTE_OPERATOR  reduce using rule 76 (base_values -> boolean .)
    ELGTE_OPERATOR  reduce using rule 76 (base_values -> boolean .)
    NOT_OPERATOR    reduce using rule 76 (base_values -> boolean .)
    MXTRUE_OPERATOR reduce using rule 76 (base_values -> boolean .)
    MXFALSE_OPERATOR reduce using rule 76 (base_values -> boolean .)
    SIZE_OPERATOR   reduce using rule 76 (base_values -> boolean .)
    LOGITIZE_OPERATOR reduce using rule 76 (base_values -> boolean .)
    DIGITIZE_OPERATOR reduce using rule 76 (base_values -> boolean .)
    DO              reduce using rule 76 (base_values -> boolean .)
    GET             reduce using rule 76 (base_values -> boolean .)
    REDUCE_OPERATOR reduce using rule 76 (base_values -> boolean .)
    EXTEND_OPERATOR reduce using rule 76 (base_values -> boolean .)
    OCT_NUMBER      reduce using rule 76 (base_values -> boolean .)
    DEC_NUMBER      reduce using rule 76 (base_values -> boolean .)
    HEX_NUMBER      reduce using rule 76 (base_values -> boolean .)
    TRUE            reduce using rule 76 (base_values -> boolean .)
    FALSE           reduce using rule 76 (base_values -> boolean .)
    COMMA           reduce using rule 76 (base_values -> boolean .)
    CS_BRACKET      reduce using rule 76 (base_values -> boolean .)


state 56

    (63) do -> DO . VARIABLE call_parameters

    VARIABLE        shift and go to state 87


state 57

    (67) get -> GET . VARIABLE

    VARIABLE        shift and go to state 88


state 58

    (61) reduce -> REDUCE_OPERATOR . expression dimensions
    (31) expression -> . expression binary_operator expression
    (37) expression -> . unary_operator expression
    (54) expression -> . base_values
    (55) expression -> . assignment
    (56) expression -> . indexing
    (57) expression -> . do
    (58) expression -> . get
    (59) expression -> . reduce
    (60) expression -> . extend
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . VARIABLE
    (38) unary_operator -> . MXEQ_OPERATOR
    (39) unary_operator -> . MXLT_OPERATOR
    (40) unary_operator -> . MXGT_OPERATOR
    (41) unary_operator -> . MXLTE_OPERATOR
    (42) unary_operator -> . MXGTE_OPERATOR
    (43) unary_operator -> . ELEQ_OPERATOR
    (44) unary_operator -> . ELLT_OPERATOR
    (45) unary_operator -> . ELGT_OPERATOR
    (46) unary_operator -> . ELLTE_OPERATOR
    (47) unary_operator -> . ELGTE_OPERATOR
    (48) unary_operator -> . NOT_OPERATOR
    (49) unary_operator -> . MXTRUE_OPERATOR
    (50) unary_operator -> . MXFALSE_OPERATOR
    (51) unary_operator -> . SIZE_OPERATOR
    (52) unary_operator -> . LOGITIZE_OPERATOR
    (53) unary_operator -> . DIGITIZE_OPERATOR
    (75) base_values -> . number
    (76) base_values -> . boolean
    (30) assignment -> . expression ASSIGNMENT expression
    (80) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (63) do -> . DO VARIABLE call_parameters
    (67) get -> . GET VARIABLE
    (61) reduce -> . REDUCE_OPERATOR expression dimensions
    (62) extend -> . EXTEND_OPERATOR expression dimensions
    (70) number -> . OCT_NUMBER
    (71) number -> . DEC_NUMBER
    (72) number -> . HEX_NUMBER
    (73) boolean -> . TRUE
    (74) boolean -> . FALSE

    LBRACKET        shift and go to state 29
    VARIABLE        shift and go to state 20
    MXEQ_OPERATOR   shift and go to state 38
    MXLT_OPERATOR   shift and go to state 39
    MXGT_OPERATOR   shift and go to state 40
    MXLTE_OPERATOR  shift and go to state 41
    MXGTE_OPERATOR  shift and go to state 42
    ELEQ_OPERATOR   shift and go to state 43
    ELLT_OPERATOR   shift and go to state 44
    ELGT_OPERATOR   shift and go to state 45
    ELLTE_OPERATOR  shift and go to state 46
    ELGTE_OPERATOR  shift and go to state 47
    NOT_OPERATOR    shift and go to state 48
    MXTRUE_OPERATOR shift and go to state 49
    MXFALSE_OPERATOR shift and go to state 50
    SIZE_OPERATOR   shift and go to state 51
    LOGITIZE_OPERATOR shift and go to state 52
    DIGITIZE_OPERATOR shift and go to state 53
    DO              shift and go to state 56
    GET             shift and go to state 57
    REDUCE_OPERATOR shift and go to state 58
    EXTEND_OPERATOR shift and go to state 59
    OCT_NUMBER      shift and go to state 60
    DEC_NUMBER      shift and go to state 61
    HEX_NUMBER      shift and go to state 62
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    expression                     shift and go to state 89
    unary_operator                 shift and go to state 21
    base_values                    shift and go to state 22
    assignment                     shift and go to state 23
    indexing                       shift and go to state 24
    do                             shift and go to state 25
    get                            shift and go to state 26
    reduce                         shift and go to state 27
    extend                         shift and go to state 28
    number                         shift and go to state 54
    boolean                        shift and go to state 55

state 59

    (62) extend -> EXTEND_OPERATOR . expression dimensions
    (31) expression -> . expression binary_operator expression
    (37) expression -> . unary_operator expression
    (54) expression -> . base_values
    (55) expression -> . assignment
    (56) expression -> . indexing
    (57) expression -> . do
    (58) expression -> . get
    (59) expression -> . reduce
    (60) expression -> . extend
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . VARIABLE
    (38) unary_operator -> . MXEQ_OPERATOR
    (39) unary_operator -> . MXLT_OPERATOR
    (40) unary_operator -> . MXGT_OPERATOR
    (41) unary_operator -> . MXLTE_OPERATOR
    (42) unary_operator -> . MXGTE_OPERATOR
    (43) unary_operator -> . ELEQ_OPERATOR
    (44) unary_operator -> . ELLT_OPERATOR
    (45) unary_operator -> . ELGT_OPERATOR
    (46) unary_operator -> . ELLTE_OPERATOR
    (47) unary_operator -> . ELGTE_OPERATOR
    (48) unary_operator -> . NOT_OPERATOR
    (49) unary_operator -> . MXTRUE_OPERATOR
    (50) unary_operator -> . MXFALSE_OPERATOR
    (51) unary_operator -> . SIZE_OPERATOR
    (52) unary_operator -> . LOGITIZE_OPERATOR
    (53) unary_operator -> . DIGITIZE_OPERATOR
    (75) base_values -> . number
    (76) base_values -> . boolean
    (30) assignment -> . expression ASSIGNMENT expression
    (80) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (63) do -> . DO VARIABLE call_parameters
    (67) get -> . GET VARIABLE
    (61) reduce -> . REDUCE_OPERATOR expression dimensions
    (62) extend -> . EXTEND_OPERATOR expression dimensions
    (70) number -> . OCT_NUMBER
    (71) number -> . DEC_NUMBER
    (72) number -> . HEX_NUMBER
    (73) boolean -> . TRUE
    (74) boolean -> . FALSE

    LBRACKET        shift and go to state 29
    VARIABLE        shift and go to state 20
    MXEQ_OPERATOR   shift and go to state 38
    MXLT_OPERATOR   shift and go to state 39
    MXGT_OPERATOR   shift and go to state 40
    MXLTE_OPERATOR  shift and go to state 41
    MXGTE_OPERATOR  shift and go to state 42
    ELEQ_OPERATOR   shift and go to state 43
    ELLT_OPERATOR   shift and go to state 44
    ELGT_OPERATOR   shift and go to state 45
    ELLTE_OPERATOR  shift and go to state 46
    ELGTE_OPERATOR  shift and go to state 47
    NOT_OPERATOR    shift and go to state 48
    MXTRUE_OPERATOR shift and go to state 49
    MXFALSE_OPERATOR shift and go to state 50
    SIZE_OPERATOR   shift and go to state 51
    LOGITIZE_OPERATOR shift and go to state 52
    DIGITIZE_OPERATOR shift and go to state 53
    DO              shift and go to state 56
    GET             shift and go to state 57
    REDUCE_OPERATOR shift and go to state 58
    EXTEND_OPERATOR shift and go to state 59
    OCT_NUMBER      shift and go to state 60
    DEC_NUMBER      shift and go to state 61
    HEX_NUMBER      shift and go to state 62
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    expression                     shift and go to state 90
    unary_operator                 shift and go to state 21
    base_values                    shift and go to state 22
    assignment                     shift and go to state 23
    indexing                       shift and go to state 24
    do                             shift and go to state 25
    get                            shift and go to state 26
    reduce                         shift and go to state 27
    extend                         shift and go to state 28
    number                         shift and go to state 54
    boolean                        shift and go to state 55

state 60

    (70) number -> OCT_NUMBER .

    NEWLINE         reduce using rule 70 (number -> OCT_NUMBER .)
    ASSIGNMENT      reduce using rule 70 (number -> OCT_NUMBER .)
    OS_BRACKET      reduce using rule 70 (number -> OCT_NUMBER .)
    PLUS            reduce using rule 70 (number -> OCT_NUMBER .)
    MINUS           reduce using rule 70 (number -> OCT_NUMBER .)
    MULTIPLY        reduce using rule 70 (number -> OCT_NUMBER .)
    DIVIDE          reduce using rule 70 (number -> OCT_NUMBER .)
    AND_OPERATOR    reduce using rule 70 (number -> OCT_NUMBER .)
    RBRACKET        reduce using rule 70 (number -> OCT_NUMBER .)
    LBRACKET        reduce using rule 70 (number -> OCT_NUMBER .)
    VARIABLE        reduce using rule 70 (number -> OCT_NUMBER .)
    MXEQ_OPERATOR   reduce using rule 70 (number -> OCT_NUMBER .)
    MXLT_OPERATOR   reduce using rule 70 (number -> OCT_NUMBER .)
    MXGT_OPERATOR   reduce using rule 70 (number -> OCT_NUMBER .)
    MXLTE_OPERATOR  reduce using rule 70 (number -> OCT_NUMBER .)
    MXGTE_OPERATOR  reduce using rule 70 (number -> OCT_NUMBER .)
    ELEQ_OPERATOR   reduce using rule 70 (number -> OCT_NUMBER .)
    ELLT_OPERATOR   reduce using rule 70 (number -> OCT_NUMBER .)
    ELGT_OPERATOR   reduce using rule 70 (number -> OCT_NUMBER .)
    ELLTE_OPERATOR  reduce using rule 70 (number -> OCT_NUMBER .)
    ELGTE_OPERATOR  reduce using rule 70 (number -> OCT_NUMBER .)
    NOT_OPERATOR    reduce using rule 70 (number -> OCT_NUMBER .)
    MXTRUE_OPERATOR reduce using rule 70 (number -> OCT_NUMBER .)
    MXFALSE_OPERATOR reduce using rule 70 (number -> OCT_NUMBER .)
    SIZE_OPERATOR   reduce using rule 70 (number -> OCT_NUMBER .)
    LOGITIZE_OPERATOR reduce using rule 70 (number -> OCT_NUMBER .)
    DIGITIZE_OPERATOR reduce using rule 70 (number -> OCT_NUMBER .)
    DO              reduce using rule 70 (number -> OCT_NUMBER .)
    GET             reduce using rule 70 (number -> OCT_NUMBER .)
    REDUCE_OPERATOR reduce using rule 70 (number -> OCT_NUMBER .)
    EXTEND_OPERATOR reduce using rule 70 (number -> OCT_NUMBER .)
    OCT_NUMBER      reduce using rule 70 (number -> OCT_NUMBER .)
    DEC_NUMBER      reduce using rule 70 (number -> OCT_NUMBER .)
    HEX_NUMBER      reduce using rule 70 (number -> OCT_NUMBER .)
    TRUE            reduce using rule 70 (number -> OCT_NUMBER .)
    FALSE           reduce using rule 70 (number -> OCT_NUMBER .)
    COMMA           reduce using rule 70 (number -> OCT_NUMBER .)
    CS_BRACKET      reduce using rule 70 (number -> OCT_NUMBER .)


state 61

    (71) number -> DEC_NUMBER .

    NEWLINE         reduce using rule 71 (number -> DEC_NUMBER .)
    ASSIGNMENT      reduce using rule 71 (number -> DEC_NUMBER .)
    OS_BRACKET      reduce using rule 71 (number -> DEC_NUMBER .)
    PLUS            reduce using rule 71 (number -> DEC_NUMBER .)
    MINUS           reduce using rule 71 (number -> DEC_NUMBER .)
    MULTIPLY        reduce using rule 71 (number -> DEC_NUMBER .)
    DIVIDE          reduce using rule 71 (number -> DEC_NUMBER .)
    AND_OPERATOR    reduce using rule 71 (number -> DEC_NUMBER .)
    RBRACKET        reduce using rule 71 (number -> DEC_NUMBER .)
    LBRACKET        reduce using rule 71 (number -> DEC_NUMBER .)
    VARIABLE        reduce using rule 71 (number -> DEC_NUMBER .)
    MXEQ_OPERATOR   reduce using rule 71 (number -> DEC_NUMBER .)
    MXLT_OPERATOR   reduce using rule 71 (number -> DEC_NUMBER .)
    MXGT_OPERATOR   reduce using rule 71 (number -> DEC_NUMBER .)
    MXLTE_OPERATOR  reduce using rule 71 (number -> DEC_NUMBER .)
    MXGTE_OPERATOR  reduce using rule 71 (number -> DEC_NUMBER .)
    ELEQ_OPERATOR   reduce using rule 71 (number -> DEC_NUMBER .)
    ELLT_OPERATOR   reduce using rule 71 (number -> DEC_NUMBER .)
    ELGT_OPERATOR   reduce using rule 71 (number -> DEC_NUMBER .)
    ELLTE_OPERATOR  reduce using rule 71 (number -> DEC_NUMBER .)
    ELGTE_OPERATOR  reduce using rule 71 (number -> DEC_NUMBER .)
    NOT_OPERATOR    reduce using rule 71 (number -> DEC_NUMBER .)
    MXTRUE_OPERATOR reduce using rule 71 (number -> DEC_NUMBER .)
    MXFALSE_OPERATOR reduce using rule 71 (number -> DEC_NUMBER .)
    SIZE_OPERATOR   reduce using rule 71 (number -> DEC_NUMBER .)
    LOGITIZE_OPERATOR reduce using rule 71 (number -> DEC_NUMBER .)
    DIGITIZE_OPERATOR reduce using rule 71 (number -> DEC_NUMBER .)
    DO              reduce using rule 71 (number -> DEC_NUMBER .)
    GET             reduce using rule 71 (number -> DEC_NUMBER .)
    REDUCE_OPERATOR reduce using rule 71 (number -> DEC_NUMBER .)
    EXTEND_OPERATOR reduce using rule 71 (number -> DEC_NUMBER .)
    OCT_NUMBER      reduce using rule 71 (number -> DEC_NUMBER .)
    DEC_NUMBER      reduce using rule 71 (number -> DEC_NUMBER .)
    HEX_NUMBER      reduce using rule 71 (number -> DEC_NUMBER .)
    TRUE            reduce using rule 71 (number -> DEC_NUMBER .)
    FALSE           reduce using rule 71 (number -> DEC_NUMBER .)
    COMMA           reduce using rule 71 (number -> DEC_NUMBER .)
    CS_BRACKET      reduce using rule 71 (number -> DEC_NUMBER .)


state 62

    (72) number -> HEX_NUMBER .

    NEWLINE         reduce using rule 72 (number -> HEX_NUMBER .)
    ASSIGNMENT      reduce using rule 72 (number -> HEX_NUMBER .)
    OS_BRACKET      reduce using rule 72 (number -> HEX_NUMBER .)
    PLUS            reduce using rule 72 (number -> HEX_NUMBER .)
    MINUS           reduce using rule 72 (number -> HEX_NUMBER .)
    MULTIPLY        reduce using rule 72 (number -> HEX_NUMBER .)
    DIVIDE          reduce using rule 72 (number -> HEX_NUMBER .)
    AND_OPERATOR    reduce using rule 72 (number -> HEX_NUMBER .)
    RBRACKET        reduce using rule 72 (number -> HEX_NUMBER .)
    LBRACKET        reduce using rule 72 (number -> HEX_NUMBER .)
    VARIABLE        reduce using rule 72 (number -> HEX_NUMBER .)
    MXEQ_OPERATOR   reduce using rule 72 (number -> HEX_NUMBER .)
    MXLT_OPERATOR   reduce using rule 72 (number -> HEX_NUMBER .)
    MXGT_OPERATOR   reduce using rule 72 (number -> HEX_NUMBER .)
    MXLTE_OPERATOR  reduce using rule 72 (number -> HEX_NUMBER .)
    MXGTE_OPERATOR  reduce using rule 72 (number -> HEX_NUMBER .)
    ELEQ_OPERATOR   reduce using rule 72 (number -> HEX_NUMBER .)
    ELLT_OPERATOR   reduce using rule 72 (number -> HEX_NUMBER .)
    ELGT_OPERATOR   reduce using rule 72 (number -> HEX_NUMBER .)
    ELLTE_OPERATOR  reduce using rule 72 (number -> HEX_NUMBER .)
    ELGTE_OPERATOR  reduce using rule 72 (number -> HEX_NUMBER .)
    NOT_OPERATOR    reduce using rule 72 (number -> HEX_NUMBER .)
    MXTRUE_OPERATOR reduce using rule 72 (number -> HEX_NUMBER .)
    MXFALSE_OPERATOR reduce using rule 72 (number -> HEX_NUMBER .)
    SIZE_OPERATOR   reduce using rule 72 (number -> HEX_NUMBER .)
    LOGITIZE_OPERATOR reduce using rule 72 (number -> HEX_NUMBER .)
    DIGITIZE_OPERATOR reduce using rule 72 (number -> HEX_NUMBER .)
    DO              reduce using rule 72 (number -> HEX_NUMBER .)
    GET             reduce using rule 72 (number -> HEX_NUMBER .)
    REDUCE_OPERATOR reduce using rule 72 (number -> HEX_NUMBER .)
    EXTEND_OPERATOR reduce using rule 72 (number -> HEX_NUMBER .)
    OCT_NUMBER      reduce using rule 72 (number -> HEX_NUMBER .)
    DEC_NUMBER      reduce using rule 72 (number -> HEX_NUMBER .)
    HEX_NUMBER      reduce using rule 72 (number -> HEX_NUMBER .)
    TRUE            reduce using rule 72 (number -> HEX_NUMBER .)
    FALSE           reduce using rule 72 (number -> HEX_NUMBER .)
    COMMA           reduce using rule 72 (number -> HEX_NUMBER .)
    CS_BRACKET      reduce using rule 72 (number -> HEX_NUMBER .)


state 63

    (8) parameters -> VARIABLE . parameters
    (9) parameters -> VARIABLE .
    (8) parameters -> . VARIABLE parameters
    (9) parameters -> . VARIABLE
    (10) parameters -> . empty
    (84) empty -> .

  ! reduce/reduce conflict for NEWLINE resolved using rule 9 (parameters -> VARIABLE .)
    NEWLINE         reduce using rule 9 (parameters -> VARIABLE .)
    VARIABLE        shift and go to state 63

  ! NEWLINE         [ reduce using rule 84 (empty -> .) ]

    parameters                     shift and go to state 91
    empty                          shift and go to state 65

state 64

    (7) func_decl -> TASK VARIABLE parameters .

    NEWLINE         reduce using rule 7 (func_decl -> TASK VARIABLE parameters .)


state 65

    (10) parameters -> empty .

    NEWLINE         reduce using rule 10 (parameters -> empty .)


state 66

    (4) function -> func_decl NEWLINE func_body RESULT . expression NEWLINE
    (31) expression -> . expression binary_operator expression
    (37) expression -> . unary_operator expression
    (54) expression -> . base_values
    (55) expression -> . assignment
    (56) expression -> . indexing
    (57) expression -> . do
    (58) expression -> . get
    (59) expression -> . reduce
    (60) expression -> . extend
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . VARIABLE
    (38) unary_operator -> . MXEQ_OPERATOR
    (39) unary_operator -> . MXLT_OPERATOR
    (40) unary_operator -> . MXGT_OPERATOR
    (41) unary_operator -> . MXLTE_OPERATOR
    (42) unary_operator -> . MXGTE_OPERATOR
    (43) unary_operator -> . ELEQ_OPERATOR
    (44) unary_operator -> . ELLT_OPERATOR
    (45) unary_operator -> . ELGT_OPERATOR
    (46) unary_operator -> . ELLTE_OPERATOR
    (47) unary_operator -> . ELGTE_OPERATOR
    (48) unary_operator -> . NOT_OPERATOR
    (49) unary_operator -> . MXTRUE_OPERATOR
    (50) unary_operator -> . MXFALSE_OPERATOR
    (51) unary_operator -> . SIZE_OPERATOR
    (52) unary_operator -> . LOGITIZE_OPERATOR
    (53) unary_operator -> . DIGITIZE_OPERATOR
    (75) base_values -> . number
    (76) base_values -> . boolean
    (30) assignment -> . expression ASSIGNMENT expression
    (80) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (63) do -> . DO VARIABLE call_parameters
    (67) get -> . GET VARIABLE
    (61) reduce -> . REDUCE_OPERATOR expression dimensions
    (62) extend -> . EXTEND_OPERATOR expression dimensions
    (70) number -> . OCT_NUMBER
    (71) number -> . DEC_NUMBER
    (72) number -> . HEX_NUMBER
    (73) boolean -> . TRUE
    (74) boolean -> . FALSE

    LBRACKET        shift and go to state 29
    VARIABLE        shift and go to state 20
    MXEQ_OPERATOR   shift and go to state 38
    MXLT_OPERATOR   shift and go to state 39
    MXGT_OPERATOR   shift and go to state 40
    MXLTE_OPERATOR  shift and go to state 41
    MXGTE_OPERATOR  shift and go to state 42
    ELEQ_OPERATOR   shift and go to state 43
    ELLT_OPERATOR   shift and go to state 44
    ELGT_OPERATOR   shift and go to state 45
    ELLTE_OPERATOR  shift and go to state 46
    ELGTE_OPERATOR  shift and go to state 47
    NOT_OPERATOR    shift and go to state 48
    MXTRUE_OPERATOR shift and go to state 49
    MXFALSE_OPERATOR shift and go to state 50
    SIZE_OPERATOR   shift and go to state 51
    LOGITIZE_OPERATOR shift and go to state 52
    DIGITIZE_OPERATOR shift and go to state 53
    DO              shift and go to state 56
    GET             shift and go to state 57
    REDUCE_OPERATOR shift and go to state 58
    EXTEND_OPERATOR shift and go to state 59
    OCT_NUMBER      shift and go to state 60
    DEC_NUMBER      shift and go to state 61
    HEX_NUMBER      shift and go to state 62
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    expression                     shift and go to state 92
    unary_operator                 shift and go to state 21
    base_values                    shift and go to state 22
    assignment                     shift and go to state 23
    indexing                       shift and go to state 24
    do                             shift and go to state 25
    get                            shift and go to state 26
    reduce                         shift and go to state 27
    extend                         shift and go to state 28
    number                         shift and go to state 54
    boolean                        shift and go to state 55

state 67

    (15) statement -> expression NEWLINE .

    PLEASE          reduce using rule 15 (statement -> expression NEWLINE .)
    VAR             reduce using rule 15 (statement -> expression NEWLINE .)
    LBRACKET        reduce using rule 15 (statement -> expression NEWLINE .)
    VARIABLE        reduce using rule 15 (statement -> expression NEWLINE .)
    FOR             reduce using rule 15 (statement -> expression NEWLINE .)
    SWITCH          reduce using rule 15 (statement -> expression NEWLINE .)
    MOVE            reduce using rule 15 (statement -> expression NEWLINE .)
    ROTATE_LEFT     reduce using rule 15 (statement -> expression NEWLINE .)
    ROTATE_RIGHT    reduce using rule 15 (statement -> expression NEWLINE .)
    GET_ENVIRONMENT reduce using rule 15 (statement -> expression NEWLINE .)
    MXEQ_OPERATOR   reduce using rule 15 (statement -> expression NEWLINE .)
    MXLT_OPERATOR   reduce using rule 15 (statement -> expression NEWLINE .)
    MXGT_OPERATOR   reduce using rule 15 (statement -> expression NEWLINE .)
    MXLTE_OPERATOR  reduce using rule 15 (statement -> expression NEWLINE .)
    MXGTE_OPERATOR  reduce using rule 15 (statement -> expression NEWLINE .)
    ELEQ_OPERATOR   reduce using rule 15 (statement -> expression NEWLINE .)
    ELLT_OPERATOR   reduce using rule 15 (statement -> expression NEWLINE .)
    ELGT_OPERATOR   reduce using rule 15 (statement -> expression NEWLINE .)
    ELLTE_OPERATOR  reduce using rule 15 (statement -> expression NEWLINE .)
    ELGTE_OPERATOR  reduce using rule 15 (statement -> expression NEWLINE .)
    NOT_OPERATOR    reduce using rule 15 (statement -> expression NEWLINE .)
    MXTRUE_OPERATOR reduce using rule 15 (statement -> expression NEWLINE .)
    MXFALSE_OPERATOR reduce using rule 15 (statement -> expression NEWLINE .)
    SIZE_OPERATOR   reduce using rule 15 (statement -> expression NEWLINE .)
    LOGITIZE_OPERATOR reduce using rule 15 (statement -> expression NEWLINE .)
    DIGITIZE_OPERATOR reduce using rule 15 (statement -> expression NEWLINE .)
    DO              reduce using rule 15 (statement -> expression NEWLINE .)
    GET             reduce using rule 15 (statement -> expression NEWLINE .)
    REDUCE_OPERATOR reduce using rule 15 (statement -> expression NEWLINE .)
    EXTEND_OPERATOR reduce using rule 15 (statement -> expression NEWLINE .)
    OCT_NUMBER      reduce using rule 15 (statement -> expression NEWLINE .)
    DEC_NUMBER      reduce using rule 15 (statement -> expression NEWLINE .)
    HEX_NUMBER      reduce using rule 15 (statement -> expression NEWLINE .)
    TRUE            reduce using rule 15 (statement -> expression NEWLINE .)
    FALSE           reduce using rule 15 (statement -> expression NEWLINE .)
    NEWLINE         reduce using rule 15 (statement -> expression NEWLINE .)
    RESULT          reduce using rule 15 (statement -> expression NEWLINE .)
    RBRACKET        reduce using rule 15 (statement -> expression NEWLINE .)
    THANKS          reduce using rule 15 (statement -> expression NEWLINE .)


state 68

    (31) expression -> expression binary_operator . expression
    (31) expression -> . expression binary_operator expression
    (37) expression -> . unary_operator expression
    (54) expression -> . base_values
    (55) expression -> . assignment
    (56) expression -> . indexing
    (57) expression -> . do
    (58) expression -> . get
    (59) expression -> . reduce
    (60) expression -> . extend
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . VARIABLE
    (38) unary_operator -> . MXEQ_OPERATOR
    (39) unary_operator -> . MXLT_OPERATOR
    (40) unary_operator -> . MXGT_OPERATOR
    (41) unary_operator -> . MXLTE_OPERATOR
    (42) unary_operator -> . MXGTE_OPERATOR
    (43) unary_operator -> . ELEQ_OPERATOR
    (44) unary_operator -> . ELLT_OPERATOR
    (45) unary_operator -> . ELGT_OPERATOR
    (46) unary_operator -> . ELLTE_OPERATOR
    (47) unary_operator -> . ELGTE_OPERATOR
    (48) unary_operator -> . NOT_OPERATOR
    (49) unary_operator -> . MXTRUE_OPERATOR
    (50) unary_operator -> . MXFALSE_OPERATOR
    (51) unary_operator -> . SIZE_OPERATOR
    (52) unary_operator -> . LOGITIZE_OPERATOR
    (53) unary_operator -> . DIGITIZE_OPERATOR
    (75) base_values -> . number
    (76) base_values -> . boolean
    (30) assignment -> . expression ASSIGNMENT expression
    (80) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (63) do -> . DO VARIABLE call_parameters
    (67) get -> . GET VARIABLE
    (61) reduce -> . REDUCE_OPERATOR expression dimensions
    (62) extend -> . EXTEND_OPERATOR expression dimensions
    (70) number -> . OCT_NUMBER
    (71) number -> . DEC_NUMBER
    (72) number -> . HEX_NUMBER
    (73) boolean -> . TRUE
    (74) boolean -> . FALSE

    LBRACKET        shift and go to state 29
    VARIABLE        shift and go to state 20
    MXEQ_OPERATOR   shift and go to state 38
    MXLT_OPERATOR   shift and go to state 39
    MXGT_OPERATOR   shift and go to state 40
    MXLTE_OPERATOR  shift and go to state 41
    MXGTE_OPERATOR  shift and go to state 42
    ELEQ_OPERATOR   shift and go to state 43
    ELLT_OPERATOR   shift and go to state 44
    ELGT_OPERATOR   shift and go to state 45
    ELLTE_OPERATOR  shift and go to state 46
    ELGTE_OPERATOR  shift and go to state 47
    NOT_OPERATOR    shift and go to state 48
    MXTRUE_OPERATOR shift and go to state 49
    MXFALSE_OPERATOR shift and go to state 50
    SIZE_OPERATOR   shift and go to state 51
    LOGITIZE_OPERATOR shift and go to state 52
    DIGITIZE_OPERATOR shift and go to state 53
    DO              shift and go to state 56
    GET             shift and go to state 57
    REDUCE_OPERATOR shift and go to state 58
    EXTEND_OPERATOR shift and go to state 59
    OCT_NUMBER      shift and go to state 60
    DEC_NUMBER      shift and go to state 61
    HEX_NUMBER      shift and go to state 62
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    expression                     shift and go to state 93
    unary_operator                 shift and go to state 21
    base_values                    shift and go to state 22
    assignment                     shift and go to state 23
    indexing                       shift and go to state 24
    do                             shift and go to state 25
    get                            shift and go to state 26
    reduce                         shift and go to state 27
    extend                         shift and go to state 28
    number                         shift and go to state 54
    boolean                        shift and go to state 55

state 69

    (30) assignment -> expression ASSIGNMENT . expression
    (31) expression -> . expression binary_operator expression
    (37) expression -> . unary_operator expression
    (54) expression -> . base_values
    (55) expression -> . assignment
    (56) expression -> . indexing
    (57) expression -> . do
    (58) expression -> . get
    (59) expression -> . reduce
    (60) expression -> . extend
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . VARIABLE
    (38) unary_operator -> . MXEQ_OPERATOR
    (39) unary_operator -> . MXLT_OPERATOR
    (40) unary_operator -> . MXGT_OPERATOR
    (41) unary_operator -> . MXLTE_OPERATOR
    (42) unary_operator -> . MXGTE_OPERATOR
    (43) unary_operator -> . ELEQ_OPERATOR
    (44) unary_operator -> . ELLT_OPERATOR
    (45) unary_operator -> . ELGT_OPERATOR
    (46) unary_operator -> . ELLTE_OPERATOR
    (47) unary_operator -> . ELGTE_OPERATOR
    (48) unary_operator -> . NOT_OPERATOR
    (49) unary_operator -> . MXTRUE_OPERATOR
    (50) unary_operator -> . MXFALSE_OPERATOR
    (51) unary_operator -> . SIZE_OPERATOR
    (52) unary_operator -> . LOGITIZE_OPERATOR
    (53) unary_operator -> . DIGITIZE_OPERATOR
    (75) base_values -> . number
    (76) base_values -> . boolean
    (30) assignment -> . expression ASSIGNMENT expression
    (80) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (63) do -> . DO VARIABLE call_parameters
    (67) get -> . GET VARIABLE
    (61) reduce -> . REDUCE_OPERATOR expression dimensions
    (62) extend -> . EXTEND_OPERATOR expression dimensions
    (70) number -> . OCT_NUMBER
    (71) number -> . DEC_NUMBER
    (72) number -> . HEX_NUMBER
    (73) boolean -> . TRUE
    (74) boolean -> . FALSE

    LBRACKET        shift and go to state 29
    VARIABLE        shift and go to state 20
    MXEQ_OPERATOR   shift and go to state 38
    MXLT_OPERATOR   shift and go to state 39
    MXGT_OPERATOR   shift and go to state 40
    MXLTE_OPERATOR  shift and go to state 41
    MXGTE_OPERATOR  shift and go to state 42
    ELEQ_OPERATOR   shift and go to state 43
    ELLT_OPERATOR   shift and go to state 44
    ELGT_OPERATOR   shift and go to state 45
    ELLTE_OPERATOR  shift and go to state 46
    ELGTE_OPERATOR  shift and go to state 47
    NOT_OPERATOR    shift and go to state 48
    MXTRUE_OPERATOR shift and go to state 49
    MXFALSE_OPERATOR shift and go to state 50
    SIZE_OPERATOR   shift and go to state 51
    LOGITIZE_OPERATOR shift and go to state 52
    DIGITIZE_OPERATOR shift and go to state 53
    DO              shift and go to state 56
    GET             shift and go to state 57
    REDUCE_OPERATOR shift and go to state 58
    EXTEND_OPERATOR shift and go to state 59
    OCT_NUMBER      shift and go to state 60
    DEC_NUMBER      shift and go to state 61
    HEX_NUMBER      shift and go to state 62
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    expression                     shift and go to state 94
    unary_operator                 shift and go to state 21
    base_values                    shift and go to state 22
    assignment                     shift and go to state 23
    indexing                       shift and go to state 24
    do                             shift and go to state 25
    get                            shift and go to state 26
    reduce                         shift and go to state 27
    extend                         shift and go to state 28
    number                         shift and go to state 54
    boolean                        shift and go to state 55

state 70

    (80) indexing -> expression OS_BRACKET . dimensions CS_BRACKET
    (81) dimensions -> . dimension COMMA dimensions
    (82) dimensions -> . dimension
    (83) dimension -> . expression
    (31) expression -> . expression binary_operator expression
    (37) expression -> . unary_operator expression
    (54) expression -> . base_values
    (55) expression -> . assignment
    (56) expression -> . indexing
    (57) expression -> . do
    (58) expression -> . get
    (59) expression -> . reduce
    (60) expression -> . extend
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . VARIABLE
    (38) unary_operator -> . MXEQ_OPERATOR
    (39) unary_operator -> . MXLT_OPERATOR
    (40) unary_operator -> . MXGT_OPERATOR
    (41) unary_operator -> . MXLTE_OPERATOR
    (42) unary_operator -> . MXGTE_OPERATOR
    (43) unary_operator -> . ELEQ_OPERATOR
    (44) unary_operator -> . ELLT_OPERATOR
    (45) unary_operator -> . ELGT_OPERATOR
    (46) unary_operator -> . ELLTE_OPERATOR
    (47) unary_operator -> . ELGTE_OPERATOR
    (48) unary_operator -> . NOT_OPERATOR
    (49) unary_operator -> . MXTRUE_OPERATOR
    (50) unary_operator -> . MXFALSE_OPERATOR
    (51) unary_operator -> . SIZE_OPERATOR
    (52) unary_operator -> . LOGITIZE_OPERATOR
    (53) unary_operator -> . DIGITIZE_OPERATOR
    (75) base_values -> . number
    (76) base_values -> . boolean
    (30) assignment -> . expression ASSIGNMENT expression
    (80) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (63) do -> . DO VARIABLE call_parameters
    (67) get -> . GET VARIABLE
    (61) reduce -> . REDUCE_OPERATOR expression dimensions
    (62) extend -> . EXTEND_OPERATOR expression dimensions
    (70) number -> . OCT_NUMBER
    (71) number -> . DEC_NUMBER
    (72) number -> . HEX_NUMBER
    (73) boolean -> . TRUE
    (74) boolean -> . FALSE

    LBRACKET        shift and go to state 29
    VARIABLE        shift and go to state 20
    MXEQ_OPERATOR   shift and go to state 38
    MXLT_OPERATOR   shift and go to state 39
    MXGT_OPERATOR   shift and go to state 40
    MXLTE_OPERATOR  shift and go to state 41
    MXGTE_OPERATOR  shift and go to state 42
    ELEQ_OPERATOR   shift and go to state 43
    ELLT_OPERATOR   shift and go to state 44
    ELGT_OPERATOR   shift and go to state 45
    ELLTE_OPERATOR  shift and go to state 46
    ELGTE_OPERATOR  shift and go to state 47
    NOT_OPERATOR    shift and go to state 48
    MXTRUE_OPERATOR shift and go to state 49
    MXFALSE_OPERATOR shift and go to state 50
    SIZE_OPERATOR   shift and go to state 51
    LOGITIZE_OPERATOR shift and go to state 52
    DIGITIZE_OPERATOR shift and go to state 53
    DO              shift and go to state 56
    GET             shift and go to state 57
    REDUCE_OPERATOR shift and go to state 58
    EXTEND_OPERATOR shift and go to state 59
    OCT_NUMBER      shift and go to state 60
    DEC_NUMBER      shift and go to state 61
    HEX_NUMBER      shift and go to state 62
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    expression                     shift and go to state 95
    dimensions                     shift and go to state 96
    dimension                      shift and go to state 97
    unary_operator                 shift and go to state 21
    base_values                    shift and go to state 22
    assignment                     shift and go to state 23
    indexing                       shift and go to state 24
    do                             shift and go to state 25
    get                            shift and go to state 26
    reduce                         shift and go to state 27
    extend                         shift and go to state 28
    number                         shift and go to state 54
    boolean                        shift and go to state 55

state 71

    (32) binary_operator -> PLUS .

    LBRACKET        reduce using rule 32 (binary_operator -> PLUS .)
    VARIABLE        reduce using rule 32 (binary_operator -> PLUS .)
    MXEQ_OPERATOR   reduce using rule 32 (binary_operator -> PLUS .)
    MXLT_OPERATOR   reduce using rule 32 (binary_operator -> PLUS .)
    MXGT_OPERATOR   reduce using rule 32 (binary_operator -> PLUS .)
    MXLTE_OPERATOR  reduce using rule 32 (binary_operator -> PLUS .)
    MXGTE_OPERATOR  reduce using rule 32 (binary_operator -> PLUS .)
    ELEQ_OPERATOR   reduce using rule 32 (binary_operator -> PLUS .)
    ELLT_OPERATOR   reduce using rule 32 (binary_operator -> PLUS .)
    ELGT_OPERATOR   reduce using rule 32 (binary_operator -> PLUS .)
    ELLTE_OPERATOR  reduce using rule 32 (binary_operator -> PLUS .)
    ELGTE_OPERATOR  reduce using rule 32 (binary_operator -> PLUS .)
    NOT_OPERATOR    reduce using rule 32 (binary_operator -> PLUS .)
    MXTRUE_OPERATOR reduce using rule 32 (binary_operator -> PLUS .)
    MXFALSE_OPERATOR reduce using rule 32 (binary_operator -> PLUS .)
    SIZE_OPERATOR   reduce using rule 32 (binary_operator -> PLUS .)
    LOGITIZE_OPERATOR reduce using rule 32 (binary_operator -> PLUS .)
    DIGITIZE_OPERATOR reduce using rule 32 (binary_operator -> PLUS .)
    DO              reduce using rule 32 (binary_operator -> PLUS .)
    GET             reduce using rule 32 (binary_operator -> PLUS .)
    REDUCE_OPERATOR reduce using rule 32 (binary_operator -> PLUS .)
    EXTEND_OPERATOR reduce using rule 32 (binary_operator -> PLUS .)
    OCT_NUMBER      reduce using rule 32 (binary_operator -> PLUS .)
    DEC_NUMBER      reduce using rule 32 (binary_operator -> PLUS .)
    HEX_NUMBER      reduce using rule 32 (binary_operator -> PLUS .)
    TRUE            reduce using rule 32 (binary_operator -> PLUS .)
    FALSE           reduce using rule 32 (binary_operator -> PLUS .)


state 72

    (33) binary_operator -> MINUS .

    LBRACKET        reduce using rule 33 (binary_operator -> MINUS .)
    VARIABLE        reduce using rule 33 (binary_operator -> MINUS .)
    MXEQ_OPERATOR   reduce using rule 33 (binary_operator -> MINUS .)
    MXLT_OPERATOR   reduce using rule 33 (binary_operator -> MINUS .)
    MXGT_OPERATOR   reduce using rule 33 (binary_operator -> MINUS .)
    MXLTE_OPERATOR  reduce using rule 33 (binary_operator -> MINUS .)
    MXGTE_OPERATOR  reduce using rule 33 (binary_operator -> MINUS .)
    ELEQ_OPERATOR   reduce using rule 33 (binary_operator -> MINUS .)
    ELLT_OPERATOR   reduce using rule 33 (binary_operator -> MINUS .)
    ELGT_OPERATOR   reduce using rule 33 (binary_operator -> MINUS .)
    ELLTE_OPERATOR  reduce using rule 33 (binary_operator -> MINUS .)
    ELGTE_OPERATOR  reduce using rule 33 (binary_operator -> MINUS .)
    NOT_OPERATOR    reduce using rule 33 (binary_operator -> MINUS .)
    MXTRUE_OPERATOR reduce using rule 33 (binary_operator -> MINUS .)
    MXFALSE_OPERATOR reduce using rule 33 (binary_operator -> MINUS .)
    SIZE_OPERATOR   reduce using rule 33 (binary_operator -> MINUS .)
    LOGITIZE_OPERATOR reduce using rule 33 (binary_operator -> MINUS .)
    DIGITIZE_OPERATOR reduce using rule 33 (binary_operator -> MINUS .)
    DO              reduce using rule 33 (binary_operator -> MINUS .)
    GET             reduce using rule 33 (binary_operator -> MINUS .)
    REDUCE_OPERATOR reduce using rule 33 (binary_operator -> MINUS .)
    EXTEND_OPERATOR reduce using rule 33 (binary_operator -> MINUS .)
    OCT_NUMBER      reduce using rule 33 (binary_operator -> MINUS .)
    DEC_NUMBER      reduce using rule 33 (binary_operator -> MINUS .)
    HEX_NUMBER      reduce using rule 33 (binary_operator -> MINUS .)
    TRUE            reduce using rule 33 (binary_operator -> MINUS .)
    FALSE           reduce using rule 33 (binary_operator -> MINUS .)


state 73

    (34) binary_operator -> MULTIPLY .

    LBRACKET        reduce using rule 34 (binary_operator -> MULTIPLY .)
    VARIABLE        reduce using rule 34 (binary_operator -> MULTIPLY .)
    MXEQ_OPERATOR   reduce using rule 34 (binary_operator -> MULTIPLY .)
    MXLT_OPERATOR   reduce using rule 34 (binary_operator -> MULTIPLY .)
    MXGT_OPERATOR   reduce using rule 34 (binary_operator -> MULTIPLY .)
    MXLTE_OPERATOR  reduce using rule 34 (binary_operator -> MULTIPLY .)
    MXGTE_OPERATOR  reduce using rule 34 (binary_operator -> MULTIPLY .)
    ELEQ_OPERATOR   reduce using rule 34 (binary_operator -> MULTIPLY .)
    ELLT_OPERATOR   reduce using rule 34 (binary_operator -> MULTIPLY .)
    ELGT_OPERATOR   reduce using rule 34 (binary_operator -> MULTIPLY .)
    ELLTE_OPERATOR  reduce using rule 34 (binary_operator -> MULTIPLY .)
    ELGTE_OPERATOR  reduce using rule 34 (binary_operator -> MULTIPLY .)
    NOT_OPERATOR    reduce using rule 34 (binary_operator -> MULTIPLY .)
    MXTRUE_OPERATOR reduce using rule 34 (binary_operator -> MULTIPLY .)
    MXFALSE_OPERATOR reduce using rule 34 (binary_operator -> MULTIPLY .)
    SIZE_OPERATOR   reduce using rule 34 (binary_operator -> MULTIPLY .)
    LOGITIZE_OPERATOR reduce using rule 34 (binary_operator -> MULTIPLY .)
    DIGITIZE_OPERATOR reduce using rule 34 (binary_operator -> MULTIPLY .)
    DO              reduce using rule 34 (binary_operator -> MULTIPLY .)
    GET             reduce using rule 34 (binary_operator -> MULTIPLY .)
    REDUCE_OPERATOR reduce using rule 34 (binary_operator -> MULTIPLY .)
    EXTEND_OPERATOR reduce using rule 34 (binary_operator -> MULTIPLY .)
    OCT_NUMBER      reduce using rule 34 (binary_operator -> MULTIPLY .)
    DEC_NUMBER      reduce using rule 34 (binary_operator -> MULTIPLY .)
    HEX_NUMBER      reduce using rule 34 (binary_operator -> MULTIPLY .)
    TRUE            reduce using rule 34 (binary_operator -> MULTIPLY .)
    FALSE           reduce using rule 34 (binary_operator -> MULTIPLY .)


state 74

    (35) binary_operator -> DIVIDE .

    LBRACKET        reduce using rule 35 (binary_operator -> DIVIDE .)
    VARIABLE        reduce using rule 35 (binary_operator -> DIVIDE .)
    MXEQ_OPERATOR   reduce using rule 35 (binary_operator -> DIVIDE .)
    MXLT_OPERATOR   reduce using rule 35 (binary_operator -> DIVIDE .)
    MXGT_OPERATOR   reduce using rule 35 (binary_operator -> DIVIDE .)
    MXLTE_OPERATOR  reduce using rule 35 (binary_operator -> DIVIDE .)
    MXGTE_OPERATOR  reduce using rule 35 (binary_operator -> DIVIDE .)
    ELEQ_OPERATOR   reduce using rule 35 (binary_operator -> DIVIDE .)
    ELLT_OPERATOR   reduce using rule 35 (binary_operator -> DIVIDE .)
    ELGT_OPERATOR   reduce using rule 35 (binary_operator -> DIVIDE .)
    ELLTE_OPERATOR  reduce using rule 35 (binary_operator -> DIVIDE .)
    ELGTE_OPERATOR  reduce using rule 35 (binary_operator -> DIVIDE .)
    NOT_OPERATOR    reduce using rule 35 (binary_operator -> DIVIDE .)
    MXTRUE_OPERATOR reduce using rule 35 (binary_operator -> DIVIDE .)
    MXFALSE_OPERATOR reduce using rule 35 (binary_operator -> DIVIDE .)
    SIZE_OPERATOR   reduce using rule 35 (binary_operator -> DIVIDE .)
    LOGITIZE_OPERATOR reduce using rule 35 (binary_operator -> DIVIDE .)
    DIGITIZE_OPERATOR reduce using rule 35 (binary_operator -> DIVIDE .)
    DO              reduce using rule 35 (binary_operator -> DIVIDE .)
    GET             reduce using rule 35 (binary_operator -> DIVIDE .)
    REDUCE_OPERATOR reduce using rule 35 (binary_operator -> DIVIDE .)
    EXTEND_OPERATOR reduce using rule 35 (binary_operator -> DIVIDE .)
    OCT_NUMBER      reduce using rule 35 (binary_operator -> DIVIDE .)
    DEC_NUMBER      reduce using rule 35 (binary_operator -> DIVIDE .)
    HEX_NUMBER      reduce using rule 35 (binary_operator -> DIVIDE .)
    TRUE            reduce using rule 35 (binary_operator -> DIVIDE .)
    FALSE           reduce using rule 35 (binary_operator -> DIVIDE .)


state 75

    (36) binary_operator -> AND_OPERATOR .

    LBRACKET        reduce using rule 36 (binary_operator -> AND_OPERATOR .)
    VARIABLE        reduce using rule 36 (binary_operator -> AND_OPERATOR .)
    MXEQ_OPERATOR   reduce using rule 36 (binary_operator -> AND_OPERATOR .)
    MXLT_OPERATOR   reduce using rule 36 (binary_operator -> AND_OPERATOR .)
    MXGT_OPERATOR   reduce using rule 36 (binary_operator -> AND_OPERATOR .)
    MXLTE_OPERATOR  reduce using rule 36 (binary_operator -> AND_OPERATOR .)
    MXGTE_OPERATOR  reduce using rule 36 (binary_operator -> AND_OPERATOR .)
    ELEQ_OPERATOR   reduce using rule 36 (binary_operator -> AND_OPERATOR .)
    ELLT_OPERATOR   reduce using rule 36 (binary_operator -> AND_OPERATOR .)
    ELGT_OPERATOR   reduce using rule 36 (binary_operator -> AND_OPERATOR .)
    ELLTE_OPERATOR  reduce using rule 36 (binary_operator -> AND_OPERATOR .)
    ELGTE_OPERATOR  reduce using rule 36 (binary_operator -> AND_OPERATOR .)
    NOT_OPERATOR    reduce using rule 36 (binary_operator -> AND_OPERATOR .)
    MXTRUE_OPERATOR reduce using rule 36 (binary_operator -> AND_OPERATOR .)
    MXFALSE_OPERATOR reduce using rule 36 (binary_operator -> AND_OPERATOR .)
    SIZE_OPERATOR   reduce using rule 36 (binary_operator -> AND_OPERATOR .)
    LOGITIZE_OPERATOR reduce using rule 36 (binary_operator -> AND_OPERATOR .)
    DIGITIZE_OPERATOR reduce using rule 36 (binary_operator -> AND_OPERATOR .)
    DO              reduce using rule 36 (binary_operator -> AND_OPERATOR .)
    GET             reduce using rule 36 (binary_operator -> AND_OPERATOR .)
    REDUCE_OPERATOR reduce using rule 36 (binary_operator -> AND_OPERATOR .)
    EXTEND_OPERATOR reduce using rule 36 (binary_operator -> AND_OPERATOR .)
    OCT_NUMBER      reduce using rule 36 (binary_operator -> AND_OPERATOR .)
    DEC_NUMBER      reduce using rule 36 (binary_operator -> AND_OPERATOR .)
    HEX_NUMBER      reduce using rule 36 (binary_operator -> AND_OPERATOR .)
    TRUE            reduce using rule 36 (binary_operator -> AND_OPERATOR .)
    FALSE           reduce using rule 36 (binary_operator -> AND_OPERATOR .)


state 76

    (19) statement -> empty NEWLINE .

    PLEASE          reduce using rule 19 (statement -> empty NEWLINE .)
    VAR             reduce using rule 19 (statement -> empty NEWLINE .)
    LBRACKET        reduce using rule 19 (statement -> empty NEWLINE .)
    VARIABLE        reduce using rule 19 (statement -> empty NEWLINE .)
    FOR             reduce using rule 19 (statement -> empty NEWLINE .)
    SWITCH          reduce using rule 19 (statement -> empty NEWLINE .)
    MOVE            reduce using rule 19 (statement -> empty NEWLINE .)
    ROTATE_LEFT     reduce using rule 19 (statement -> empty NEWLINE .)
    ROTATE_RIGHT    reduce using rule 19 (statement -> empty NEWLINE .)
    GET_ENVIRONMENT reduce using rule 19 (statement -> empty NEWLINE .)
    MXEQ_OPERATOR   reduce using rule 19 (statement -> empty NEWLINE .)
    MXLT_OPERATOR   reduce using rule 19 (statement -> empty NEWLINE .)
    MXGT_OPERATOR   reduce using rule 19 (statement -> empty NEWLINE .)
    MXLTE_OPERATOR  reduce using rule 19 (statement -> empty NEWLINE .)
    MXGTE_OPERATOR  reduce using rule 19 (statement -> empty NEWLINE .)
    ELEQ_OPERATOR   reduce using rule 19 (statement -> empty NEWLINE .)
    ELLT_OPERATOR   reduce using rule 19 (statement -> empty NEWLINE .)
    ELGT_OPERATOR   reduce using rule 19 (statement -> empty NEWLINE .)
    ELLTE_OPERATOR  reduce using rule 19 (statement -> empty NEWLINE .)
    ELGTE_OPERATOR  reduce using rule 19 (statement -> empty NEWLINE .)
    NOT_OPERATOR    reduce using rule 19 (statement -> empty NEWLINE .)
    MXTRUE_OPERATOR reduce using rule 19 (statement -> empty NEWLINE .)
    MXFALSE_OPERATOR reduce using rule 19 (statement -> empty NEWLINE .)
    SIZE_OPERATOR   reduce using rule 19 (statement -> empty NEWLINE .)
    LOGITIZE_OPERATOR reduce using rule 19 (statement -> empty NEWLINE .)
    DIGITIZE_OPERATOR reduce using rule 19 (statement -> empty NEWLINE .)
    DO              reduce using rule 19 (statement -> empty NEWLINE .)
    GET             reduce using rule 19 (statement -> empty NEWLINE .)
    REDUCE_OPERATOR reduce using rule 19 (statement -> empty NEWLINE .)
    EXTEND_OPERATOR reduce using rule 19 (statement -> empty NEWLINE .)
    OCT_NUMBER      reduce using rule 19 (statement -> empty NEWLINE .)
    DEC_NUMBER      reduce using rule 19 (statement -> empty NEWLINE .)
    HEX_NUMBER      reduce using rule 19 (statement -> empty NEWLINE .)
    TRUE            reduce using rule 19 (statement -> empty NEWLINE .)
    FALSE           reduce using rule 19 (statement -> empty NEWLINE .)
    NEWLINE         reduce using rule 19 (statement -> empty NEWLINE .)
    RESULT          reduce using rule 19 (statement -> empty NEWLINE .)
    RBRACKET        reduce using rule 19 (statement -> empty NEWLINE .)
    THANKS          reduce using rule 19 (statement -> empty NEWLINE .)


state 77

    (11) statements -> statement statements .

    RESULT          reduce using rule 11 (statements -> statement statements .)
    RBRACKET        reduce using rule 11 (statements -> statement statements .)


state 78

    (19) statement -> empty . NEWLINE

    NEWLINE         shift and go to state 76


state 79

    (13) statement -> PLEASE statement . THANKS NEWLINE

    THANKS          shift and go to state 98


state 80

    (14) statement -> var_declaration NEWLINE .

    PLEASE          reduce using rule 14 (statement -> var_declaration NEWLINE .)
    VAR             reduce using rule 14 (statement -> var_declaration NEWLINE .)
    LBRACKET        reduce using rule 14 (statement -> var_declaration NEWLINE .)
    VARIABLE        reduce using rule 14 (statement -> var_declaration NEWLINE .)
    FOR             reduce using rule 14 (statement -> var_declaration NEWLINE .)
    SWITCH          reduce using rule 14 (statement -> var_declaration NEWLINE .)
    MOVE            reduce using rule 14 (statement -> var_declaration NEWLINE .)
    ROTATE_LEFT     reduce using rule 14 (statement -> var_declaration NEWLINE .)
    ROTATE_RIGHT    reduce using rule 14 (statement -> var_declaration NEWLINE .)
    GET_ENVIRONMENT reduce using rule 14 (statement -> var_declaration NEWLINE .)
    MXEQ_OPERATOR   reduce using rule 14 (statement -> var_declaration NEWLINE .)
    MXLT_OPERATOR   reduce using rule 14 (statement -> var_declaration NEWLINE .)
    MXGT_OPERATOR   reduce using rule 14 (statement -> var_declaration NEWLINE .)
    MXLTE_OPERATOR  reduce using rule 14 (statement -> var_declaration NEWLINE .)
    MXGTE_OPERATOR  reduce using rule 14 (statement -> var_declaration NEWLINE .)
    ELEQ_OPERATOR   reduce using rule 14 (statement -> var_declaration NEWLINE .)
    ELLT_OPERATOR   reduce using rule 14 (statement -> var_declaration NEWLINE .)
    ELGT_OPERATOR   reduce using rule 14 (statement -> var_declaration NEWLINE .)
    ELLTE_OPERATOR  reduce using rule 14 (statement -> var_declaration NEWLINE .)
    ELGTE_OPERATOR  reduce using rule 14 (statement -> var_declaration NEWLINE .)
    NOT_OPERATOR    reduce using rule 14 (statement -> var_declaration NEWLINE .)
    MXTRUE_OPERATOR reduce using rule 14 (statement -> var_declaration NEWLINE .)
    MXFALSE_OPERATOR reduce using rule 14 (statement -> var_declaration NEWLINE .)
    SIZE_OPERATOR   reduce using rule 14 (statement -> var_declaration NEWLINE .)
    LOGITIZE_OPERATOR reduce using rule 14 (statement -> var_declaration NEWLINE .)
    DIGITIZE_OPERATOR reduce using rule 14 (statement -> var_declaration NEWLINE .)
    DO              reduce using rule 14 (statement -> var_declaration NEWLINE .)
    GET             reduce using rule 14 (statement -> var_declaration NEWLINE .)
    REDUCE_OPERATOR reduce using rule 14 (statement -> var_declaration NEWLINE .)
    EXTEND_OPERATOR reduce using rule 14 (statement -> var_declaration NEWLINE .)
    OCT_NUMBER      reduce using rule 14 (statement -> var_declaration NEWLINE .)
    DEC_NUMBER      reduce using rule 14 (statement -> var_declaration NEWLINE .)
    HEX_NUMBER      reduce using rule 14 (statement -> var_declaration NEWLINE .)
    TRUE            reduce using rule 14 (statement -> var_declaration NEWLINE .)
    FALSE           reduce using rule 14 (statement -> var_declaration NEWLINE .)
    NEWLINE         reduce using rule 14 (statement -> var_declaration NEWLINE .)
    RESULT          reduce using rule 14 (statement -> var_declaration NEWLINE .)
    RBRACKET        reduce using rule 14 (statement -> var_declaration NEWLINE .)
    THANKS          reduce using rule 14 (statement -> var_declaration NEWLINE .)


state 81

    (18) statement -> command NEWLINE .

    PLEASE          reduce using rule 18 (statement -> command NEWLINE .)
    VAR             reduce using rule 18 (statement -> command NEWLINE .)
    LBRACKET        reduce using rule 18 (statement -> command NEWLINE .)
    VARIABLE        reduce using rule 18 (statement -> command NEWLINE .)
    FOR             reduce using rule 18 (statement -> command NEWLINE .)
    SWITCH          reduce using rule 18 (statement -> command NEWLINE .)
    MOVE            reduce using rule 18 (statement -> command NEWLINE .)
    ROTATE_LEFT     reduce using rule 18 (statement -> command NEWLINE .)
    ROTATE_RIGHT    reduce using rule 18 (statement -> command NEWLINE .)
    GET_ENVIRONMENT reduce using rule 18 (statement -> command NEWLINE .)
    MXEQ_OPERATOR   reduce using rule 18 (statement -> command NEWLINE .)
    MXLT_OPERATOR   reduce using rule 18 (statement -> command NEWLINE .)
    MXGT_OPERATOR   reduce using rule 18 (statement -> command NEWLINE .)
    MXLTE_OPERATOR  reduce using rule 18 (statement -> command NEWLINE .)
    MXGTE_OPERATOR  reduce using rule 18 (statement -> command NEWLINE .)
    ELEQ_OPERATOR   reduce using rule 18 (statement -> command NEWLINE .)
    ELLT_OPERATOR   reduce using rule 18 (statement -> command NEWLINE .)
    ELGT_OPERATOR   reduce using rule 18 (statement -> command NEWLINE .)
    ELLTE_OPERATOR  reduce using rule 18 (statement -> command NEWLINE .)
    ELGTE_OPERATOR  reduce using rule 18 (statement -> command NEWLINE .)
    NOT_OPERATOR    reduce using rule 18 (statement -> command NEWLINE .)
    MXTRUE_OPERATOR reduce using rule 18 (statement -> command NEWLINE .)
    MXFALSE_OPERATOR reduce using rule 18 (statement -> command NEWLINE .)
    SIZE_OPERATOR   reduce using rule 18 (statement -> command NEWLINE .)
    LOGITIZE_OPERATOR reduce using rule 18 (statement -> command NEWLINE .)
    DIGITIZE_OPERATOR reduce using rule 18 (statement -> command NEWLINE .)
    DO              reduce using rule 18 (statement -> command NEWLINE .)
    GET             reduce using rule 18 (statement -> command NEWLINE .)
    REDUCE_OPERATOR reduce using rule 18 (statement -> command NEWLINE .)
    EXTEND_OPERATOR reduce using rule 18 (statement -> command NEWLINE .)
    OCT_NUMBER      reduce using rule 18 (statement -> command NEWLINE .)
    DEC_NUMBER      reduce using rule 18 (statement -> command NEWLINE .)
    HEX_NUMBER      reduce using rule 18 (statement -> command NEWLINE .)
    TRUE            reduce using rule 18 (statement -> command NEWLINE .)
    FALSE           reduce using rule 18 (statement -> command NEWLINE .)
    NEWLINE         reduce using rule 18 (statement -> command NEWLINE .)
    RESULT          reduce using rule 18 (statement -> command NEWLINE .)
    RBRACKET        reduce using rule 18 (statement -> command NEWLINE .)
    THANKS          reduce using rule 18 (statement -> command NEWLINE .)


state 82

    (78) var_declaration -> VAR VARIABLE . OS_BRACKET dimensions CS_BRACKET ASSIGNMENT initializer
    (79) var_declaration -> VAR VARIABLE . ASSIGNMENT expression

    OS_BRACKET      shift and go to state 99
    ASSIGNMENT      shift and go to state 100


state 83

    (37) expression -> unary_operator expression .
    (31) expression -> expression . binary_operator expression
    (30) assignment -> expression . ASSIGNMENT expression
    (80) indexing -> expression . OS_BRACKET dimensions CS_BRACKET
    (32) binary_operator -> . PLUS
    (33) binary_operator -> . MINUS
    (34) binary_operator -> . MULTIPLY
    (35) binary_operator -> . DIVIDE
    (36) binary_operator -> . AND_OPERATOR

  ! shift/reduce conflict for ASSIGNMENT resolved as shift
  ! shift/reduce conflict for OS_BRACKET resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND_OPERATOR resolved as shift
    NEWLINE         reduce using rule 37 (expression -> unary_operator expression .)
    RBRACKET        reduce using rule 37 (expression -> unary_operator expression .)
    LBRACKET        reduce using rule 37 (expression -> unary_operator expression .)
    VARIABLE        reduce using rule 37 (expression -> unary_operator expression .)
    MXEQ_OPERATOR   reduce using rule 37 (expression -> unary_operator expression .)
    MXLT_OPERATOR   reduce using rule 37 (expression -> unary_operator expression .)
    MXGT_OPERATOR   reduce using rule 37 (expression -> unary_operator expression .)
    MXLTE_OPERATOR  reduce using rule 37 (expression -> unary_operator expression .)
    MXGTE_OPERATOR  reduce using rule 37 (expression -> unary_operator expression .)
    ELEQ_OPERATOR   reduce using rule 37 (expression -> unary_operator expression .)
    ELLT_OPERATOR   reduce using rule 37 (expression -> unary_operator expression .)
    ELGT_OPERATOR   reduce using rule 37 (expression -> unary_operator expression .)
    ELLTE_OPERATOR  reduce using rule 37 (expression -> unary_operator expression .)
    ELGTE_OPERATOR  reduce using rule 37 (expression -> unary_operator expression .)
    NOT_OPERATOR    reduce using rule 37 (expression -> unary_operator expression .)
    MXTRUE_OPERATOR reduce using rule 37 (expression -> unary_operator expression .)
    MXFALSE_OPERATOR reduce using rule 37 (expression -> unary_operator expression .)
    SIZE_OPERATOR   reduce using rule 37 (expression -> unary_operator expression .)
    LOGITIZE_OPERATOR reduce using rule 37 (expression -> unary_operator expression .)
    DIGITIZE_OPERATOR reduce using rule 37 (expression -> unary_operator expression .)
    DO              reduce using rule 37 (expression -> unary_operator expression .)
    GET             reduce using rule 37 (expression -> unary_operator expression .)
    REDUCE_OPERATOR reduce using rule 37 (expression -> unary_operator expression .)
    EXTEND_OPERATOR reduce using rule 37 (expression -> unary_operator expression .)
    OCT_NUMBER      reduce using rule 37 (expression -> unary_operator expression .)
    DEC_NUMBER      reduce using rule 37 (expression -> unary_operator expression .)
    HEX_NUMBER      reduce using rule 37 (expression -> unary_operator expression .)
    TRUE            reduce using rule 37 (expression -> unary_operator expression .)
    FALSE           reduce using rule 37 (expression -> unary_operator expression .)
    COMMA           reduce using rule 37 (expression -> unary_operator expression .)
    CS_BRACKET      reduce using rule 37 (expression -> unary_operator expression .)
    ASSIGNMENT      shift and go to state 69
    OS_BRACKET      shift and go to state 70
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    MULTIPLY        shift and go to state 73
    DIVIDE          shift and go to state 74
    AND_OPERATOR    shift and go to state 75

  ! ASSIGNMENT      [ reduce using rule 37 (expression -> unary_operator expression .) ]
  ! OS_BRACKET      [ reduce using rule 37 (expression -> unary_operator expression .) ]
  ! PLUS            [ reduce using rule 37 (expression -> unary_operator expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> unary_operator expression .) ]
  ! MULTIPLY        [ reduce using rule 37 (expression -> unary_operator expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> unary_operator expression .) ]
  ! AND_OPERATOR    [ reduce using rule 37 (expression -> unary_operator expression .) ]

    binary_operator                shift and go to state 68

state 84

    (68) expression -> LBRACKET expression . RBRACKET
    (31) expression -> expression . binary_operator expression
    (30) assignment -> expression . ASSIGNMENT expression
    (80) indexing -> expression . OS_BRACKET dimensions CS_BRACKET
    (32) binary_operator -> . PLUS
    (33) binary_operator -> . MINUS
    (34) binary_operator -> . MULTIPLY
    (35) binary_operator -> . DIVIDE
    (36) binary_operator -> . AND_OPERATOR

    RBRACKET        shift and go to state 101
    ASSIGNMENT      shift and go to state 69
    OS_BRACKET      shift and go to state 70
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    MULTIPLY        shift and go to state 73
    DIVIDE          shift and go to state 74
    AND_OPERATOR    shift and go to state 75

    binary_operator                shift and go to state 68

state 85

    (24) for -> FOR VARIABLE . BOUNDARY VARIABLE STEP VARIABLE statements_group

    BOUNDARY        shift and go to state 102


state 86

    (28) switch -> SWITCH expression . NEWLINE TRUE statements_group FALSE statements_group
    (29) switch -> SWITCH expression . NEWLINE FALSE statements_group TRUE statements_group
    (31) expression -> expression . binary_operator expression
    (30) assignment -> expression . ASSIGNMENT expression
    (80) indexing -> expression . OS_BRACKET dimensions CS_BRACKET
    (32) binary_operator -> . PLUS
    (33) binary_operator -> . MINUS
    (34) binary_operator -> . MULTIPLY
    (35) binary_operator -> . DIVIDE
    (36) binary_operator -> . AND_OPERATOR

    NEWLINE         shift and go to state 103
    ASSIGNMENT      shift and go to state 69
    OS_BRACKET      shift and go to state 70
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    MULTIPLY        shift and go to state 73
    DIVIDE          shift and go to state 74
    AND_OPERATOR    shift and go to state 75

    binary_operator                shift and go to state 68

state 87

    (63) do -> DO VARIABLE . call_parameters
    (64) call_parameters -> . call_parameter call_parameters
    (65) call_parameters -> . call_parameter
    (66) call_parameter -> . expression
    (31) expression -> . expression binary_operator expression
    (37) expression -> . unary_operator expression
    (54) expression -> . base_values
    (55) expression -> . assignment
    (56) expression -> . indexing
    (57) expression -> . do
    (58) expression -> . get
    (59) expression -> . reduce
    (60) expression -> . extend
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . VARIABLE
    (38) unary_operator -> . MXEQ_OPERATOR
    (39) unary_operator -> . MXLT_OPERATOR
    (40) unary_operator -> . MXGT_OPERATOR
    (41) unary_operator -> . MXLTE_OPERATOR
    (42) unary_operator -> . MXGTE_OPERATOR
    (43) unary_operator -> . ELEQ_OPERATOR
    (44) unary_operator -> . ELLT_OPERATOR
    (45) unary_operator -> . ELGT_OPERATOR
    (46) unary_operator -> . ELLTE_OPERATOR
    (47) unary_operator -> . ELGTE_OPERATOR
    (48) unary_operator -> . NOT_OPERATOR
    (49) unary_operator -> . MXTRUE_OPERATOR
    (50) unary_operator -> . MXFALSE_OPERATOR
    (51) unary_operator -> . SIZE_OPERATOR
    (52) unary_operator -> . LOGITIZE_OPERATOR
    (53) unary_operator -> . DIGITIZE_OPERATOR
    (75) base_values -> . number
    (76) base_values -> . boolean
    (30) assignment -> . expression ASSIGNMENT expression
    (80) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (63) do -> . DO VARIABLE call_parameters
    (67) get -> . GET VARIABLE
    (61) reduce -> . REDUCE_OPERATOR expression dimensions
    (62) extend -> . EXTEND_OPERATOR expression dimensions
    (70) number -> . OCT_NUMBER
    (71) number -> . DEC_NUMBER
    (72) number -> . HEX_NUMBER
    (73) boolean -> . TRUE
    (74) boolean -> . FALSE

    LBRACKET        shift and go to state 29
    VARIABLE        shift and go to state 20
    MXEQ_OPERATOR   shift and go to state 38
    MXLT_OPERATOR   shift and go to state 39
    MXGT_OPERATOR   shift and go to state 40
    MXLTE_OPERATOR  shift and go to state 41
    MXGTE_OPERATOR  shift and go to state 42
    ELEQ_OPERATOR   shift and go to state 43
    ELLT_OPERATOR   shift and go to state 44
    ELGT_OPERATOR   shift and go to state 45
    ELLTE_OPERATOR  shift and go to state 46
    ELGTE_OPERATOR  shift and go to state 47
    NOT_OPERATOR    shift and go to state 48
    MXTRUE_OPERATOR shift and go to state 49
    MXFALSE_OPERATOR shift and go to state 50
    SIZE_OPERATOR   shift and go to state 51
    LOGITIZE_OPERATOR shift and go to state 52
    DIGITIZE_OPERATOR shift and go to state 53
    DO              shift and go to state 56
    GET             shift and go to state 57
    REDUCE_OPERATOR shift and go to state 58
    EXTEND_OPERATOR shift and go to state 59
    OCT_NUMBER      shift and go to state 60
    DEC_NUMBER      shift and go to state 61
    HEX_NUMBER      shift and go to state 62
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    call_parameters                shift and go to state 104
    call_parameter                 shift and go to state 105
    expression                     shift and go to state 106
    unary_operator                 shift and go to state 21
    base_values                    shift and go to state 22
    assignment                     shift and go to state 23
    indexing                       shift and go to state 24
    do                             shift and go to state 25
    get                            shift and go to state 26
    reduce                         shift and go to state 27
    extend                         shift and go to state 28
    number                         shift and go to state 54
    boolean                        shift and go to state 55

state 88

    (67) get -> GET VARIABLE .

    NEWLINE         reduce using rule 67 (get -> GET VARIABLE .)
    ASSIGNMENT      reduce using rule 67 (get -> GET VARIABLE .)
    OS_BRACKET      reduce using rule 67 (get -> GET VARIABLE .)
    PLUS            reduce using rule 67 (get -> GET VARIABLE .)
    MINUS           reduce using rule 67 (get -> GET VARIABLE .)
    MULTIPLY        reduce using rule 67 (get -> GET VARIABLE .)
    DIVIDE          reduce using rule 67 (get -> GET VARIABLE .)
    AND_OPERATOR    reduce using rule 67 (get -> GET VARIABLE .)
    RBRACKET        reduce using rule 67 (get -> GET VARIABLE .)
    LBRACKET        reduce using rule 67 (get -> GET VARIABLE .)
    VARIABLE        reduce using rule 67 (get -> GET VARIABLE .)
    MXEQ_OPERATOR   reduce using rule 67 (get -> GET VARIABLE .)
    MXLT_OPERATOR   reduce using rule 67 (get -> GET VARIABLE .)
    MXGT_OPERATOR   reduce using rule 67 (get -> GET VARIABLE .)
    MXLTE_OPERATOR  reduce using rule 67 (get -> GET VARIABLE .)
    MXGTE_OPERATOR  reduce using rule 67 (get -> GET VARIABLE .)
    ELEQ_OPERATOR   reduce using rule 67 (get -> GET VARIABLE .)
    ELLT_OPERATOR   reduce using rule 67 (get -> GET VARIABLE .)
    ELGT_OPERATOR   reduce using rule 67 (get -> GET VARIABLE .)
    ELLTE_OPERATOR  reduce using rule 67 (get -> GET VARIABLE .)
    ELGTE_OPERATOR  reduce using rule 67 (get -> GET VARIABLE .)
    NOT_OPERATOR    reduce using rule 67 (get -> GET VARIABLE .)
    MXTRUE_OPERATOR reduce using rule 67 (get -> GET VARIABLE .)
    MXFALSE_OPERATOR reduce using rule 67 (get -> GET VARIABLE .)
    SIZE_OPERATOR   reduce using rule 67 (get -> GET VARIABLE .)
    LOGITIZE_OPERATOR reduce using rule 67 (get -> GET VARIABLE .)
    DIGITIZE_OPERATOR reduce using rule 67 (get -> GET VARIABLE .)
    DO              reduce using rule 67 (get -> GET VARIABLE .)
    GET             reduce using rule 67 (get -> GET VARIABLE .)
    REDUCE_OPERATOR reduce using rule 67 (get -> GET VARIABLE .)
    EXTEND_OPERATOR reduce using rule 67 (get -> GET VARIABLE .)
    OCT_NUMBER      reduce using rule 67 (get -> GET VARIABLE .)
    DEC_NUMBER      reduce using rule 67 (get -> GET VARIABLE .)
    HEX_NUMBER      reduce using rule 67 (get -> GET VARIABLE .)
    TRUE            reduce using rule 67 (get -> GET VARIABLE .)
    FALSE           reduce using rule 67 (get -> GET VARIABLE .)
    COMMA           reduce using rule 67 (get -> GET VARIABLE .)
    CS_BRACKET      reduce using rule 67 (get -> GET VARIABLE .)


state 89

    (61) reduce -> REDUCE_OPERATOR expression . dimensions
    (31) expression -> expression . binary_operator expression
    (30) assignment -> expression . ASSIGNMENT expression
    (80) indexing -> expression . OS_BRACKET dimensions CS_BRACKET
    (81) dimensions -> . dimension COMMA dimensions
    (82) dimensions -> . dimension
    (32) binary_operator -> . PLUS
    (33) binary_operator -> . MINUS
    (34) binary_operator -> . MULTIPLY
    (35) binary_operator -> . DIVIDE
    (36) binary_operator -> . AND_OPERATOR
    (83) dimension -> . expression
    (31) expression -> . expression binary_operator expression
    (37) expression -> . unary_operator expression
    (54) expression -> . base_values
    (55) expression -> . assignment
    (56) expression -> . indexing
    (57) expression -> . do
    (58) expression -> . get
    (59) expression -> . reduce
    (60) expression -> . extend
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . VARIABLE
    (38) unary_operator -> . MXEQ_OPERATOR
    (39) unary_operator -> . MXLT_OPERATOR
    (40) unary_operator -> . MXGT_OPERATOR
    (41) unary_operator -> . MXLTE_OPERATOR
    (42) unary_operator -> . MXGTE_OPERATOR
    (43) unary_operator -> . ELEQ_OPERATOR
    (44) unary_operator -> . ELLT_OPERATOR
    (45) unary_operator -> . ELGT_OPERATOR
    (46) unary_operator -> . ELLTE_OPERATOR
    (47) unary_operator -> . ELGTE_OPERATOR
    (48) unary_operator -> . NOT_OPERATOR
    (49) unary_operator -> . MXTRUE_OPERATOR
    (50) unary_operator -> . MXFALSE_OPERATOR
    (51) unary_operator -> . SIZE_OPERATOR
    (52) unary_operator -> . LOGITIZE_OPERATOR
    (53) unary_operator -> . DIGITIZE_OPERATOR
    (75) base_values -> . number
    (76) base_values -> . boolean
    (30) assignment -> . expression ASSIGNMENT expression
    (80) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (63) do -> . DO VARIABLE call_parameters
    (67) get -> . GET VARIABLE
    (61) reduce -> . REDUCE_OPERATOR expression dimensions
    (62) extend -> . EXTEND_OPERATOR expression dimensions
    (70) number -> . OCT_NUMBER
    (71) number -> . DEC_NUMBER
    (72) number -> . HEX_NUMBER
    (73) boolean -> . TRUE
    (74) boolean -> . FALSE

    ASSIGNMENT      shift and go to state 69
    OS_BRACKET      shift and go to state 70
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    MULTIPLY        shift and go to state 73
    DIVIDE          shift and go to state 74
    AND_OPERATOR    shift and go to state 75
    LBRACKET        shift and go to state 29
    VARIABLE        shift and go to state 20
    MXEQ_OPERATOR   shift and go to state 38
    MXLT_OPERATOR   shift and go to state 39
    MXGT_OPERATOR   shift and go to state 40
    MXLTE_OPERATOR  shift and go to state 41
    MXGTE_OPERATOR  shift and go to state 42
    ELEQ_OPERATOR   shift and go to state 43
    ELLT_OPERATOR   shift and go to state 44
    ELGT_OPERATOR   shift and go to state 45
    ELLTE_OPERATOR  shift and go to state 46
    ELGTE_OPERATOR  shift and go to state 47
    NOT_OPERATOR    shift and go to state 48
    MXTRUE_OPERATOR shift and go to state 49
    MXFALSE_OPERATOR shift and go to state 50
    SIZE_OPERATOR   shift and go to state 51
    LOGITIZE_OPERATOR shift and go to state 52
    DIGITIZE_OPERATOR shift and go to state 53
    DO              shift and go to state 56
    GET             shift and go to state 57
    REDUCE_OPERATOR shift and go to state 58
    EXTEND_OPERATOR shift and go to state 59
    OCT_NUMBER      shift and go to state 60
    DEC_NUMBER      shift and go to state 61
    HEX_NUMBER      shift and go to state 62
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    expression                     shift and go to state 95
    dimensions                     shift and go to state 107
    binary_operator                shift and go to state 68
    dimension                      shift and go to state 97
    unary_operator                 shift and go to state 21
    base_values                    shift and go to state 22
    assignment                     shift and go to state 23
    indexing                       shift and go to state 24
    do                             shift and go to state 25
    get                            shift and go to state 26
    reduce                         shift and go to state 27
    extend                         shift and go to state 28
    number                         shift and go to state 54
    boolean                        shift and go to state 55

state 90

    (62) extend -> EXTEND_OPERATOR expression . dimensions
    (31) expression -> expression . binary_operator expression
    (30) assignment -> expression . ASSIGNMENT expression
    (80) indexing -> expression . OS_BRACKET dimensions CS_BRACKET
    (81) dimensions -> . dimension COMMA dimensions
    (82) dimensions -> . dimension
    (32) binary_operator -> . PLUS
    (33) binary_operator -> . MINUS
    (34) binary_operator -> . MULTIPLY
    (35) binary_operator -> . DIVIDE
    (36) binary_operator -> . AND_OPERATOR
    (83) dimension -> . expression
    (31) expression -> . expression binary_operator expression
    (37) expression -> . unary_operator expression
    (54) expression -> . base_values
    (55) expression -> . assignment
    (56) expression -> . indexing
    (57) expression -> . do
    (58) expression -> . get
    (59) expression -> . reduce
    (60) expression -> . extend
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . VARIABLE
    (38) unary_operator -> . MXEQ_OPERATOR
    (39) unary_operator -> . MXLT_OPERATOR
    (40) unary_operator -> . MXGT_OPERATOR
    (41) unary_operator -> . MXLTE_OPERATOR
    (42) unary_operator -> . MXGTE_OPERATOR
    (43) unary_operator -> . ELEQ_OPERATOR
    (44) unary_operator -> . ELLT_OPERATOR
    (45) unary_operator -> . ELGT_OPERATOR
    (46) unary_operator -> . ELLTE_OPERATOR
    (47) unary_operator -> . ELGTE_OPERATOR
    (48) unary_operator -> . NOT_OPERATOR
    (49) unary_operator -> . MXTRUE_OPERATOR
    (50) unary_operator -> . MXFALSE_OPERATOR
    (51) unary_operator -> . SIZE_OPERATOR
    (52) unary_operator -> . LOGITIZE_OPERATOR
    (53) unary_operator -> . DIGITIZE_OPERATOR
    (75) base_values -> . number
    (76) base_values -> . boolean
    (30) assignment -> . expression ASSIGNMENT expression
    (80) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (63) do -> . DO VARIABLE call_parameters
    (67) get -> . GET VARIABLE
    (61) reduce -> . REDUCE_OPERATOR expression dimensions
    (62) extend -> . EXTEND_OPERATOR expression dimensions
    (70) number -> . OCT_NUMBER
    (71) number -> . DEC_NUMBER
    (72) number -> . HEX_NUMBER
    (73) boolean -> . TRUE
    (74) boolean -> . FALSE

    ASSIGNMENT      shift and go to state 69
    OS_BRACKET      shift and go to state 70
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    MULTIPLY        shift and go to state 73
    DIVIDE          shift and go to state 74
    AND_OPERATOR    shift and go to state 75
    LBRACKET        shift and go to state 29
    VARIABLE        shift and go to state 20
    MXEQ_OPERATOR   shift and go to state 38
    MXLT_OPERATOR   shift and go to state 39
    MXGT_OPERATOR   shift and go to state 40
    MXLTE_OPERATOR  shift and go to state 41
    MXGTE_OPERATOR  shift and go to state 42
    ELEQ_OPERATOR   shift and go to state 43
    ELLT_OPERATOR   shift and go to state 44
    ELGT_OPERATOR   shift and go to state 45
    ELLTE_OPERATOR  shift and go to state 46
    ELGTE_OPERATOR  shift and go to state 47
    NOT_OPERATOR    shift and go to state 48
    MXTRUE_OPERATOR shift and go to state 49
    MXFALSE_OPERATOR shift and go to state 50
    SIZE_OPERATOR   shift and go to state 51
    LOGITIZE_OPERATOR shift and go to state 52
    DIGITIZE_OPERATOR shift and go to state 53
    DO              shift and go to state 56
    GET             shift and go to state 57
    REDUCE_OPERATOR shift and go to state 58
    EXTEND_OPERATOR shift and go to state 59
    OCT_NUMBER      shift and go to state 60
    DEC_NUMBER      shift and go to state 61
    HEX_NUMBER      shift and go to state 62
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    expression                     shift and go to state 95
    dimensions                     shift and go to state 108
    binary_operator                shift and go to state 68
    dimension                      shift and go to state 97
    unary_operator                 shift and go to state 21
    base_values                    shift and go to state 22
    assignment                     shift and go to state 23
    indexing                       shift and go to state 24
    do                             shift and go to state 25
    get                            shift and go to state 26
    reduce                         shift and go to state 27
    extend                         shift and go to state 28
    number                         shift and go to state 54
    boolean                        shift and go to state 55

state 91

    (8) parameters -> VARIABLE parameters .

    NEWLINE         reduce using rule 8 (parameters -> VARIABLE parameters .)


state 92

    (4) function -> func_decl NEWLINE func_body RESULT expression . NEWLINE
    (31) expression -> expression . binary_operator expression
    (30) assignment -> expression . ASSIGNMENT expression
    (80) indexing -> expression . OS_BRACKET dimensions CS_BRACKET
    (32) binary_operator -> . PLUS
    (33) binary_operator -> . MINUS
    (34) binary_operator -> . MULTIPLY
    (35) binary_operator -> . DIVIDE
    (36) binary_operator -> . AND_OPERATOR

    NEWLINE         shift and go to state 109
    ASSIGNMENT      shift and go to state 69
    OS_BRACKET      shift and go to state 70
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    MULTIPLY        shift and go to state 73
    DIVIDE          shift and go to state 74
    AND_OPERATOR    shift and go to state 75

    binary_operator                shift and go to state 68

state 93

    (31) expression -> expression binary_operator expression .
    (31) expression -> expression . binary_operator expression
    (30) assignment -> expression . ASSIGNMENT expression
    (80) indexing -> expression . OS_BRACKET dimensions CS_BRACKET
    (32) binary_operator -> . PLUS
    (33) binary_operator -> . MINUS
    (34) binary_operator -> . MULTIPLY
    (35) binary_operator -> . DIVIDE
    (36) binary_operator -> . AND_OPERATOR

  ! shift/reduce conflict for ASSIGNMENT resolved as shift
  ! shift/reduce conflict for OS_BRACKET resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND_OPERATOR resolved as shift
    NEWLINE         reduce using rule 31 (expression -> expression binary_operator expression .)
    RBRACKET        reduce using rule 31 (expression -> expression binary_operator expression .)
    LBRACKET        reduce using rule 31 (expression -> expression binary_operator expression .)
    VARIABLE        reduce using rule 31 (expression -> expression binary_operator expression .)
    MXEQ_OPERATOR   reduce using rule 31 (expression -> expression binary_operator expression .)
    MXLT_OPERATOR   reduce using rule 31 (expression -> expression binary_operator expression .)
    MXGT_OPERATOR   reduce using rule 31 (expression -> expression binary_operator expression .)
    MXLTE_OPERATOR  reduce using rule 31 (expression -> expression binary_operator expression .)
    MXGTE_OPERATOR  reduce using rule 31 (expression -> expression binary_operator expression .)
    ELEQ_OPERATOR   reduce using rule 31 (expression -> expression binary_operator expression .)
    ELLT_OPERATOR   reduce using rule 31 (expression -> expression binary_operator expression .)
    ELGT_OPERATOR   reduce using rule 31 (expression -> expression binary_operator expression .)
    ELLTE_OPERATOR  reduce using rule 31 (expression -> expression binary_operator expression .)
    ELGTE_OPERATOR  reduce using rule 31 (expression -> expression binary_operator expression .)
    NOT_OPERATOR    reduce using rule 31 (expression -> expression binary_operator expression .)
    MXTRUE_OPERATOR reduce using rule 31 (expression -> expression binary_operator expression .)
    MXFALSE_OPERATOR reduce using rule 31 (expression -> expression binary_operator expression .)
    SIZE_OPERATOR   reduce using rule 31 (expression -> expression binary_operator expression .)
    LOGITIZE_OPERATOR reduce using rule 31 (expression -> expression binary_operator expression .)
    DIGITIZE_OPERATOR reduce using rule 31 (expression -> expression binary_operator expression .)
    DO              reduce using rule 31 (expression -> expression binary_operator expression .)
    GET             reduce using rule 31 (expression -> expression binary_operator expression .)
    REDUCE_OPERATOR reduce using rule 31 (expression -> expression binary_operator expression .)
    EXTEND_OPERATOR reduce using rule 31 (expression -> expression binary_operator expression .)
    OCT_NUMBER      reduce using rule 31 (expression -> expression binary_operator expression .)
    DEC_NUMBER      reduce using rule 31 (expression -> expression binary_operator expression .)
    HEX_NUMBER      reduce using rule 31 (expression -> expression binary_operator expression .)
    TRUE            reduce using rule 31 (expression -> expression binary_operator expression .)
    FALSE           reduce using rule 31 (expression -> expression binary_operator expression .)
    COMMA           reduce using rule 31 (expression -> expression binary_operator expression .)
    CS_BRACKET      reduce using rule 31 (expression -> expression binary_operator expression .)
    ASSIGNMENT      shift and go to state 69
    OS_BRACKET      shift and go to state 70
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    MULTIPLY        shift and go to state 73
    DIVIDE          shift and go to state 74
    AND_OPERATOR    shift and go to state 75

  ! ASSIGNMENT      [ reduce using rule 31 (expression -> expression binary_operator expression .) ]
  ! OS_BRACKET      [ reduce using rule 31 (expression -> expression binary_operator expression .) ]
  ! PLUS            [ reduce using rule 31 (expression -> expression binary_operator expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression binary_operator expression .) ]
  ! MULTIPLY        [ reduce using rule 31 (expression -> expression binary_operator expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression binary_operator expression .) ]
  ! AND_OPERATOR    [ reduce using rule 31 (expression -> expression binary_operator expression .) ]

    binary_operator                shift and go to state 68

state 94

    (30) assignment -> expression ASSIGNMENT expression .
    (31) expression -> expression . binary_operator expression
    (30) assignment -> expression . ASSIGNMENT expression
    (80) indexing -> expression . OS_BRACKET dimensions CS_BRACKET
    (32) binary_operator -> . PLUS
    (33) binary_operator -> . MINUS
    (34) binary_operator -> . MULTIPLY
    (35) binary_operator -> . DIVIDE
    (36) binary_operator -> . AND_OPERATOR

    NEWLINE         reduce using rule 30 (assignment -> expression ASSIGNMENT expression .)
    OS_BRACKET      reduce using rule 30 (assignment -> expression ASSIGNMENT expression .)
    RBRACKET        reduce using rule 30 (assignment -> expression ASSIGNMENT expression .)
    LBRACKET        reduce using rule 30 (assignment -> expression ASSIGNMENT expression .)
    VARIABLE        reduce using rule 30 (assignment -> expression ASSIGNMENT expression .)
    MXEQ_OPERATOR   reduce using rule 30 (assignment -> expression ASSIGNMENT expression .)
    MXLT_OPERATOR   reduce using rule 30 (assignment -> expression ASSIGNMENT expression .)
    MXGT_OPERATOR   reduce using rule 30 (assignment -> expression ASSIGNMENT expression .)
    MXLTE_OPERATOR  reduce using rule 30 (assignment -> expression ASSIGNMENT expression .)
    MXGTE_OPERATOR  reduce using rule 30 (assignment -> expression ASSIGNMENT expression .)
    ELEQ_OPERATOR   reduce using rule 30 (assignment -> expression ASSIGNMENT expression .)
    ELLT_OPERATOR   reduce using rule 30 (assignment -> expression ASSIGNMENT expression .)
    ELGT_OPERATOR   reduce using rule 30 (assignment -> expression ASSIGNMENT expression .)
    ELLTE_OPERATOR  reduce using rule 30 (assignment -> expression ASSIGNMENT expression .)
    ELGTE_OPERATOR  reduce using rule 30 (assignment -> expression ASSIGNMENT expression .)
    NOT_OPERATOR    reduce using rule 30 (assignment -> expression ASSIGNMENT expression .)
    MXTRUE_OPERATOR reduce using rule 30 (assignment -> expression ASSIGNMENT expression .)
    MXFALSE_OPERATOR reduce using rule 30 (assignment -> expression ASSIGNMENT expression .)
    SIZE_OPERATOR   reduce using rule 30 (assignment -> expression ASSIGNMENT expression .)
    LOGITIZE_OPERATOR reduce using rule 30 (assignment -> expression ASSIGNMENT expression .)
    DIGITIZE_OPERATOR reduce using rule 30 (assignment -> expression ASSIGNMENT expression .)
    DO              reduce using rule 30 (assignment -> expression ASSIGNMENT expression .)
    GET             reduce using rule 30 (assignment -> expression ASSIGNMENT expression .)
    REDUCE_OPERATOR reduce using rule 30 (assignment -> expression ASSIGNMENT expression .)
    EXTEND_OPERATOR reduce using rule 30 (assignment -> expression ASSIGNMENT expression .)
    OCT_NUMBER      reduce using rule 30 (assignment -> expression ASSIGNMENT expression .)
    DEC_NUMBER      reduce using rule 30 (assignment -> expression ASSIGNMENT expression .)
    HEX_NUMBER      reduce using rule 30 (assignment -> expression ASSIGNMENT expression .)
    TRUE            reduce using rule 30 (assignment -> expression ASSIGNMENT expression .)
    FALSE           reduce using rule 30 (assignment -> expression ASSIGNMENT expression .)
    COMMA           reduce using rule 30 (assignment -> expression ASSIGNMENT expression .)
    CS_BRACKET      reduce using rule 30 (assignment -> expression ASSIGNMENT expression .)
    ASSIGNMENT      shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    MULTIPLY        shift and go to state 73
    DIVIDE          shift and go to state 74
    AND_OPERATOR    shift and go to state 75

  ! ASSIGNMENT      [ reduce using rule 30 (assignment -> expression ASSIGNMENT expression .) ]
  ! PLUS            [ reduce using rule 30 (assignment -> expression ASSIGNMENT expression .) ]
  ! MINUS           [ reduce using rule 30 (assignment -> expression ASSIGNMENT expression .) ]
  ! MULTIPLY        [ reduce using rule 30 (assignment -> expression ASSIGNMENT expression .) ]
  ! DIVIDE          [ reduce using rule 30 (assignment -> expression ASSIGNMENT expression .) ]
  ! AND_OPERATOR    [ reduce using rule 30 (assignment -> expression ASSIGNMENT expression .) ]
  ! OS_BRACKET      [ shift and go to state 70 ]

    binary_operator                shift and go to state 68

state 95

    (83) dimension -> expression .
    (31) expression -> expression . binary_operator expression
    (30) assignment -> expression . ASSIGNMENT expression
    (80) indexing -> expression . OS_BRACKET dimensions CS_BRACKET
    (32) binary_operator -> . PLUS
    (33) binary_operator -> . MINUS
    (34) binary_operator -> . MULTIPLY
    (35) binary_operator -> . DIVIDE
    (36) binary_operator -> . AND_OPERATOR

  ! shift/reduce conflict for ASSIGNMENT resolved as shift
  ! shift/reduce conflict for OS_BRACKET resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND_OPERATOR resolved as shift
    COMMA           reduce using rule 83 (dimension -> expression .)
    CS_BRACKET      reduce using rule 83 (dimension -> expression .)
    NEWLINE         reduce using rule 83 (dimension -> expression .)
    RBRACKET        reduce using rule 83 (dimension -> expression .)
    LBRACKET        reduce using rule 83 (dimension -> expression .)
    VARIABLE        reduce using rule 83 (dimension -> expression .)
    MXEQ_OPERATOR   reduce using rule 83 (dimension -> expression .)
    MXLT_OPERATOR   reduce using rule 83 (dimension -> expression .)
    MXGT_OPERATOR   reduce using rule 83 (dimension -> expression .)
    MXLTE_OPERATOR  reduce using rule 83 (dimension -> expression .)
    MXGTE_OPERATOR  reduce using rule 83 (dimension -> expression .)
    ELEQ_OPERATOR   reduce using rule 83 (dimension -> expression .)
    ELLT_OPERATOR   reduce using rule 83 (dimension -> expression .)
    ELGT_OPERATOR   reduce using rule 83 (dimension -> expression .)
    ELLTE_OPERATOR  reduce using rule 83 (dimension -> expression .)
    ELGTE_OPERATOR  reduce using rule 83 (dimension -> expression .)
    NOT_OPERATOR    reduce using rule 83 (dimension -> expression .)
    MXTRUE_OPERATOR reduce using rule 83 (dimension -> expression .)
    MXFALSE_OPERATOR reduce using rule 83 (dimension -> expression .)
    SIZE_OPERATOR   reduce using rule 83 (dimension -> expression .)
    LOGITIZE_OPERATOR reduce using rule 83 (dimension -> expression .)
    DIGITIZE_OPERATOR reduce using rule 83 (dimension -> expression .)
    DO              reduce using rule 83 (dimension -> expression .)
    GET             reduce using rule 83 (dimension -> expression .)
    REDUCE_OPERATOR reduce using rule 83 (dimension -> expression .)
    EXTEND_OPERATOR reduce using rule 83 (dimension -> expression .)
    OCT_NUMBER      reduce using rule 83 (dimension -> expression .)
    DEC_NUMBER      reduce using rule 83 (dimension -> expression .)
    HEX_NUMBER      reduce using rule 83 (dimension -> expression .)
    TRUE            reduce using rule 83 (dimension -> expression .)
    FALSE           reduce using rule 83 (dimension -> expression .)
    ASSIGNMENT      shift and go to state 69
    OS_BRACKET      shift and go to state 70
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    MULTIPLY        shift and go to state 73
    DIVIDE          shift and go to state 74
    AND_OPERATOR    shift and go to state 75

  ! ASSIGNMENT      [ reduce using rule 83 (dimension -> expression .) ]
  ! OS_BRACKET      [ reduce using rule 83 (dimension -> expression .) ]
  ! PLUS            [ reduce using rule 83 (dimension -> expression .) ]
  ! MINUS           [ reduce using rule 83 (dimension -> expression .) ]
  ! MULTIPLY        [ reduce using rule 83 (dimension -> expression .) ]
  ! DIVIDE          [ reduce using rule 83 (dimension -> expression .) ]
  ! AND_OPERATOR    [ reduce using rule 83 (dimension -> expression .) ]

    binary_operator                shift and go to state 68

state 96

    (80) indexing -> expression OS_BRACKET dimensions . CS_BRACKET

    CS_BRACKET      shift and go to state 110


state 97

    (81) dimensions -> dimension . COMMA dimensions
    (82) dimensions -> dimension .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 111
    CS_BRACKET      reduce using rule 82 (dimensions -> dimension .)
    ASSIGNMENT      reduce using rule 82 (dimensions -> dimension .)
    OS_BRACKET      reduce using rule 82 (dimensions -> dimension .)
    PLUS            reduce using rule 82 (dimensions -> dimension .)
    MINUS           reduce using rule 82 (dimensions -> dimension .)
    MULTIPLY        reduce using rule 82 (dimensions -> dimension .)
    DIVIDE          reduce using rule 82 (dimensions -> dimension .)
    AND_OPERATOR    reduce using rule 82 (dimensions -> dimension .)
    NEWLINE         reduce using rule 82 (dimensions -> dimension .)
    RBRACKET        reduce using rule 82 (dimensions -> dimension .)
    LBRACKET        reduce using rule 82 (dimensions -> dimension .)
    VARIABLE        reduce using rule 82 (dimensions -> dimension .)
    MXEQ_OPERATOR   reduce using rule 82 (dimensions -> dimension .)
    MXLT_OPERATOR   reduce using rule 82 (dimensions -> dimension .)
    MXGT_OPERATOR   reduce using rule 82 (dimensions -> dimension .)
    MXLTE_OPERATOR  reduce using rule 82 (dimensions -> dimension .)
    MXGTE_OPERATOR  reduce using rule 82 (dimensions -> dimension .)
    ELEQ_OPERATOR   reduce using rule 82 (dimensions -> dimension .)
    ELLT_OPERATOR   reduce using rule 82 (dimensions -> dimension .)
    ELGT_OPERATOR   reduce using rule 82 (dimensions -> dimension .)
    ELLTE_OPERATOR  reduce using rule 82 (dimensions -> dimension .)
    ELGTE_OPERATOR  reduce using rule 82 (dimensions -> dimension .)
    NOT_OPERATOR    reduce using rule 82 (dimensions -> dimension .)
    MXTRUE_OPERATOR reduce using rule 82 (dimensions -> dimension .)
    MXFALSE_OPERATOR reduce using rule 82 (dimensions -> dimension .)
    SIZE_OPERATOR   reduce using rule 82 (dimensions -> dimension .)
    LOGITIZE_OPERATOR reduce using rule 82 (dimensions -> dimension .)
    DIGITIZE_OPERATOR reduce using rule 82 (dimensions -> dimension .)
    DO              reduce using rule 82 (dimensions -> dimension .)
    GET             reduce using rule 82 (dimensions -> dimension .)
    REDUCE_OPERATOR reduce using rule 82 (dimensions -> dimension .)
    EXTEND_OPERATOR reduce using rule 82 (dimensions -> dimension .)
    OCT_NUMBER      reduce using rule 82 (dimensions -> dimension .)
    DEC_NUMBER      reduce using rule 82 (dimensions -> dimension .)
    HEX_NUMBER      reduce using rule 82 (dimensions -> dimension .)
    TRUE            reduce using rule 82 (dimensions -> dimension .)
    FALSE           reduce using rule 82 (dimensions -> dimension .)

  ! COMMA           [ reduce using rule 82 (dimensions -> dimension .) ]


state 98

    (13) statement -> PLEASE statement THANKS . NEWLINE

    NEWLINE         shift and go to state 112


state 99

    (78) var_declaration -> VAR VARIABLE OS_BRACKET . dimensions CS_BRACKET ASSIGNMENT initializer
    (81) dimensions -> . dimension COMMA dimensions
    (82) dimensions -> . dimension
    (83) dimension -> . expression
    (31) expression -> . expression binary_operator expression
    (37) expression -> . unary_operator expression
    (54) expression -> . base_values
    (55) expression -> . assignment
    (56) expression -> . indexing
    (57) expression -> . do
    (58) expression -> . get
    (59) expression -> . reduce
    (60) expression -> . extend
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . VARIABLE
    (38) unary_operator -> . MXEQ_OPERATOR
    (39) unary_operator -> . MXLT_OPERATOR
    (40) unary_operator -> . MXGT_OPERATOR
    (41) unary_operator -> . MXLTE_OPERATOR
    (42) unary_operator -> . MXGTE_OPERATOR
    (43) unary_operator -> . ELEQ_OPERATOR
    (44) unary_operator -> . ELLT_OPERATOR
    (45) unary_operator -> . ELGT_OPERATOR
    (46) unary_operator -> . ELLTE_OPERATOR
    (47) unary_operator -> . ELGTE_OPERATOR
    (48) unary_operator -> . NOT_OPERATOR
    (49) unary_operator -> . MXTRUE_OPERATOR
    (50) unary_operator -> . MXFALSE_OPERATOR
    (51) unary_operator -> . SIZE_OPERATOR
    (52) unary_operator -> . LOGITIZE_OPERATOR
    (53) unary_operator -> . DIGITIZE_OPERATOR
    (75) base_values -> . number
    (76) base_values -> . boolean
    (30) assignment -> . expression ASSIGNMENT expression
    (80) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (63) do -> . DO VARIABLE call_parameters
    (67) get -> . GET VARIABLE
    (61) reduce -> . REDUCE_OPERATOR expression dimensions
    (62) extend -> . EXTEND_OPERATOR expression dimensions
    (70) number -> . OCT_NUMBER
    (71) number -> . DEC_NUMBER
    (72) number -> . HEX_NUMBER
    (73) boolean -> . TRUE
    (74) boolean -> . FALSE

    LBRACKET        shift and go to state 29
    VARIABLE        shift and go to state 20
    MXEQ_OPERATOR   shift and go to state 38
    MXLT_OPERATOR   shift and go to state 39
    MXGT_OPERATOR   shift and go to state 40
    MXLTE_OPERATOR  shift and go to state 41
    MXGTE_OPERATOR  shift and go to state 42
    ELEQ_OPERATOR   shift and go to state 43
    ELLT_OPERATOR   shift and go to state 44
    ELGT_OPERATOR   shift and go to state 45
    ELLTE_OPERATOR  shift and go to state 46
    ELGTE_OPERATOR  shift and go to state 47
    NOT_OPERATOR    shift and go to state 48
    MXTRUE_OPERATOR shift and go to state 49
    MXFALSE_OPERATOR shift and go to state 50
    SIZE_OPERATOR   shift and go to state 51
    LOGITIZE_OPERATOR shift and go to state 52
    DIGITIZE_OPERATOR shift and go to state 53
    DO              shift and go to state 56
    GET             shift and go to state 57
    REDUCE_OPERATOR shift and go to state 58
    EXTEND_OPERATOR shift and go to state 59
    OCT_NUMBER      shift and go to state 60
    DEC_NUMBER      shift and go to state 61
    HEX_NUMBER      shift and go to state 62
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    dimensions                     shift and go to state 113
    dimension                      shift and go to state 97
    expression                     shift and go to state 95
    unary_operator                 shift and go to state 21
    base_values                    shift and go to state 22
    assignment                     shift and go to state 23
    indexing                       shift and go to state 24
    do                             shift and go to state 25
    get                            shift and go to state 26
    reduce                         shift and go to state 27
    extend                         shift and go to state 28
    number                         shift and go to state 54
    boolean                        shift and go to state 55

state 100

    (79) var_declaration -> VAR VARIABLE ASSIGNMENT . expression
    (31) expression -> . expression binary_operator expression
    (37) expression -> . unary_operator expression
    (54) expression -> . base_values
    (55) expression -> . assignment
    (56) expression -> . indexing
    (57) expression -> . do
    (58) expression -> . get
    (59) expression -> . reduce
    (60) expression -> . extend
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . VARIABLE
    (38) unary_operator -> . MXEQ_OPERATOR
    (39) unary_operator -> . MXLT_OPERATOR
    (40) unary_operator -> . MXGT_OPERATOR
    (41) unary_operator -> . MXLTE_OPERATOR
    (42) unary_operator -> . MXGTE_OPERATOR
    (43) unary_operator -> . ELEQ_OPERATOR
    (44) unary_operator -> . ELLT_OPERATOR
    (45) unary_operator -> . ELGT_OPERATOR
    (46) unary_operator -> . ELLTE_OPERATOR
    (47) unary_operator -> . ELGTE_OPERATOR
    (48) unary_operator -> . NOT_OPERATOR
    (49) unary_operator -> . MXTRUE_OPERATOR
    (50) unary_operator -> . MXFALSE_OPERATOR
    (51) unary_operator -> . SIZE_OPERATOR
    (52) unary_operator -> . LOGITIZE_OPERATOR
    (53) unary_operator -> . DIGITIZE_OPERATOR
    (75) base_values -> . number
    (76) base_values -> . boolean
    (30) assignment -> . expression ASSIGNMENT expression
    (80) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (63) do -> . DO VARIABLE call_parameters
    (67) get -> . GET VARIABLE
    (61) reduce -> . REDUCE_OPERATOR expression dimensions
    (62) extend -> . EXTEND_OPERATOR expression dimensions
    (70) number -> . OCT_NUMBER
    (71) number -> . DEC_NUMBER
    (72) number -> . HEX_NUMBER
    (73) boolean -> . TRUE
    (74) boolean -> . FALSE

    LBRACKET        shift and go to state 29
    VARIABLE        shift and go to state 20
    MXEQ_OPERATOR   shift and go to state 38
    MXLT_OPERATOR   shift and go to state 39
    MXGT_OPERATOR   shift and go to state 40
    MXLTE_OPERATOR  shift and go to state 41
    MXGTE_OPERATOR  shift and go to state 42
    ELEQ_OPERATOR   shift and go to state 43
    ELLT_OPERATOR   shift and go to state 44
    ELGT_OPERATOR   shift and go to state 45
    ELLTE_OPERATOR  shift and go to state 46
    ELGTE_OPERATOR  shift and go to state 47
    NOT_OPERATOR    shift and go to state 48
    MXTRUE_OPERATOR shift and go to state 49
    MXFALSE_OPERATOR shift and go to state 50
    SIZE_OPERATOR   shift and go to state 51
    LOGITIZE_OPERATOR shift and go to state 52
    DIGITIZE_OPERATOR shift and go to state 53
    DO              shift and go to state 56
    GET             shift and go to state 57
    REDUCE_OPERATOR shift and go to state 58
    EXTEND_OPERATOR shift and go to state 59
    OCT_NUMBER      shift and go to state 60
    DEC_NUMBER      shift and go to state 61
    HEX_NUMBER      shift and go to state 62
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    expression                     shift and go to state 114
    unary_operator                 shift and go to state 21
    base_values                    shift and go to state 22
    assignment                     shift and go to state 23
    indexing                       shift and go to state 24
    do                             shift and go to state 25
    get                            shift and go to state 26
    reduce                         shift and go to state 27
    extend                         shift and go to state 28
    number                         shift and go to state 54
    boolean                        shift and go to state 55

state 101

    (68) expression -> LBRACKET expression RBRACKET .

    NEWLINE         reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    ASSIGNMENT      reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    OS_BRACKET      reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    MULTIPLY        reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    AND_OPERATOR    reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    VARIABLE        reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    MXEQ_OPERATOR   reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    MXLT_OPERATOR   reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    MXGT_OPERATOR   reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    MXLTE_OPERATOR  reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    MXGTE_OPERATOR  reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    ELEQ_OPERATOR   reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    ELLT_OPERATOR   reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    ELGT_OPERATOR   reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    ELLTE_OPERATOR  reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    ELGTE_OPERATOR  reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    NOT_OPERATOR    reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    MXTRUE_OPERATOR reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    MXFALSE_OPERATOR reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    SIZE_OPERATOR   reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    LOGITIZE_OPERATOR reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    DIGITIZE_OPERATOR reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    DO              reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    GET             reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    REDUCE_OPERATOR reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    EXTEND_OPERATOR reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    OCT_NUMBER      reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    DEC_NUMBER      reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    HEX_NUMBER      reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    TRUE            reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    FALSE           reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    CS_BRACKET      reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)


state 102

    (24) for -> FOR VARIABLE BOUNDARY . VARIABLE STEP VARIABLE statements_group

    VARIABLE        shift and go to state 115


state 103

    (28) switch -> SWITCH expression NEWLINE . TRUE statements_group FALSE statements_group
    (29) switch -> SWITCH expression NEWLINE . FALSE statements_group TRUE statements_group

    TRUE            shift and go to state 116
    FALSE           shift and go to state 117


state 104

    (63) do -> DO VARIABLE call_parameters .

    NEWLINE         reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    ASSIGNMENT      reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    OS_BRACKET      reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    PLUS            reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    MINUS           reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    MULTIPLY        reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    DIVIDE          reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    AND_OPERATOR    reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    RBRACKET        reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    LBRACKET        reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    VARIABLE        reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    MXEQ_OPERATOR   reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    MXLT_OPERATOR   reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    MXGT_OPERATOR   reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    MXLTE_OPERATOR  reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    MXGTE_OPERATOR  reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    ELEQ_OPERATOR   reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    ELLT_OPERATOR   reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    ELGT_OPERATOR   reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    ELLTE_OPERATOR  reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    ELGTE_OPERATOR  reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    NOT_OPERATOR    reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    MXTRUE_OPERATOR reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    MXFALSE_OPERATOR reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    SIZE_OPERATOR   reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    LOGITIZE_OPERATOR reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    DIGITIZE_OPERATOR reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    DO              reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    GET             reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    REDUCE_OPERATOR reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    EXTEND_OPERATOR reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    OCT_NUMBER      reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    DEC_NUMBER      reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    HEX_NUMBER      reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    TRUE            reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    FALSE           reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    COMMA           reduce using rule 63 (do -> DO VARIABLE call_parameters .)
    CS_BRACKET      reduce using rule 63 (do -> DO VARIABLE call_parameters .)


state 105

    (64) call_parameters -> call_parameter . call_parameters
    (65) call_parameters -> call_parameter .
    (64) call_parameters -> . call_parameter call_parameters
    (65) call_parameters -> . call_parameter
    (66) call_parameter -> . expression
    (31) expression -> . expression binary_operator expression
    (37) expression -> . unary_operator expression
    (54) expression -> . base_values
    (55) expression -> . assignment
    (56) expression -> . indexing
    (57) expression -> . do
    (58) expression -> . get
    (59) expression -> . reduce
    (60) expression -> . extend
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . VARIABLE
    (38) unary_operator -> . MXEQ_OPERATOR
    (39) unary_operator -> . MXLT_OPERATOR
    (40) unary_operator -> . MXGT_OPERATOR
    (41) unary_operator -> . MXLTE_OPERATOR
    (42) unary_operator -> . MXGTE_OPERATOR
    (43) unary_operator -> . ELEQ_OPERATOR
    (44) unary_operator -> . ELLT_OPERATOR
    (45) unary_operator -> . ELGT_OPERATOR
    (46) unary_operator -> . ELLTE_OPERATOR
    (47) unary_operator -> . ELGTE_OPERATOR
    (48) unary_operator -> . NOT_OPERATOR
    (49) unary_operator -> . MXTRUE_OPERATOR
    (50) unary_operator -> . MXFALSE_OPERATOR
    (51) unary_operator -> . SIZE_OPERATOR
    (52) unary_operator -> . LOGITIZE_OPERATOR
    (53) unary_operator -> . DIGITIZE_OPERATOR
    (75) base_values -> . number
    (76) base_values -> . boolean
    (30) assignment -> . expression ASSIGNMENT expression
    (80) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (63) do -> . DO VARIABLE call_parameters
    (67) get -> . GET VARIABLE
    (61) reduce -> . REDUCE_OPERATOR expression dimensions
    (62) extend -> . EXTEND_OPERATOR expression dimensions
    (70) number -> . OCT_NUMBER
    (71) number -> . DEC_NUMBER
    (72) number -> . HEX_NUMBER
    (73) boolean -> . TRUE
    (74) boolean -> . FALSE

  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for MXEQ_OPERATOR resolved as shift
  ! shift/reduce conflict for MXLT_OPERATOR resolved as shift
  ! shift/reduce conflict for MXGT_OPERATOR resolved as shift
  ! shift/reduce conflict for MXLTE_OPERATOR resolved as shift
  ! shift/reduce conflict for MXGTE_OPERATOR resolved as shift
  ! shift/reduce conflict for ELEQ_OPERATOR resolved as shift
  ! shift/reduce conflict for ELLT_OPERATOR resolved as shift
  ! shift/reduce conflict for ELGT_OPERATOR resolved as shift
  ! shift/reduce conflict for ELLTE_OPERATOR resolved as shift
  ! shift/reduce conflict for ELGTE_OPERATOR resolved as shift
  ! shift/reduce conflict for NOT_OPERATOR resolved as shift
  ! shift/reduce conflict for MXTRUE_OPERATOR resolved as shift
  ! shift/reduce conflict for MXFALSE_OPERATOR resolved as shift
  ! shift/reduce conflict for SIZE_OPERATOR resolved as shift
  ! shift/reduce conflict for LOGITIZE_OPERATOR resolved as shift
  ! shift/reduce conflict for DIGITIZE_OPERATOR resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for GET resolved as shift
  ! shift/reduce conflict for REDUCE_OPERATOR resolved as shift
  ! shift/reduce conflict for EXTEND_OPERATOR resolved as shift
  ! shift/reduce conflict for OCT_NUMBER resolved as shift
  ! shift/reduce conflict for DEC_NUMBER resolved as shift
  ! shift/reduce conflict for HEX_NUMBER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    ASSIGNMENT      reduce using rule 65 (call_parameters -> call_parameter .)
    OS_BRACKET      reduce using rule 65 (call_parameters -> call_parameter .)
    PLUS            reduce using rule 65 (call_parameters -> call_parameter .)
    MINUS           reduce using rule 65 (call_parameters -> call_parameter .)
    MULTIPLY        reduce using rule 65 (call_parameters -> call_parameter .)
    DIVIDE          reduce using rule 65 (call_parameters -> call_parameter .)
    AND_OPERATOR    reduce using rule 65 (call_parameters -> call_parameter .)
    NEWLINE         reduce using rule 65 (call_parameters -> call_parameter .)
    RBRACKET        reduce using rule 65 (call_parameters -> call_parameter .)
    COMMA           reduce using rule 65 (call_parameters -> call_parameter .)
    CS_BRACKET      reduce using rule 65 (call_parameters -> call_parameter .)
    LBRACKET        shift and go to state 29
    VARIABLE        shift and go to state 20
    MXEQ_OPERATOR   shift and go to state 38
    MXLT_OPERATOR   shift and go to state 39
    MXGT_OPERATOR   shift and go to state 40
    MXLTE_OPERATOR  shift and go to state 41
    MXGTE_OPERATOR  shift and go to state 42
    ELEQ_OPERATOR   shift and go to state 43
    ELLT_OPERATOR   shift and go to state 44
    ELGT_OPERATOR   shift and go to state 45
    ELLTE_OPERATOR  shift and go to state 46
    ELGTE_OPERATOR  shift and go to state 47
    NOT_OPERATOR    shift and go to state 48
    MXTRUE_OPERATOR shift and go to state 49
    MXFALSE_OPERATOR shift and go to state 50
    SIZE_OPERATOR   shift and go to state 51
    LOGITIZE_OPERATOR shift and go to state 52
    DIGITIZE_OPERATOR shift and go to state 53
    DO              shift and go to state 56
    GET             shift and go to state 57
    REDUCE_OPERATOR shift and go to state 58
    EXTEND_OPERATOR shift and go to state 59
    OCT_NUMBER      shift and go to state 60
    DEC_NUMBER      shift and go to state 61
    HEX_NUMBER      shift and go to state 62
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

  ! LBRACKET        [ reduce using rule 65 (call_parameters -> call_parameter .) ]
  ! VARIABLE        [ reduce using rule 65 (call_parameters -> call_parameter .) ]
  ! MXEQ_OPERATOR   [ reduce using rule 65 (call_parameters -> call_parameter .) ]
  ! MXLT_OPERATOR   [ reduce using rule 65 (call_parameters -> call_parameter .) ]
  ! MXGT_OPERATOR   [ reduce using rule 65 (call_parameters -> call_parameter .) ]
  ! MXLTE_OPERATOR  [ reduce using rule 65 (call_parameters -> call_parameter .) ]
  ! MXGTE_OPERATOR  [ reduce using rule 65 (call_parameters -> call_parameter .) ]
  ! ELEQ_OPERATOR   [ reduce using rule 65 (call_parameters -> call_parameter .) ]
  ! ELLT_OPERATOR   [ reduce using rule 65 (call_parameters -> call_parameter .) ]
  ! ELGT_OPERATOR   [ reduce using rule 65 (call_parameters -> call_parameter .) ]
  ! ELLTE_OPERATOR  [ reduce using rule 65 (call_parameters -> call_parameter .) ]
  ! ELGTE_OPERATOR  [ reduce using rule 65 (call_parameters -> call_parameter .) ]
  ! NOT_OPERATOR    [ reduce using rule 65 (call_parameters -> call_parameter .) ]
  ! MXTRUE_OPERATOR [ reduce using rule 65 (call_parameters -> call_parameter .) ]
  ! MXFALSE_OPERATOR [ reduce using rule 65 (call_parameters -> call_parameter .) ]
  ! SIZE_OPERATOR   [ reduce using rule 65 (call_parameters -> call_parameter .) ]
  ! LOGITIZE_OPERATOR [ reduce using rule 65 (call_parameters -> call_parameter .) ]
  ! DIGITIZE_OPERATOR [ reduce using rule 65 (call_parameters -> call_parameter .) ]
  ! DO              [ reduce using rule 65 (call_parameters -> call_parameter .) ]
  ! GET             [ reduce using rule 65 (call_parameters -> call_parameter .) ]
  ! REDUCE_OPERATOR [ reduce using rule 65 (call_parameters -> call_parameter .) ]
  ! EXTEND_OPERATOR [ reduce using rule 65 (call_parameters -> call_parameter .) ]
  ! OCT_NUMBER      [ reduce using rule 65 (call_parameters -> call_parameter .) ]
  ! DEC_NUMBER      [ reduce using rule 65 (call_parameters -> call_parameter .) ]
  ! HEX_NUMBER      [ reduce using rule 65 (call_parameters -> call_parameter .) ]
  ! TRUE            [ reduce using rule 65 (call_parameters -> call_parameter .) ]
  ! FALSE           [ reduce using rule 65 (call_parameters -> call_parameter .) ]

    call_parameter                 shift and go to state 105
    call_parameters                shift and go to state 118
    expression                     shift and go to state 106
    unary_operator                 shift and go to state 21
    base_values                    shift and go to state 22
    assignment                     shift and go to state 23
    indexing                       shift and go to state 24
    do                             shift and go to state 25
    get                            shift and go to state 26
    reduce                         shift and go to state 27
    extend                         shift and go to state 28
    number                         shift and go to state 54
    boolean                        shift and go to state 55

state 106

    (66) call_parameter -> expression .
    (31) expression -> expression . binary_operator expression
    (30) assignment -> expression . ASSIGNMENT expression
    (80) indexing -> expression . OS_BRACKET dimensions CS_BRACKET
    (32) binary_operator -> . PLUS
    (33) binary_operator -> . MINUS
    (34) binary_operator -> . MULTIPLY
    (35) binary_operator -> . DIVIDE
    (36) binary_operator -> . AND_OPERATOR

  ! shift/reduce conflict for ASSIGNMENT resolved as shift
  ! shift/reduce conflict for OS_BRACKET resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND_OPERATOR resolved as shift
    NEWLINE         reduce using rule 66 (call_parameter -> expression .)
    RBRACKET        reduce using rule 66 (call_parameter -> expression .)
    LBRACKET        reduce using rule 66 (call_parameter -> expression .)
    VARIABLE        reduce using rule 66 (call_parameter -> expression .)
    MXEQ_OPERATOR   reduce using rule 66 (call_parameter -> expression .)
    MXLT_OPERATOR   reduce using rule 66 (call_parameter -> expression .)
    MXGT_OPERATOR   reduce using rule 66 (call_parameter -> expression .)
    MXLTE_OPERATOR  reduce using rule 66 (call_parameter -> expression .)
    MXGTE_OPERATOR  reduce using rule 66 (call_parameter -> expression .)
    ELEQ_OPERATOR   reduce using rule 66 (call_parameter -> expression .)
    ELLT_OPERATOR   reduce using rule 66 (call_parameter -> expression .)
    ELGT_OPERATOR   reduce using rule 66 (call_parameter -> expression .)
    ELLTE_OPERATOR  reduce using rule 66 (call_parameter -> expression .)
    ELGTE_OPERATOR  reduce using rule 66 (call_parameter -> expression .)
    NOT_OPERATOR    reduce using rule 66 (call_parameter -> expression .)
    MXTRUE_OPERATOR reduce using rule 66 (call_parameter -> expression .)
    MXFALSE_OPERATOR reduce using rule 66 (call_parameter -> expression .)
    SIZE_OPERATOR   reduce using rule 66 (call_parameter -> expression .)
    LOGITIZE_OPERATOR reduce using rule 66 (call_parameter -> expression .)
    DIGITIZE_OPERATOR reduce using rule 66 (call_parameter -> expression .)
    DO              reduce using rule 66 (call_parameter -> expression .)
    GET             reduce using rule 66 (call_parameter -> expression .)
    REDUCE_OPERATOR reduce using rule 66 (call_parameter -> expression .)
    EXTEND_OPERATOR reduce using rule 66 (call_parameter -> expression .)
    OCT_NUMBER      reduce using rule 66 (call_parameter -> expression .)
    DEC_NUMBER      reduce using rule 66 (call_parameter -> expression .)
    HEX_NUMBER      reduce using rule 66 (call_parameter -> expression .)
    TRUE            reduce using rule 66 (call_parameter -> expression .)
    FALSE           reduce using rule 66 (call_parameter -> expression .)
    COMMA           reduce using rule 66 (call_parameter -> expression .)
    CS_BRACKET      reduce using rule 66 (call_parameter -> expression .)
    ASSIGNMENT      shift and go to state 69
    OS_BRACKET      shift and go to state 70
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    MULTIPLY        shift and go to state 73
    DIVIDE          shift and go to state 74
    AND_OPERATOR    shift and go to state 75

  ! ASSIGNMENT      [ reduce using rule 66 (call_parameter -> expression .) ]
  ! OS_BRACKET      [ reduce using rule 66 (call_parameter -> expression .) ]
  ! PLUS            [ reduce using rule 66 (call_parameter -> expression .) ]
  ! MINUS           [ reduce using rule 66 (call_parameter -> expression .) ]
  ! MULTIPLY        [ reduce using rule 66 (call_parameter -> expression .) ]
  ! DIVIDE          [ reduce using rule 66 (call_parameter -> expression .) ]
  ! AND_OPERATOR    [ reduce using rule 66 (call_parameter -> expression .) ]

    binary_operator                shift and go to state 68

state 107

    (61) reduce -> REDUCE_OPERATOR expression dimensions .

    NEWLINE         reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    ASSIGNMENT      reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    OS_BRACKET      reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    PLUS            reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    MINUS           reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    MULTIPLY        reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    DIVIDE          reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    AND_OPERATOR    reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    RBRACKET        reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    LBRACKET        reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    VARIABLE        reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    MXEQ_OPERATOR   reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    MXLT_OPERATOR   reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    MXGT_OPERATOR   reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    MXLTE_OPERATOR  reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    MXGTE_OPERATOR  reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    ELEQ_OPERATOR   reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    ELLT_OPERATOR   reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    ELGT_OPERATOR   reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    ELLTE_OPERATOR  reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    ELGTE_OPERATOR  reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    NOT_OPERATOR    reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    MXTRUE_OPERATOR reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    MXFALSE_OPERATOR reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    SIZE_OPERATOR   reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    LOGITIZE_OPERATOR reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    DIGITIZE_OPERATOR reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    DO              reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    GET             reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    REDUCE_OPERATOR reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    EXTEND_OPERATOR reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    OCT_NUMBER      reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    DEC_NUMBER      reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    HEX_NUMBER      reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    TRUE            reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    FALSE           reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    COMMA           reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)
    CS_BRACKET      reduce using rule 61 (reduce -> REDUCE_OPERATOR expression dimensions .)


state 108

    (62) extend -> EXTEND_OPERATOR expression dimensions .

    NEWLINE         reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    ASSIGNMENT      reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    OS_BRACKET      reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    PLUS            reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    MINUS           reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    MULTIPLY        reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    DIVIDE          reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    AND_OPERATOR    reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    RBRACKET        reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    LBRACKET        reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    VARIABLE        reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    MXEQ_OPERATOR   reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    MXLT_OPERATOR   reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    MXGT_OPERATOR   reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    MXLTE_OPERATOR  reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    MXGTE_OPERATOR  reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    ELEQ_OPERATOR   reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    ELLT_OPERATOR   reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    ELGT_OPERATOR   reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    ELLTE_OPERATOR  reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    ELGTE_OPERATOR  reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    NOT_OPERATOR    reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    MXTRUE_OPERATOR reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    MXFALSE_OPERATOR reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    SIZE_OPERATOR   reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    LOGITIZE_OPERATOR reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    DIGITIZE_OPERATOR reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    DO              reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    GET             reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    REDUCE_OPERATOR reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    EXTEND_OPERATOR reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    OCT_NUMBER      reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    DEC_NUMBER      reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    HEX_NUMBER      reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    TRUE            reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    FALSE           reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    COMMA           reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)
    CS_BRACKET      reduce using rule 62 (extend -> EXTEND_OPERATOR expression dimensions .)


state 109

    (4) function -> func_decl NEWLINE func_body RESULT expression NEWLINE .

    TASK            reduce using rule 4 (function -> func_decl NEWLINE func_body RESULT expression NEWLINE .)
    $end            reduce using rule 4 (function -> func_decl NEWLINE func_body RESULT expression NEWLINE .)


state 110

    (80) indexing -> expression OS_BRACKET dimensions CS_BRACKET .

    NEWLINE         reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    ASSIGNMENT      reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    OS_BRACKET      reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    PLUS            reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    MINUS           reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    MULTIPLY        reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    DIVIDE          reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    AND_OPERATOR    reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    RBRACKET        reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    LBRACKET        reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    VARIABLE        reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    MXEQ_OPERATOR   reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    MXLT_OPERATOR   reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    MXGT_OPERATOR   reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    MXLTE_OPERATOR  reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    MXGTE_OPERATOR  reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    ELEQ_OPERATOR   reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    ELLT_OPERATOR   reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    ELGT_OPERATOR   reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    ELLTE_OPERATOR  reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    ELGTE_OPERATOR  reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    NOT_OPERATOR    reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    MXTRUE_OPERATOR reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    MXFALSE_OPERATOR reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    SIZE_OPERATOR   reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    LOGITIZE_OPERATOR reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    DIGITIZE_OPERATOR reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    DO              reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    GET             reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    REDUCE_OPERATOR reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    EXTEND_OPERATOR reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    OCT_NUMBER      reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    DEC_NUMBER      reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    HEX_NUMBER      reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    TRUE            reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    FALSE           reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    COMMA           reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)
    CS_BRACKET      reduce using rule 80 (indexing -> expression OS_BRACKET dimensions CS_BRACKET .)


state 111

    (81) dimensions -> dimension COMMA . dimensions
    (81) dimensions -> . dimension COMMA dimensions
    (82) dimensions -> . dimension
    (83) dimension -> . expression
    (31) expression -> . expression binary_operator expression
    (37) expression -> . unary_operator expression
    (54) expression -> . base_values
    (55) expression -> . assignment
    (56) expression -> . indexing
    (57) expression -> . do
    (58) expression -> . get
    (59) expression -> . reduce
    (60) expression -> . extend
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . VARIABLE
    (38) unary_operator -> . MXEQ_OPERATOR
    (39) unary_operator -> . MXLT_OPERATOR
    (40) unary_operator -> . MXGT_OPERATOR
    (41) unary_operator -> . MXLTE_OPERATOR
    (42) unary_operator -> . MXGTE_OPERATOR
    (43) unary_operator -> . ELEQ_OPERATOR
    (44) unary_operator -> . ELLT_OPERATOR
    (45) unary_operator -> . ELGT_OPERATOR
    (46) unary_operator -> . ELLTE_OPERATOR
    (47) unary_operator -> . ELGTE_OPERATOR
    (48) unary_operator -> . NOT_OPERATOR
    (49) unary_operator -> . MXTRUE_OPERATOR
    (50) unary_operator -> . MXFALSE_OPERATOR
    (51) unary_operator -> . SIZE_OPERATOR
    (52) unary_operator -> . LOGITIZE_OPERATOR
    (53) unary_operator -> . DIGITIZE_OPERATOR
    (75) base_values -> . number
    (76) base_values -> . boolean
    (30) assignment -> . expression ASSIGNMENT expression
    (80) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (63) do -> . DO VARIABLE call_parameters
    (67) get -> . GET VARIABLE
    (61) reduce -> . REDUCE_OPERATOR expression dimensions
    (62) extend -> . EXTEND_OPERATOR expression dimensions
    (70) number -> . OCT_NUMBER
    (71) number -> . DEC_NUMBER
    (72) number -> . HEX_NUMBER
    (73) boolean -> . TRUE
    (74) boolean -> . FALSE

    LBRACKET        shift and go to state 29
    VARIABLE        shift and go to state 20
    MXEQ_OPERATOR   shift and go to state 38
    MXLT_OPERATOR   shift and go to state 39
    MXGT_OPERATOR   shift and go to state 40
    MXLTE_OPERATOR  shift and go to state 41
    MXGTE_OPERATOR  shift and go to state 42
    ELEQ_OPERATOR   shift and go to state 43
    ELLT_OPERATOR   shift and go to state 44
    ELGT_OPERATOR   shift and go to state 45
    ELLTE_OPERATOR  shift and go to state 46
    ELGTE_OPERATOR  shift and go to state 47
    NOT_OPERATOR    shift and go to state 48
    MXTRUE_OPERATOR shift and go to state 49
    MXFALSE_OPERATOR shift and go to state 50
    SIZE_OPERATOR   shift and go to state 51
    LOGITIZE_OPERATOR shift and go to state 52
    DIGITIZE_OPERATOR shift and go to state 53
    DO              shift and go to state 56
    GET             shift and go to state 57
    REDUCE_OPERATOR shift and go to state 58
    EXTEND_OPERATOR shift and go to state 59
    OCT_NUMBER      shift and go to state 60
    DEC_NUMBER      shift and go to state 61
    HEX_NUMBER      shift and go to state 62
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    dimension                      shift and go to state 97
    dimensions                     shift and go to state 119
    expression                     shift and go to state 95
    unary_operator                 shift and go to state 21
    base_values                    shift and go to state 22
    assignment                     shift and go to state 23
    indexing                       shift and go to state 24
    do                             shift and go to state 25
    get                            shift and go to state 26
    reduce                         shift and go to state 27
    extend                         shift and go to state 28
    number                         shift and go to state 54
    boolean                        shift and go to state 55

state 112

    (13) statement -> PLEASE statement THANKS NEWLINE .

    PLEASE          reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    VAR             reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    LBRACKET        reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    VARIABLE        reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    FOR             reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    SWITCH          reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    MOVE            reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    ROTATE_LEFT     reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    ROTATE_RIGHT    reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    GET_ENVIRONMENT reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    MXEQ_OPERATOR   reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    MXLT_OPERATOR   reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    MXGT_OPERATOR   reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    MXLTE_OPERATOR  reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    MXGTE_OPERATOR  reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    ELEQ_OPERATOR   reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    ELLT_OPERATOR   reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    ELGT_OPERATOR   reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    ELLTE_OPERATOR  reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    ELGTE_OPERATOR  reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    NOT_OPERATOR    reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    MXTRUE_OPERATOR reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    MXFALSE_OPERATOR reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    SIZE_OPERATOR   reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    LOGITIZE_OPERATOR reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    DIGITIZE_OPERATOR reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    DO              reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    GET             reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    REDUCE_OPERATOR reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    EXTEND_OPERATOR reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    OCT_NUMBER      reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    DEC_NUMBER      reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    HEX_NUMBER      reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    TRUE            reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    FALSE           reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    NEWLINE         reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    RESULT          reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    RBRACKET        reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)
    THANKS          reduce using rule 13 (statement -> PLEASE statement THANKS NEWLINE .)


state 113

    (78) var_declaration -> VAR VARIABLE OS_BRACKET dimensions . CS_BRACKET ASSIGNMENT initializer

    CS_BRACKET      shift and go to state 120


state 114

    (79) var_declaration -> VAR VARIABLE ASSIGNMENT expression .
    (31) expression -> expression . binary_operator expression
    (30) assignment -> expression . ASSIGNMENT expression
    (80) indexing -> expression . OS_BRACKET dimensions CS_BRACKET
    (32) binary_operator -> . PLUS
    (33) binary_operator -> . MINUS
    (34) binary_operator -> . MULTIPLY
    (35) binary_operator -> . DIVIDE
    (36) binary_operator -> . AND_OPERATOR

    NEWLINE         reduce using rule 79 (var_declaration -> VAR VARIABLE ASSIGNMENT expression .)
    ASSIGNMENT      shift and go to state 69
    OS_BRACKET      shift and go to state 70
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    MULTIPLY        shift and go to state 73
    DIVIDE          shift and go to state 74
    AND_OPERATOR    shift and go to state 75

    binary_operator                shift and go to state 68

state 115

    (24) for -> FOR VARIABLE BOUNDARY VARIABLE . STEP VARIABLE statements_group

    STEP            shift and go to state 121


state 116

    (28) switch -> SWITCH expression NEWLINE TRUE . statements_group FALSE statements_group
    (25) statements_group -> . LBRACKET NEWLINE statements RBRACKET NEWLINE
    (26) statements_group -> . statement
    (27) statements_group -> . LBRACKET RBRACKET NEWLINE
    (13) statement -> . PLEASE statement THANKS NEWLINE
    (14) statement -> . var_declaration NEWLINE
    (15) statement -> . expression NEWLINE
    (16) statement -> . for
    (17) statement -> . switch
    (18) statement -> . command NEWLINE
    (19) statement -> . empty NEWLINE
    (78) var_declaration -> . VAR VARIABLE OS_BRACKET dimensions CS_BRACKET ASSIGNMENT initializer
    (79) var_declaration -> . VAR VARIABLE ASSIGNMENT expression
    (31) expression -> . expression binary_operator expression
    (37) expression -> . unary_operator expression
    (54) expression -> . base_values
    (55) expression -> . assignment
    (56) expression -> . indexing
    (57) expression -> . do
    (58) expression -> . get
    (59) expression -> . reduce
    (60) expression -> . extend
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . VARIABLE
    (24) for -> . FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group
    (28) switch -> . SWITCH expression NEWLINE TRUE statements_group FALSE statements_group
    (29) switch -> . SWITCH expression NEWLINE FALSE statements_group TRUE statements_group
    (20) command -> . MOVE
    (21) command -> . ROTATE_LEFT
    (22) command -> . ROTATE_RIGHT
    (23) command -> . GET_ENVIRONMENT
    (84) empty -> .
    (38) unary_operator -> . MXEQ_OPERATOR
    (39) unary_operator -> . MXLT_OPERATOR
    (40) unary_operator -> . MXGT_OPERATOR
    (41) unary_operator -> . MXLTE_OPERATOR
    (42) unary_operator -> . MXGTE_OPERATOR
    (43) unary_operator -> . ELEQ_OPERATOR
    (44) unary_operator -> . ELLT_OPERATOR
    (45) unary_operator -> . ELGT_OPERATOR
    (46) unary_operator -> . ELLTE_OPERATOR
    (47) unary_operator -> . ELGTE_OPERATOR
    (48) unary_operator -> . NOT_OPERATOR
    (49) unary_operator -> . MXTRUE_OPERATOR
    (50) unary_operator -> . MXFALSE_OPERATOR
    (51) unary_operator -> . SIZE_OPERATOR
    (52) unary_operator -> . LOGITIZE_OPERATOR
    (53) unary_operator -> . DIGITIZE_OPERATOR
    (75) base_values -> . number
    (76) base_values -> . boolean
    (30) assignment -> . expression ASSIGNMENT expression
    (80) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (63) do -> . DO VARIABLE call_parameters
    (67) get -> . GET VARIABLE
    (61) reduce -> . REDUCE_OPERATOR expression dimensions
    (62) extend -> . EXTEND_OPERATOR expression dimensions
    (70) number -> . OCT_NUMBER
    (71) number -> . DEC_NUMBER
    (72) number -> . HEX_NUMBER
    (73) boolean -> . TRUE
    (74) boolean -> . FALSE

    LBRACKET        shift and go to state 123
    PLEASE          shift and go to state 14
    VAR             shift and go to state 19
    VARIABLE        shift and go to state 20
    FOR             shift and go to state 30
    SWITCH          shift and go to state 31
    MOVE            shift and go to state 34
    ROTATE_LEFT     shift and go to state 35
    ROTATE_RIGHT    shift and go to state 36
    GET_ENVIRONMENT shift and go to state 37
    NEWLINE         reduce using rule 84 (empty -> .)
    MXEQ_OPERATOR   shift and go to state 38
    MXLT_OPERATOR   shift and go to state 39
    MXGT_OPERATOR   shift and go to state 40
    MXLTE_OPERATOR  shift and go to state 41
    MXGTE_OPERATOR  shift and go to state 42
    ELEQ_OPERATOR   shift and go to state 43
    ELLT_OPERATOR   shift and go to state 44
    ELGT_OPERATOR   shift and go to state 45
    ELLTE_OPERATOR  shift and go to state 46
    ELGTE_OPERATOR  shift and go to state 47
    NOT_OPERATOR    shift and go to state 48
    MXTRUE_OPERATOR shift and go to state 49
    MXFALSE_OPERATOR shift and go to state 50
    SIZE_OPERATOR   shift and go to state 51
    LOGITIZE_OPERATOR shift and go to state 52
    DIGITIZE_OPERATOR shift and go to state 53
    DO              shift and go to state 56
    GET             shift and go to state 57
    REDUCE_OPERATOR shift and go to state 58
    EXTEND_OPERATOR shift and go to state 59
    OCT_NUMBER      shift and go to state 60
    DEC_NUMBER      shift and go to state 61
    HEX_NUMBER      shift and go to state 62
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    expression                     shift and go to state 10
    statements_group               shift and go to state 122
    statement                      shift and go to state 124
    var_declaration                shift and go to state 15
    for                            shift and go to state 16
    switch                         shift and go to state 17
    command                        shift and go to state 18
    empty                          shift and go to state 78
    unary_operator                 shift and go to state 21
    base_values                    shift and go to state 22
    assignment                     shift and go to state 23
    indexing                       shift and go to state 24
    do                             shift and go to state 25
    get                            shift and go to state 26
    reduce                         shift and go to state 27
    extend                         shift and go to state 28
    number                         shift and go to state 54
    boolean                        shift and go to state 55

state 117

    (29) switch -> SWITCH expression NEWLINE FALSE . statements_group TRUE statements_group
    (25) statements_group -> . LBRACKET NEWLINE statements RBRACKET NEWLINE
    (26) statements_group -> . statement
    (27) statements_group -> . LBRACKET RBRACKET NEWLINE
    (13) statement -> . PLEASE statement THANKS NEWLINE
    (14) statement -> . var_declaration NEWLINE
    (15) statement -> . expression NEWLINE
    (16) statement -> . for
    (17) statement -> . switch
    (18) statement -> . command NEWLINE
    (19) statement -> . empty NEWLINE
    (78) var_declaration -> . VAR VARIABLE OS_BRACKET dimensions CS_BRACKET ASSIGNMENT initializer
    (79) var_declaration -> . VAR VARIABLE ASSIGNMENT expression
    (31) expression -> . expression binary_operator expression
    (37) expression -> . unary_operator expression
    (54) expression -> . base_values
    (55) expression -> . assignment
    (56) expression -> . indexing
    (57) expression -> . do
    (58) expression -> . get
    (59) expression -> . reduce
    (60) expression -> . extend
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . VARIABLE
    (24) for -> . FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group
    (28) switch -> . SWITCH expression NEWLINE TRUE statements_group FALSE statements_group
    (29) switch -> . SWITCH expression NEWLINE FALSE statements_group TRUE statements_group
    (20) command -> . MOVE
    (21) command -> . ROTATE_LEFT
    (22) command -> . ROTATE_RIGHT
    (23) command -> . GET_ENVIRONMENT
    (84) empty -> .
    (38) unary_operator -> . MXEQ_OPERATOR
    (39) unary_operator -> . MXLT_OPERATOR
    (40) unary_operator -> . MXGT_OPERATOR
    (41) unary_operator -> . MXLTE_OPERATOR
    (42) unary_operator -> . MXGTE_OPERATOR
    (43) unary_operator -> . ELEQ_OPERATOR
    (44) unary_operator -> . ELLT_OPERATOR
    (45) unary_operator -> . ELGT_OPERATOR
    (46) unary_operator -> . ELLTE_OPERATOR
    (47) unary_operator -> . ELGTE_OPERATOR
    (48) unary_operator -> . NOT_OPERATOR
    (49) unary_operator -> . MXTRUE_OPERATOR
    (50) unary_operator -> . MXFALSE_OPERATOR
    (51) unary_operator -> . SIZE_OPERATOR
    (52) unary_operator -> . LOGITIZE_OPERATOR
    (53) unary_operator -> . DIGITIZE_OPERATOR
    (75) base_values -> . number
    (76) base_values -> . boolean
    (30) assignment -> . expression ASSIGNMENT expression
    (80) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (63) do -> . DO VARIABLE call_parameters
    (67) get -> . GET VARIABLE
    (61) reduce -> . REDUCE_OPERATOR expression dimensions
    (62) extend -> . EXTEND_OPERATOR expression dimensions
    (70) number -> . OCT_NUMBER
    (71) number -> . DEC_NUMBER
    (72) number -> . HEX_NUMBER
    (73) boolean -> . TRUE
    (74) boolean -> . FALSE

    LBRACKET        shift and go to state 123
    PLEASE          shift and go to state 14
    VAR             shift and go to state 19
    VARIABLE        shift and go to state 20
    FOR             shift and go to state 30
    SWITCH          shift and go to state 31
    MOVE            shift and go to state 34
    ROTATE_LEFT     shift and go to state 35
    ROTATE_RIGHT    shift and go to state 36
    GET_ENVIRONMENT shift and go to state 37
    NEWLINE         reduce using rule 84 (empty -> .)
    MXEQ_OPERATOR   shift and go to state 38
    MXLT_OPERATOR   shift and go to state 39
    MXGT_OPERATOR   shift and go to state 40
    MXLTE_OPERATOR  shift and go to state 41
    MXGTE_OPERATOR  shift and go to state 42
    ELEQ_OPERATOR   shift and go to state 43
    ELLT_OPERATOR   shift and go to state 44
    ELGT_OPERATOR   shift and go to state 45
    ELLTE_OPERATOR  shift and go to state 46
    ELGTE_OPERATOR  shift and go to state 47
    NOT_OPERATOR    shift and go to state 48
    MXTRUE_OPERATOR shift and go to state 49
    MXFALSE_OPERATOR shift and go to state 50
    SIZE_OPERATOR   shift and go to state 51
    LOGITIZE_OPERATOR shift and go to state 52
    DIGITIZE_OPERATOR shift and go to state 53
    DO              shift and go to state 56
    GET             shift and go to state 57
    REDUCE_OPERATOR shift and go to state 58
    EXTEND_OPERATOR shift and go to state 59
    OCT_NUMBER      shift and go to state 60
    DEC_NUMBER      shift and go to state 61
    HEX_NUMBER      shift and go to state 62
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    expression                     shift and go to state 10
    statements_group               shift and go to state 125
    statement                      shift and go to state 124
    var_declaration                shift and go to state 15
    for                            shift and go to state 16
    switch                         shift and go to state 17
    command                        shift and go to state 18
    empty                          shift and go to state 78
    unary_operator                 shift and go to state 21
    base_values                    shift and go to state 22
    assignment                     shift and go to state 23
    indexing                       shift and go to state 24
    do                             shift and go to state 25
    get                            shift and go to state 26
    reduce                         shift and go to state 27
    extend                         shift and go to state 28
    number                         shift and go to state 54
    boolean                        shift and go to state 55

state 118

    (64) call_parameters -> call_parameter call_parameters .

    ASSIGNMENT      reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    OS_BRACKET      reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    PLUS            reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    MINUS           reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    MULTIPLY        reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    DIVIDE          reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    AND_OPERATOR    reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    NEWLINE         reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    RBRACKET        reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    LBRACKET        reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    VARIABLE        reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    MXEQ_OPERATOR   reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    MXLT_OPERATOR   reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    MXGT_OPERATOR   reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    MXLTE_OPERATOR  reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    MXGTE_OPERATOR  reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    ELEQ_OPERATOR   reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    ELLT_OPERATOR   reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    ELGT_OPERATOR   reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    ELLTE_OPERATOR  reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    ELGTE_OPERATOR  reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    NOT_OPERATOR    reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    MXTRUE_OPERATOR reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    MXFALSE_OPERATOR reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    SIZE_OPERATOR   reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    LOGITIZE_OPERATOR reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    DIGITIZE_OPERATOR reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    DO              reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    GET             reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    REDUCE_OPERATOR reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    EXTEND_OPERATOR reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    OCT_NUMBER      reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    DEC_NUMBER      reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    HEX_NUMBER      reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    TRUE            reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    FALSE           reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    COMMA           reduce using rule 64 (call_parameters -> call_parameter call_parameters .)
    CS_BRACKET      reduce using rule 64 (call_parameters -> call_parameter call_parameters .)


state 119

    (81) dimensions -> dimension COMMA dimensions .

    CS_BRACKET      reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    ASSIGNMENT      reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    OS_BRACKET      reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    PLUS            reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    MINUS           reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    MULTIPLY        reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    DIVIDE          reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    AND_OPERATOR    reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    NEWLINE         reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    RBRACKET        reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    LBRACKET        reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    VARIABLE        reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    MXEQ_OPERATOR   reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    MXLT_OPERATOR   reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    MXGT_OPERATOR   reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    MXLTE_OPERATOR  reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    MXGTE_OPERATOR  reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    ELEQ_OPERATOR   reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    ELLT_OPERATOR   reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    ELGT_OPERATOR   reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    ELLTE_OPERATOR  reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    ELGTE_OPERATOR  reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    NOT_OPERATOR    reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    MXTRUE_OPERATOR reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    MXFALSE_OPERATOR reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    SIZE_OPERATOR   reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    LOGITIZE_OPERATOR reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    DIGITIZE_OPERATOR reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    DO              reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    GET             reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    REDUCE_OPERATOR reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    EXTEND_OPERATOR reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    OCT_NUMBER      reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    DEC_NUMBER      reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    HEX_NUMBER      reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    TRUE            reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    FALSE           reduce using rule 81 (dimensions -> dimension COMMA dimensions .)
    COMMA           reduce using rule 81 (dimensions -> dimension COMMA dimensions .)


state 120

    (78) var_declaration -> VAR VARIABLE OS_BRACKET dimensions CS_BRACKET . ASSIGNMENT initializer

    ASSIGNMENT      shift and go to state 126


state 121

    (24) for -> FOR VARIABLE BOUNDARY VARIABLE STEP . VARIABLE statements_group

    VARIABLE        shift and go to state 127


state 122

    (28) switch -> SWITCH expression NEWLINE TRUE statements_group . FALSE statements_group

    FALSE           shift and go to state 128


state 123

    (25) statements_group -> LBRACKET . NEWLINE statements RBRACKET NEWLINE
    (27) statements_group -> LBRACKET . RBRACKET NEWLINE
    (68) expression -> LBRACKET . expression RBRACKET
    (31) expression -> . expression binary_operator expression
    (37) expression -> . unary_operator expression
    (54) expression -> . base_values
    (55) expression -> . assignment
    (56) expression -> . indexing
    (57) expression -> . do
    (58) expression -> . get
    (59) expression -> . reduce
    (60) expression -> . extend
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . VARIABLE
    (38) unary_operator -> . MXEQ_OPERATOR
    (39) unary_operator -> . MXLT_OPERATOR
    (40) unary_operator -> . MXGT_OPERATOR
    (41) unary_operator -> . MXLTE_OPERATOR
    (42) unary_operator -> . MXGTE_OPERATOR
    (43) unary_operator -> . ELEQ_OPERATOR
    (44) unary_operator -> . ELLT_OPERATOR
    (45) unary_operator -> . ELGT_OPERATOR
    (46) unary_operator -> . ELLTE_OPERATOR
    (47) unary_operator -> . ELGTE_OPERATOR
    (48) unary_operator -> . NOT_OPERATOR
    (49) unary_operator -> . MXTRUE_OPERATOR
    (50) unary_operator -> . MXFALSE_OPERATOR
    (51) unary_operator -> . SIZE_OPERATOR
    (52) unary_operator -> . LOGITIZE_OPERATOR
    (53) unary_operator -> . DIGITIZE_OPERATOR
    (75) base_values -> . number
    (76) base_values -> . boolean
    (30) assignment -> . expression ASSIGNMENT expression
    (80) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (63) do -> . DO VARIABLE call_parameters
    (67) get -> . GET VARIABLE
    (61) reduce -> . REDUCE_OPERATOR expression dimensions
    (62) extend -> . EXTEND_OPERATOR expression dimensions
    (70) number -> . OCT_NUMBER
    (71) number -> . DEC_NUMBER
    (72) number -> . HEX_NUMBER
    (73) boolean -> . TRUE
    (74) boolean -> . FALSE

    NEWLINE         shift and go to state 129
    RBRACKET        shift and go to state 130
    LBRACKET        shift and go to state 29
    VARIABLE        shift and go to state 20
    MXEQ_OPERATOR   shift and go to state 38
    MXLT_OPERATOR   shift and go to state 39
    MXGT_OPERATOR   shift and go to state 40
    MXLTE_OPERATOR  shift and go to state 41
    MXGTE_OPERATOR  shift and go to state 42
    ELEQ_OPERATOR   shift and go to state 43
    ELLT_OPERATOR   shift and go to state 44
    ELGT_OPERATOR   shift and go to state 45
    ELLTE_OPERATOR  shift and go to state 46
    ELGTE_OPERATOR  shift and go to state 47
    NOT_OPERATOR    shift and go to state 48
    MXTRUE_OPERATOR shift and go to state 49
    MXFALSE_OPERATOR shift and go to state 50
    SIZE_OPERATOR   shift and go to state 51
    LOGITIZE_OPERATOR shift and go to state 52
    DIGITIZE_OPERATOR shift and go to state 53
    DO              shift and go to state 56
    GET             shift and go to state 57
    REDUCE_OPERATOR shift and go to state 58
    EXTEND_OPERATOR shift and go to state 59
    OCT_NUMBER      shift and go to state 60
    DEC_NUMBER      shift and go to state 61
    HEX_NUMBER      shift and go to state 62
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    expression                     shift and go to state 84
    unary_operator                 shift and go to state 21
    base_values                    shift and go to state 22
    assignment                     shift and go to state 23
    indexing                       shift and go to state 24
    do                             shift and go to state 25
    get                            shift and go to state 26
    reduce                         shift and go to state 27
    extend                         shift and go to state 28
    number                         shift and go to state 54
    boolean                        shift and go to state 55

state 124

    (26) statements_group -> statement .

    FALSE           reduce using rule 26 (statements_group -> statement .)
    TRUE            reduce using rule 26 (statements_group -> statement .)
    PLEASE          reduce using rule 26 (statements_group -> statement .)
    VAR             reduce using rule 26 (statements_group -> statement .)
    LBRACKET        reduce using rule 26 (statements_group -> statement .)
    VARIABLE        reduce using rule 26 (statements_group -> statement .)
    FOR             reduce using rule 26 (statements_group -> statement .)
    SWITCH          reduce using rule 26 (statements_group -> statement .)
    MOVE            reduce using rule 26 (statements_group -> statement .)
    ROTATE_LEFT     reduce using rule 26 (statements_group -> statement .)
    ROTATE_RIGHT    reduce using rule 26 (statements_group -> statement .)
    GET_ENVIRONMENT reduce using rule 26 (statements_group -> statement .)
    MXEQ_OPERATOR   reduce using rule 26 (statements_group -> statement .)
    MXLT_OPERATOR   reduce using rule 26 (statements_group -> statement .)
    MXGT_OPERATOR   reduce using rule 26 (statements_group -> statement .)
    MXLTE_OPERATOR  reduce using rule 26 (statements_group -> statement .)
    MXGTE_OPERATOR  reduce using rule 26 (statements_group -> statement .)
    ELEQ_OPERATOR   reduce using rule 26 (statements_group -> statement .)
    ELLT_OPERATOR   reduce using rule 26 (statements_group -> statement .)
    ELGT_OPERATOR   reduce using rule 26 (statements_group -> statement .)
    ELLTE_OPERATOR  reduce using rule 26 (statements_group -> statement .)
    ELGTE_OPERATOR  reduce using rule 26 (statements_group -> statement .)
    NOT_OPERATOR    reduce using rule 26 (statements_group -> statement .)
    MXTRUE_OPERATOR reduce using rule 26 (statements_group -> statement .)
    MXFALSE_OPERATOR reduce using rule 26 (statements_group -> statement .)
    SIZE_OPERATOR   reduce using rule 26 (statements_group -> statement .)
    LOGITIZE_OPERATOR reduce using rule 26 (statements_group -> statement .)
    DIGITIZE_OPERATOR reduce using rule 26 (statements_group -> statement .)
    DO              reduce using rule 26 (statements_group -> statement .)
    GET             reduce using rule 26 (statements_group -> statement .)
    REDUCE_OPERATOR reduce using rule 26 (statements_group -> statement .)
    EXTEND_OPERATOR reduce using rule 26 (statements_group -> statement .)
    OCT_NUMBER      reduce using rule 26 (statements_group -> statement .)
    DEC_NUMBER      reduce using rule 26 (statements_group -> statement .)
    HEX_NUMBER      reduce using rule 26 (statements_group -> statement .)
    NEWLINE         reduce using rule 26 (statements_group -> statement .)
    RESULT          reduce using rule 26 (statements_group -> statement .)
    RBRACKET        reduce using rule 26 (statements_group -> statement .)
    THANKS          reduce using rule 26 (statements_group -> statement .)


state 125

    (29) switch -> SWITCH expression NEWLINE FALSE statements_group . TRUE statements_group

    TRUE            shift and go to state 131


state 126

    (78) var_declaration -> VAR VARIABLE OS_BRACKET dimensions CS_BRACKET ASSIGNMENT . initializer
    (77) initializer -> . base_values
    (75) base_values -> . number
    (76) base_values -> . boolean
    (70) number -> . OCT_NUMBER
    (71) number -> . DEC_NUMBER
    (72) number -> . HEX_NUMBER
    (73) boolean -> . TRUE
    (74) boolean -> . FALSE

    OCT_NUMBER      shift and go to state 60
    DEC_NUMBER      shift and go to state 61
    HEX_NUMBER      shift and go to state 62
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    initializer                    shift and go to state 132
    base_values                    shift and go to state 133
    number                         shift and go to state 54
    boolean                        shift and go to state 55

state 127

    (24) for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE . statements_group
    (25) statements_group -> . LBRACKET NEWLINE statements RBRACKET NEWLINE
    (26) statements_group -> . statement
    (27) statements_group -> . LBRACKET RBRACKET NEWLINE
    (13) statement -> . PLEASE statement THANKS NEWLINE
    (14) statement -> . var_declaration NEWLINE
    (15) statement -> . expression NEWLINE
    (16) statement -> . for
    (17) statement -> . switch
    (18) statement -> . command NEWLINE
    (19) statement -> . empty NEWLINE
    (78) var_declaration -> . VAR VARIABLE OS_BRACKET dimensions CS_BRACKET ASSIGNMENT initializer
    (79) var_declaration -> . VAR VARIABLE ASSIGNMENT expression
    (31) expression -> . expression binary_operator expression
    (37) expression -> . unary_operator expression
    (54) expression -> . base_values
    (55) expression -> . assignment
    (56) expression -> . indexing
    (57) expression -> . do
    (58) expression -> . get
    (59) expression -> . reduce
    (60) expression -> . extend
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . VARIABLE
    (24) for -> . FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group
    (28) switch -> . SWITCH expression NEWLINE TRUE statements_group FALSE statements_group
    (29) switch -> . SWITCH expression NEWLINE FALSE statements_group TRUE statements_group
    (20) command -> . MOVE
    (21) command -> . ROTATE_LEFT
    (22) command -> . ROTATE_RIGHT
    (23) command -> . GET_ENVIRONMENT
    (84) empty -> .
    (38) unary_operator -> . MXEQ_OPERATOR
    (39) unary_operator -> . MXLT_OPERATOR
    (40) unary_operator -> . MXGT_OPERATOR
    (41) unary_operator -> . MXLTE_OPERATOR
    (42) unary_operator -> . MXGTE_OPERATOR
    (43) unary_operator -> . ELEQ_OPERATOR
    (44) unary_operator -> . ELLT_OPERATOR
    (45) unary_operator -> . ELGT_OPERATOR
    (46) unary_operator -> . ELLTE_OPERATOR
    (47) unary_operator -> . ELGTE_OPERATOR
    (48) unary_operator -> . NOT_OPERATOR
    (49) unary_operator -> . MXTRUE_OPERATOR
    (50) unary_operator -> . MXFALSE_OPERATOR
    (51) unary_operator -> . SIZE_OPERATOR
    (52) unary_operator -> . LOGITIZE_OPERATOR
    (53) unary_operator -> . DIGITIZE_OPERATOR
    (75) base_values -> . number
    (76) base_values -> . boolean
    (30) assignment -> . expression ASSIGNMENT expression
    (80) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (63) do -> . DO VARIABLE call_parameters
    (67) get -> . GET VARIABLE
    (61) reduce -> . REDUCE_OPERATOR expression dimensions
    (62) extend -> . EXTEND_OPERATOR expression dimensions
    (70) number -> . OCT_NUMBER
    (71) number -> . DEC_NUMBER
    (72) number -> . HEX_NUMBER
    (73) boolean -> . TRUE
    (74) boolean -> . FALSE

    LBRACKET        shift and go to state 123
    PLEASE          shift and go to state 14
    VAR             shift and go to state 19
    VARIABLE        shift and go to state 20
    FOR             shift and go to state 30
    SWITCH          shift and go to state 31
    MOVE            shift and go to state 34
    ROTATE_LEFT     shift and go to state 35
    ROTATE_RIGHT    shift and go to state 36
    GET_ENVIRONMENT shift and go to state 37
    NEWLINE         reduce using rule 84 (empty -> .)
    MXEQ_OPERATOR   shift and go to state 38
    MXLT_OPERATOR   shift and go to state 39
    MXGT_OPERATOR   shift and go to state 40
    MXLTE_OPERATOR  shift and go to state 41
    MXGTE_OPERATOR  shift and go to state 42
    ELEQ_OPERATOR   shift and go to state 43
    ELLT_OPERATOR   shift and go to state 44
    ELGT_OPERATOR   shift and go to state 45
    ELLTE_OPERATOR  shift and go to state 46
    ELGTE_OPERATOR  shift and go to state 47
    NOT_OPERATOR    shift and go to state 48
    MXTRUE_OPERATOR shift and go to state 49
    MXFALSE_OPERATOR shift and go to state 50
    SIZE_OPERATOR   shift and go to state 51
    LOGITIZE_OPERATOR shift and go to state 52
    DIGITIZE_OPERATOR shift and go to state 53
    DO              shift and go to state 56
    GET             shift and go to state 57
    REDUCE_OPERATOR shift and go to state 58
    EXTEND_OPERATOR shift and go to state 59
    OCT_NUMBER      shift and go to state 60
    DEC_NUMBER      shift and go to state 61
    HEX_NUMBER      shift and go to state 62
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    statements_group               shift and go to state 134
    statement                      shift and go to state 124
    var_declaration                shift and go to state 15
    expression                     shift and go to state 10
    for                            shift and go to state 16
    switch                         shift and go to state 17
    command                        shift and go to state 18
    empty                          shift and go to state 78
    unary_operator                 shift and go to state 21
    base_values                    shift and go to state 22
    assignment                     shift and go to state 23
    indexing                       shift and go to state 24
    do                             shift and go to state 25
    get                            shift and go to state 26
    reduce                         shift and go to state 27
    extend                         shift and go to state 28
    number                         shift and go to state 54
    boolean                        shift and go to state 55

state 128

    (28) switch -> SWITCH expression NEWLINE TRUE statements_group FALSE . statements_group
    (25) statements_group -> . LBRACKET NEWLINE statements RBRACKET NEWLINE
    (26) statements_group -> . statement
    (27) statements_group -> . LBRACKET RBRACKET NEWLINE
    (13) statement -> . PLEASE statement THANKS NEWLINE
    (14) statement -> . var_declaration NEWLINE
    (15) statement -> . expression NEWLINE
    (16) statement -> . for
    (17) statement -> . switch
    (18) statement -> . command NEWLINE
    (19) statement -> . empty NEWLINE
    (78) var_declaration -> . VAR VARIABLE OS_BRACKET dimensions CS_BRACKET ASSIGNMENT initializer
    (79) var_declaration -> . VAR VARIABLE ASSIGNMENT expression
    (31) expression -> . expression binary_operator expression
    (37) expression -> . unary_operator expression
    (54) expression -> . base_values
    (55) expression -> . assignment
    (56) expression -> . indexing
    (57) expression -> . do
    (58) expression -> . get
    (59) expression -> . reduce
    (60) expression -> . extend
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . VARIABLE
    (24) for -> . FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group
    (28) switch -> . SWITCH expression NEWLINE TRUE statements_group FALSE statements_group
    (29) switch -> . SWITCH expression NEWLINE FALSE statements_group TRUE statements_group
    (20) command -> . MOVE
    (21) command -> . ROTATE_LEFT
    (22) command -> . ROTATE_RIGHT
    (23) command -> . GET_ENVIRONMENT
    (84) empty -> .
    (38) unary_operator -> . MXEQ_OPERATOR
    (39) unary_operator -> . MXLT_OPERATOR
    (40) unary_operator -> . MXGT_OPERATOR
    (41) unary_operator -> . MXLTE_OPERATOR
    (42) unary_operator -> . MXGTE_OPERATOR
    (43) unary_operator -> . ELEQ_OPERATOR
    (44) unary_operator -> . ELLT_OPERATOR
    (45) unary_operator -> . ELGT_OPERATOR
    (46) unary_operator -> . ELLTE_OPERATOR
    (47) unary_operator -> . ELGTE_OPERATOR
    (48) unary_operator -> . NOT_OPERATOR
    (49) unary_operator -> . MXTRUE_OPERATOR
    (50) unary_operator -> . MXFALSE_OPERATOR
    (51) unary_operator -> . SIZE_OPERATOR
    (52) unary_operator -> . LOGITIZE_OPERATOR
    (53) unary_operator -> . DIGITIZE_OPERATOR
    (75) base_values -> . number
    (76) base_values -> . boolean
    (30) assignment -> . expression ASSIGNMENT expression
    (80) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (63) do -> . DO VARIABLE call_parameters
    (67) get -> . GET VARIABLE
    (61) reduce -> . REDUCE_OPERATOR expression dimensions
    (62) extend -> . EXTEND_OPERATOR expression dimensions
    (70) number -> . OCT_NUMBER
    (71) number -> . DEC_NUMBER
    (72) number -> . HEX_NUMBER
    (73) boolean -> . TRUE
    (74) boolean -> . FALSE

    LBRACKET        shift and go to state 123
    PLEASE          shift and go to state 14
    VAR             shift and go to state 19
    VARIABLE        shift and go to state 20
    FOR             shift and go to state 30
    SWITCH          shift and go to state 31
    MOVE            shift and go to state 34
    ROTATE_LEFT     shift and go to state 35
    ROTATE_RIGHT    shift and go to state 36
    GET_ENVIRONMENT shift and go to state 37
    NEWLINE         reduce using rule 84 (empty -> .)
    MXEQ_OPERATOR   shift and go to state 38
    MXLT_OPERATOR   shift and go to state 39
    MXGT_OPERATOR   shift and go to state 40
    MXLTE_OPERATOR  shift and go to state 41
    MXGTE_OPERATOR  shift and go to state 42
    ELEQ_OPERATOR   shift and go to state 43
    ELLT_OPERATOR   shift and go to state 44
    ELGT_OPERATOR   shift and go to state 45
    ELLTE_OPERATOR  shift and go to state 46
    ELGTE_OPERATOR  shift and go to state 47
    NOT_OPERATOR    shift and go to state 48
    MXTRUE_OPERATOR shift and go to state 49
    MXFALSE_OPERATOR shift and go to state 50
    SIZE_OPERATOR   shift and go to state 51
    LOGITIZE_OPERATOR shift and go to state 52
    DIGITIZE_OPERATOR shift and go to state 53
    DO              shift and go to state 56
    GET             shift and go to state 57
    REDUCE_OPERATOR shift and go to state 58
    EXTEND_OPERATOR shift and go to state 59
    OCT_NUMBER      shift and go to state 60
    DEC_NUMBER      shift and go to state 61
    HEX_NUMBER      shift and go to state 62
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    expression                     shift and go to state 10
    statements_group               shift and go to state 135
    statement                      shift and go to state 124
    var_declaration                shift and go to state 15
    for                            shift and go to state 16
    switch                         shift and go to state 17
    command                        shift and go to state 18
    empty                          shift and go to state 78
    unary_operator                 shift and go to state 21
    base_values                    shift and go to state 22
    assignment                     shift and go to state 23
    indexing                       shift and go to state 24
    do                             shift and go to state 25
    get                            shift and go to state 26
    reduce                         shift and go to state 27
    extend                         shift and go to state 28
    number                         shift and go to state 54
    boolean                        shift and go to state 55

state 129

    (25) statements_group -> LBRACKET NEWLINE . statements RBRACKET NEWLINE
    (11) statements -> . statement statements
    (12) statements -> . statement
    (13) statement -> . PLEASE statement THANKS NEWLINE
    (14) statement -> . var_declaration NEWLINE
    (15) statement -> . expression NEWLINE
    (16) statement -> . for
    (17) statement -> . switch
    (18) statement -> . command NEWLINE
    (19) statement -> . empty NEWLINE
    (78) var_declaration -> . VAR VARIABLE OS_BRACKET dimensions CS_BRACKET ASSIGNMENT initializer
    (79) var_declaration -> . VAR VARIABLE ASSIGNMENT expression
    (31) expression -> . expression binary_operator expression
    (37) expression -> . unary_operator expression
    (54) expression -> . base_values
    (55) expression -> . assignment
    (56) expression -> . indexing
    (57) expression -> . do
    (58) expression -> . get
    (59) expression -> . reduce
    (60) expression -> . extend
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . VARIABLE
    (24) for -> . FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group
    (28) switch -> . SWITCH expression NEWLINE TRUE statements_group FALSE statements_group
    (29) switch -> . SWITCH expression NEWLINE FALSE statements_group TRUE statements_group
    (20) command -> . MOVE
    (21) command -> . ROTATE_LEFT
    (22) command -> . ROTATE_RIGHT
    (23) command -> . GET_ENVIRONMENT
    (84) empty -> .
    (38) unary_operator -> . MXEQ_OPERATOR
    (39) unary_operator -> . MXLT_OPERATOR
    (40) unary_operator -> . MXGT_OPERATOR
    (41) unary_operator -> . MXLTE_OPERATOR
    (42) unary_operator -> . MXGTE_OPERATOR
    (43) unary_operator -> . ELEQ_OPERATOR
    (44) unary_operator -> . ELLT_OPERATOR
    (45) unary_operator -> . ELGT_OPERATOR
    (46) unary_operator -> . ELLTE_OPERATOR
    (47) unary_operator -> . ELGTE_OPERATOR
    (48) unary_operator -> . NOT_OPERATOR
    (49) unary_operator -> . MXTRUE_OPERATOR
    (50) unary_operator -> . MXFALSE_OPERATOR
    (51) unary_operator -> . SIZE_OPERATOR
    (52) unary_operator -> . LOGITIZE_OPERATOR
    (53) unary_operator -> . DIGITIZE_OPERATOR
    (75) base_values -> . number
    (76) base_values -> . boolean
    (30) assignment -> . expression ASSIGNMENT expression
    (80) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (63) do -> . DO VARIABLE call_parameters
    (67) get -> . GET VARIABLE
    (61) reduce -> . REDUCE_OPERATOR expression dimensions
    (62) extend -> . EXTEND_OPERATOR expression dimensions
    (70) number -> . OCT_NUMBER
    (71) number -> . DEC_NUMBER
    (72) number -> . HEX_NUMBER
    (73) boolean -> . TRUE
    (74) boolean -> . FALSE

    PLEASE          shift and go to state 14
    VAR             shift and go to state 19
    LBRACKET        shift and go to state 29
    VARIABLE        shift and go to state 20
    FOR             shift and go to state 30
    SWITCH          shift and go to state 31
    MOVE            shift and go to state 34
    ROTATE_LEFT     shift and go to state 35
    ROTATE_RIGHT    shift and go to state 36
    GET_ENVIRONMENT shift and go to state 37
    NEWLINE         reduce using rule 84 (empty -> .)
    MXEQ_OPERATOR   shift and go to state 38
    MXLT_OPERATOR   shift and go to state 39
    MXGT_OPERATOR   shift and go to state 40
    MXLTE_OPERATOR  shift and go to state 41
    MXGTE_OPERATOR  shift and go to state 42
    ELEQ_OPERATOR   shift and go to state 43
    ELLT_OPERATOR   shift and go to state 44
    ELGT_OPERATOR   shift and go to state 45
    ELLTE_OPERATOR  shift and go to state 46
    ELGTE_OPERATOR  shift and go to state 47
    NOT_OPERATOR    shift and go to state 48
    MXTRUE_OPERATOR shift and go to state 49
    MXFALSE_OPERATOR shift and go to state 50
    SIZE_OPERATOR   shift and go to state 51
    LOGITIZE_OPERATOR shift and go to state 52
    DIGITIZE_OPERATOR shift and go to state 53
    DO              shift and go to state 56
    GET             shift and go to state 57
    REDUCE_OPERATOR shift and go to state 58
    EXTEND_OPERATOR shift and go to state 59
    OCT_NUMBER      shift and go to state 60
    DEC_NUMBER      shift and go to state 61
    HEX_NUMBER      shift and go to state 62
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    statements                     shift and go to state 136
    statement                      shift and go to state 13
    var_declaration                shift and go to state 15
    expression                     shift and go to state 10
    for                            shift and go to state 16
    switch                         shift and go to state 17
    command                        shift and go to state 18
    empty                          shift and go to state 78
    unary_operator                 shift and go to state 21
    base_values                    shift and go to state 22
    assignment                     shift and go to state 23
    indexing                       shift and go to state 24
    do                             shift and go to state 25
    get                            shift and go to state 26
    reduce                         shift and go to state 27
    extend                         shift and go to state 28
    number                         shift and go to state 54
    boolean                        shift and go to state 55

state 130

    (27) statements_group -> LBRACKET RBRACKET . NEWLINE

    NEWLINE         shift and go to state 137


state 131

    (29) switch -> SWITCH expression NEWLINE FALSE statements_group TRUE . statements_group
    (25) statements_group -> . LBRACKET NEWLINE statements RBRACKET NEWLINE
    (26) statements_group -> . statement
    (27) statements_group -> . LBRACKET RBRACKET NEWLINE
    (13) statement -> . PLEASE statement THANKS NEWLINE
    (14) statement -> . var_declaration NEWLINE
    (15) statement -> . expression NEWLINE
    (16) statement -> . for
    (17) statement -> . switch
    (18) statement -> . command NEWLINE
    (19) statement -> . empty NEWLINE
    (78) var_declaration -> . VAR VARIABLE OS_BRACKET dimensions CS_BRACKET ASSIGNMENT initializer
    (79) var_declaration -> . VAR VARIABLE ASSIGNMENT expression
    (31) expression -> . expression binary_operator expression
    (37) expression -> . unary_operator expression
    (54) expression -> . base_values
    (55) expression -> . assignment
    (56) expression -> . indexing
    (57) expression -> . do
    (58) expression -> . get
    (59) expression -> . reduce
    (60) expression -> . extend
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . VARIABLE
    (24) for -> . FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group
    (28) switch -> . SWITCH expression NEWLINE TRUE statements_group FALSE statements_group
    (29) switch -> . SWITCH expression NEWLINE FALSE statements_group TRUE statements_group
    (20) command -> . MOVE
    (21) command -> . ROTATE_LEFT
    (22) command -> . ROTATE_RIGHT
    (23) command -> . GET_ENVIRONMENT
    (84) empty -> .
    (38) unary_operator -> . MXEQ_OPERATOR
    (39) unary_operator -> . MXLT_OPERATOR
    (40) unary_operator -> . MXGT_OPERATOR
    (41) unary_operator -> . MXLTE_OPERATOR
    (42) unary_operator -> . MXGTE_OPERATOR
    (43) unary_operator -> . ELEQ_OPERATOR
    (44) unary_operator -> . ELLT_OPERATOR
    (45) unary_operator -> . ELGT_OPERATOR
    (46) unary_operator -> . ELLTE_OPERATOR
    (47) unary_operator -> . ELGTE_OPERATOR
    (48) unary_operator -> . NOT_OPERATOR
    (49) unary_operator -> . MXTRUE_OPERATOR
    (50) unary_operator -> . MXFALSE_OPERATOR
    (51) unary_operator -> . SIZE_OPERATOR
    (52) unary_operator -> . LOGITIZE_OPERATOR
    (53) unary_operator -> . DIGITIZE_OPERATOR
    (75) base_values -> . number
    (76) base_values -> . boolean
    (30) assignment -> . expression ASSIGNMENT expression
    (80) indexing -> . expression OS_BRACKET dimensions CS_BRACKET
    (63) do -> . DO VARIABLE call_parameters
    (67) get -> . GET VARIABLE
    (61) reduce -> . REDUCE_OPERATOR expression dimensions
    (62) extend -> . EXTEND_OPERATOR expression dimensions
    (70) number -> . OCT_NUMBER
    (71) number -> . DEC_NUMBER
    (72) number -> . HEX_NUMBER
    (73) boolean -> . TRUE
    (74) boolean -> . FALSE

    LBRACKET        shift and go to state 123
    PLEASE          shift and go to state 14
    VAR             shift and go to state 19
    VARIABLE        shift and go to state 20
    FOR             shift and go to state 30
    SWITCH          shift and go to state 31
    MOVE            shift and go to state 34
    ROTATE_LEFT     shift and go to state 35
    ROTATE_RIGHT    shift and go to state 36
    GET_ENVIRONMENT shift and go to state 37
    NEWLINE         reduce using rule 84 (empty -> .)
    MXEQ_OPERATOR   shift and go to state 38
    MXLT_OPERATOR   shift and go to state 39
    MXGT_OPERATOR   shift and go to state 40
    MXLTE_OPERATOR  shift and go to state 41
    MXGTE_OPERATOR  shift and go to state 42
    ELEQ_OPERATOR   shift and go to state 43
    ELLT_OPERATOR   shift and go to state 44
    ELGT_OPERATOR   shift and go to state 45
    ELLTE_OPERATOR  shift and go to state 46
    ELGTE_OPERATOR  shift and go to state 47
    NOT_OPERATOR    shift and go to state 48
    MXTRUE_OPERATOR shift and go to state 49
    MXFALSE_OPERATOR shift and go to state 50
    SIZE_OPERATOR   shift and go to state 51
    LOGITIZE_OPERATOR shift and go to state 52
    DIGITIZE_OPERATOR shift and go to state 53
    DO              shift and go to state 56
    GET             shift and go to state 57
    REDUCE_OPERATOR shift and go to state 58
    EXTEND_OPERATOR shift and go to state 59
    OCT_NUMBER      shift and go to state 60
    DEC_NUMBER      shift and go to state 61
    HEX_NUMBER      shift and go to state 62
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    expression                     shift and go to state 10
    statements_group               shift and go to state 138
    statement                      shift and go to state 124
    var_declaration                shift and go to state 15
    for                            shift and go to state 16
    switch                         shift and go to state 17
    command                        shift and go to state 18
    empty                          shift and go to state 78
    unary_operator                 shift and go to state 21
    base_values                    shift and go to state 22
    assignment                     shift and go to state 23
    indexing                       shift and go to state 24
    do                             shift and go to state 25
    get                            shift and go to state 26
    reduce                         shift and go to state 27
    extend                         shift and go to state 28
    number                         shift and go to state 54
    boolean                        shift and go to state 55

state 132

    (78) var_declaration -> VAR VARIABLE OS_BRACKET dimensions CS_BRACKET ASSIGNMENT initializer .

    NEWLINE         reduce using rule 78 (var_declaration -> VAR VARIABLE OS_BRACKET dimensions CS_BRACKET ASSIGNMENT initializer .)


state 133

    (77) initializer -> base_values .

    NEWLINE         reduce using rule 77 (initializer -> base_values .)


state 134

    (24) for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .

    PLEASE          reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    VAR             reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    LBRACKET        reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    VARIABLE        reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    FOR             reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    SWITCH          reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    MOVE            reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    ROTATE_LEFT     reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    ROTATE_RIGHT    reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    GET_ENVIRONMENT reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    MXEQ_OPERATOR   reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    MXLT_OPERATOR   reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    MXGT_OPERATOR   reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    MXLTE_OPERATOR  reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    MXGTE_OPERATOR  reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    ELEQ_OPERATOR   reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    ELLT_OPERATOR   reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    ELGT_OPERATOR   reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    ELLTE_OPERATOR  reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    ELGTE_OPERATOR  reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    NOT_OPERATOR    reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    MXTRUE_OPERATOR reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    MXFALSE_OPERATOR reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    SIZE_OPERATOR   reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    LOGITIZE_OPERATOR reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    DIGITIZE_OPERATOR reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    DO              reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    GET             reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    REDUCE_OPERATOR reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    EXTEND_OPERATOR reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    OCT_NUMBER      reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    DEC_NUMBER      reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    HEX_NUMBER      reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    TRUE            reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    FALSE           reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    NEWLINE         reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    RESULT          reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    RBRACKET        reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)
    THANKS          reduce using rule 24 (for -> FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE statements_group .)


state 135

    (28) switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .

    PLEASE          reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    VAR             reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    LBRACKET        reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    VARIABLE        reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    FOR             reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    SWITCH          reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    MOVE            reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    ROTATE_LEFT     reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    ROTATE_RIGHT    reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    GET_ENVIRONMENT reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    MXEQ_OPERATOR   reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    MXLT_OPERATOR   reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    MXGT_OPERATOR   reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    MXLTE_OPERATOR  reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    MXGTE_OPERATOR  reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    ELEQ_OPERATOR   reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    ELLT_OPERATOR   reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    ELGT_OPERATOR   reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    ELLTE_OPERATOR  reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    ELGTE_OPERATOR  reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    NOT_OPERATOR    reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    MXTRUE_OPERATOR reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    MXFALSE_OPERATOR reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    SIZE_OPERATOR   reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    LOGITIZE_OPERATOR reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    DIGITIZE_OPERATOR reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    DO              reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    GET             reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    REDUCE_OPERATOR reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    EXTEND_OPERATOR reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    OCT_NUMBER      reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    DEC_NUMBER      reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    HEX_NUMBER      reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    TRUE            reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    FALSE           reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    NEWLINE         reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    RESULT          reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    RBRACKET        reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)
    THANKS          reduce using rule 28 (switch -> SWITCH expression NEWLINE TRUE statements_group FALSE statements_group .)


state 136

    (25) statements_group -> LBRACKET NEWLINE statements . RBRACKET NEWLINE

    RBRACKET        shift and go to state 139


state 137

    (27) statements_group -> LBRACKET RBRACKET NEWLINE .

    FALSE           reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    TRUE            reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    PLEASE          reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    VAR             reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    LBRACKET        reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    VARIABLE        reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    FOR             reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    SWITCH          reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    MOVE            reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    ROTATE_LEFT     reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    ROTATE_RIGHT    reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    GET_ENVIRONMENT reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    MXEQ_OPERATOR   reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    MXLT_OPERATOR   reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    MXGT_OPERATOR   reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    MXLTE_OPERATOR  reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    MXGTE_OPERATOR  reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    ELEQ_OPERATOR   reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    ELLT_OPERATOR   reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    ELGT_OPERATOR   reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    ELLTE_OPERATOR  reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    ELGTE_OPERATOR  reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    NOT_OPERATOR    reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    MXTRUE_OPERATOR reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    MXFALSE_OPERATOR reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    SIZE_OPERATOR   reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    LOGITIZE_OPERATOR reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    DIGITIZE_OPERATOR reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    DO              reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    GET             reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    REDUCE_OPERATOR reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    EXTEND_OPERATOR reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    OCT_NUMBER      reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    DEC_NUMBER      reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    HEX_NUMBER      reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    NEWLINE         reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    RESULT          reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    RBRACKET        reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)
    THANKS          reduce using rule 27 (statements_group -> LBRACKET RBRACKET NEWLINE .)


state 138

    (29) switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .

    PLEASE          reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    VAR             reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    LBRACKET        reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    VARIABLE        reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    FOR             reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    SWITCH          reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    MOVE            reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    ROTATE_LEFT     reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    ROTATE_RIGHT    reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    GET_ENVIRONMENT reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    MXEQ_OPERATOR   reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    MXLT_OPERATOR   reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    MXGT_OPERATOR   reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    MXLTE_OPERATOR  reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    MXGTE_OPERATOR  reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    ELEQ_OPERATOR   reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    ELLT_OPERATOR   reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    ELGT_OPERATOR   reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    ELLTE_OPERATOR  reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    ELGTE_OPERATOR  reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    NOT_OPERATOR    reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    MXTRUE_OPERATOR reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    MXFALSE_OPERATOR reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    SIZE_OPERATOR   reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    LOGITIZE_OPERATOR reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    DIGITIZE_OPERATOR reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    DO              reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    GET             reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    REDUCE_OPERATOR reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    EXTEND_OPERATOR reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    OCT_NUMBER      reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    DEC_NUMBER      reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    HEX_NUMBER      reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    TRUE            reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    FALSE           reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    NEWLINE         reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    RESULT          reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    RBRACKET        reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)
    THANKS          reduce using rule 29 (switch -> SWITCH expression NEWLINE FALSE statements_group TRUE statements_group .)


state 139

    (25) statements_group -> LBRACKET NEWLINE statements RBRACKET . NEWLINE

    NEWLINE         shift and go to state 140


state 140

    (25) statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .

    FALSE           reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    TRUE            reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    PLEASE          reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    VAR             reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    LBRACKET        reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    VARIABLE        reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    FOR             reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    SWITCH          reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    MOVE            reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    ROTATE_LEFT     reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    ROTATE_RIGHT    reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    GET_ENVIRONMENT reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    MXEQ_OPERATOR   reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    MXLT_OPERATOR   reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    MXGT_OPERATOR   reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    MXLTE_OPERATOR  reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    MXGTE_OPERATOR  reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    ELEQ_OPERATOR   reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    ELLT_OPERATOR   reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    ELGT_OPERATOR   reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    ELLTE_OPERATOR  reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    ELGTE_OPERATOR  reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    NOT_OPERATOR    reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    MXTRUE_OPERATOR reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    MXFALSE_OPERATOR reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    SIZE_OPERATOR   reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    LOGITIZE_OPERATOR reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    DIGITIZE_OPERATOR reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    DO              reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    GET             reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    REDUCE_OPERATOR reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    EXTEND_OPERATOR reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    OCT_NUMBER      reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    DEC_NUMBER      reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    HEX_NUMBER      reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    NEWLINE         reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    RESULT          reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    RBRACKET        reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)
    THANKS          reduce using rule 25 (statements_group -> LBRACKET NEWLINE statements RBRACKET NEWLINE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ASSIGNMENT in state 83 resolved as shift
WARNING: shift/reduce conflict for OS_BRACKET in state 83 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 83 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 83 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 83 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 83 resolved as shift
WARNING: shift/reduce conflict for AND_OPERATOR in state 83 resolved as shift
WARNING: shift/reduce conflict for ASSIGNMENT in state 93 resolved as shift
WARNING: shift/reduce conflict for OS_BRACKET in state 93 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 93 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 93 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 93 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 93 resolved as shift
WARNING: shift/reduce conflict for AND_OPERATOR in state 93 resolved as shift
WARNING: shift/reduce conflict for ASSIGNMENT in state 95 resolved as shift
WARNING: shift/reduce conflict for OS_BRACKET in state 95 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 95 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 95 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 95 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 95 resolved as shift
WARNING: shift/reduce conflict for AND_OPERATOR in state 95 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 97 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 105 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 105 resolved as shift
WARNING: shift/reduce conflict for MXEQ_OPERATOR in state 105 resolved as shift
WARNING: shift/reduce conflict for MXLT_OPERATOR in state 105 resolved as shift
WARNING: shift/reduce conflict for MXGT_OPERATOR in state 105 resolved as shift
WARNING: shift/reduce conflict for MXLTE_OPERATOR in state 105 resolved as shift
WARNING: shift/reduce conflict for MXGTE_OPERATOR in state 105 resolved as shift
WARNING: shift/reduce conflict for ELEQ_OPERATOR in state 105 resolved as shift
WARNING: shift/reduce conflict for ELLT_OPERATOR in state 105 resolved as shift
WARNING: shift/reduce conflict for ELGT_OPERATOR in state 105 resolved as shift
WARNING: shift/reduce conflict for ELLTE_OPERATOR in state 105 resolved as shift
WARNING: shift/reduce conflict for ELGTE_OPERATOR in state 105 resolved as shift
WARNING: shift/reduce conflict for NOT_OPERATOR in state 105 resolved as shift
WARNING: shift/reduce conflict for MXTRUE_OPERATOR in state 105 resolved as shift
WARNING: shift/reduce conflict for MXFALSE_OPERATOR in state 105 resolved as shift
WARNING: shift/reduce conflict for SIZE_OPERATOR in state 105 resolved as shift
WARNING: shift/reduce conflict for LOGITIZE_OPERATOR in state 105 resolved as shift
WARNING: shift/reduce conflict for DIGITIZE_OPERATOR in state 105 resolved as shift
WARNING: shift/reduce conflict for DO in state 105 resolved as shift
WARNING: shift/reduce conflict for GET in state 105 resolved as shift
WARNING: shift/reduce conflict for REDUCE_OPERATOR in state 105 resolved as shift
WARNING: shift/reduce conflict for EXTEND_OPERATOR in state 105 resolved as shift
WARNING: shift/reduce conflict for OCT_NUMBER in state 105 resolved as shift
WARNING: shift/reduce conflict for DEC_NUMBER in state 105 resolved as shift
WARNING: shift/reduce conflict for HEX_NUMBER in state 105 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 105 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 105 resolved as shift
WARNING: shift/reduce conflict for ASSIGNMENT in state 106 resolved as shift
WARNING: shift/reduce conflict for OS_BRACKET in state 106 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 106 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 106 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 106 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 106 resolved as shift
WARNING: shift/reduce conflict for AND_OPERATOR in state 106 resolved as shift
WARNING: reduce/reduce conflict in state 63 resolved using rule (parameters -> VARIABLE)
WARNING: rejected rule (empty -> <empty>) in state 63
